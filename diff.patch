diff --git a/.devcontainer/Dockerfile b/.devcontainer/Dockerfile
index 2a009e7..e196d45 100644
--- a/.devcontainer/Dockerfile
+++ b/.devcontainer/Dockerfile
@@ -1,8 +1,8 @@
-FROM mcr.microsoft.com/vscode/devcontainers/python:3
-ENV PYTHONUNBUFFERED=1
-# Update args in docker-compose.yaml to set the UID/GID of the "vscode" user.
-ARG USER_UID=1000
-ARG USER_GID=$USER_UID
-RUN if [ "$USER_GID" != "1000" ] || [ "$USER_UID" != "1000" ]; then groupmod --gid $USER_GID vscode && usermod --uid $USER_UID --gid $USER_GID vscode; fi
-# Install npm
-RUN apt-get update && export DEBIAN_FRONTEND=noninteractive && apt-get -y install --no-install-recommends python3 python3-pip npm
+FROM mcr.microsoft.com/vscode/devcontainers/python:3
+ENV PYTHONUNBUFFERED=1
+# Update args in docker-compose.yaml to set the UID/GID of the "vscode" user.
+ARG USER_UID=1000
+ARG USER_GID=$USER_UID
+RUN if [ "$USER_GID" != "1000" ] || [ "$USER_UID" != "1000" ]; then groupmod --gid $USER_GID vscode && usermod --uid $USER_UID --gid $USER_GID vscode; fi
+# Install npm
+RUN apt-get update && export DEBIAN_FRONTEND=noninteractive && apt-get -y install --no-install-recommends python3 python3-pip npm
diff --git a/.devcontainer/devcontainer.json b/.devcontainer/devcontainer.json
index 22cb625..751d12f 100644
--- a/.devcontainer/devcontainer.json
+++ b/.devcontainer/devcontainer.json
@@ -1,20 +1,20 @@
-{
-    "name": "Python 3 & mongodb",
-    "dockerComposeFile": "docker-compose.yml",
-    "service": "app",
-    "workspaceFolder": "/workspace",
-    // Add the IDs of extensions you want installed when the container is created.
-    "extensions": [
-        "ms-python.python",
-        "ms-python.vscode-pylance",
-        "mongodb.mongodb-vscode",
-        "streetsidesoftware.code-spell-checker"
-    ],
-    // Use 'forwardPorts' to make a list of ports inside the container available locally.
-    "forwardPorts": [5015, 27017],
-    // Use 'postCreateCommand' to run commands after the container is created.
-    // "postCreateCommand" : "",
-    "remoteUser": "vscode",
-    "postCreateCommand" : "pip3 install --user -r backend/requirements.txt; npm install --prefix web",
-
-}
+{
+    "name": "Python 3 & mongodb",
+    "dockerComposeFile": "docker-compose.yml",
+    "service": "app",
+    "workspaceFolder": "/workspace",
+    // Add the IDs of extensions you want installed when the container is created.
+    "extensions": [
+        "ms-python.python",
+        "ms-python.vscode-pylance",
+        "mongodb.mongodb-vscode",
+        "streetsidesoftware.code-spell-checker"
+    ],
+    // Use 'forwardPorts' to make a list of ports inside the container available locally.
+    "forwardPorts": [5015, 27017],
+    // Use 'postCreateCommand' to run commands after the container is created.
+    // "postCreateCommand" : "",
+    "remoteUser": "vscode",
+    "postCreateCommand" : "pip3 install --user -r backend/requirements.txt; npm install --prefix web",
+
+}
diff --git a/.devcontainer/docker-compose.yml b/.devcontainer/docker-compose.yml
index 7b6224e..d47ae51 100644
--- a/.devcontainer/docker-compose.yml
+++ b/.devcontainer/docker-compose.yml
@@ -1,22 +1,22 @@
-version: '3'
-services:
-  app:
-    build:
-      context: ..
-      dockerfile: .devcontainer/Dockerfile
-      args:
-        VARIANT: 3.9
-        USER_UID: 1000
-        USER_GID: 1000
-    volumes:
-      - ..:/workspace:cached
-    command: sleep infinity
-    network_mode: service:db
-    user: vscode
-  db:
-    image: mongo:latest
-    restart: unless-stopped
-    volumes:
-      - mongodb-data:/data/db
-volumes:
+version: '3'
+services:
+  app:
+    build:
+      context: ..
+      dockerfile: .devcontainer/Dockerfile
+      args:
+        VARIANT: 3.9
+        USER_UID: 1000
+        USER_GID: 1000
+    volumes:
+      - ..:/workspace:cached
+    command: sleep infinity
+    network_mode: service:db
+    user: vscode
+  db:
+    image: mongo:latest
+    restart: unless-stopped
+    volumes:
+      - mongodb-data:/data/db
+volumes:
   mongodb-data:
\ No newline at end of file
diff --git a/.gitignore b/.gitignore
index bd0b2ab..98b6f23 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,12 +1,12 @@
-# Python
-*.pyc
-__pycache__
-__pycache__/
-.vs
-.venv/Scripts/
-.venv/pyvenv.cfg
-.venv/pyvenv.cfg
-venv/
-.venv/
-# Docker
+# Python
+*.pyc
+__pycache__
+__pycache__/
+.vs
+.venv/Scripts/
+.venv/pyvenv.cfg
+.venv/pyvenv.cfg
+venv/
+.venv/
+# Docker
 .dockerignore
\ No newline at end of file
diff --git a/.vscode/launch.json b/.vscode/launch.json
index 1f01e55..9942197 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -1,45 +1,45 @@
-{
-    "version": "0.2.0",
-    "configurations": [
-        {
-            "name": "lab1-web",
-            "type": "node-terminal",
-            "request": "launch",
-            "command": "npm run dev",
-            "cwd": "${workspaceFolder}/web",
-            "presentation": {
-            "hidden": true
-            }
-        },
-        {
-            "name": "lab1-backend",
-            "type": "python",
-            "request": "launch",
-            "console": "integratedTerminal",
-            "cwd": "${workspaceFolder}/backend",
-            "program": "run.py",
-            "args": ["web","--log_level","INFO"],
-            "presentation": {
-                "hidden": true
-            }
-        },
-        {
-            "type": "pwa-msedge",
-            "name": "Launch Microsoft Edge",
-            "request": "launch",
-            "runtimeArgs": [
-                "--remote-debugging-port=9222"
-            ],
-            "url": "http://127.0.0.1:5015",
-            "presentation": {
-                "hidden": true
-            }
-        },
-    ],
-    "compounds": [
-        {
-            "name": "lab1",
-            "configurations": ["lab1-web", "lab1-backend", "Launch Microsoft Edge"]
-        }
-      ]
+{
+    "version": "0.2.0",
+    "configurations": [
+        {
+            "name": "lab1-web",
+            "type": "node-terminal",
+            "request": "launch",
+            "command": "npm run dev",
+            "cwd": "${workspaceFolder}/web",
+            "presentation": {
+            "hidden": true
+            }
+        },
+        {
+            "name": "lab1-backend",
+            "type": "python",
+            "request": "launch",
+            "console": "integratedTerminal",
+            "cwd": "${workspaceFolder}/backend",
+            "program": "run.py",
+            "args": ["web","--log_level","INFO"],
+            "presentation": {
+                "hidden": true
+            }
+        },
+        {
+            "type": "pwa-msedge",
+            "name": "Launch Microsoft Edge",
+            "request": "launch",
+            "runtimeArgs": [
+                "--remote-debugging-port=9222"
+            ],
+            "url": "http://127.0.0.1:5015",
+            "presentation": {
+                "hidden": true
+            }
+        },
+    ],
+    "compounds": [
+        {
+            "name": "lab1",
+            "configurations": ["lab1-web", "lab1-backend", "Launch Microsoft Edge"]
+        }
+      ]
 }
\ No newline at end of file
diff --git a/README.md b/README.md
index ec2d4ee..b350f85 100644
--- a/README.md
+++ b/README.md
@@ -1,54 +1,54 @@
-# Lab Setup Guide
-
-## 1. Cloning the Repository
-
-Clone this repository to your local machine:
-
-```bash
-git clone <REPO_URL>
-cd <REPO_NAME>
-```
-
-## 2. Opening in VS Code with Dev Containers
-1. Install [Visual Studio Code](https://code.visualstudio.com/).
-2. Install the [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers).
-3. Install [Git for Windows](https://git-scm.com/download/win) if you don't already have it.
-4. Open the project folder in VS Code.
-5. When prompted, **Reopen in Container**.  
-    Alternatively, open the Command Palette (`Ctrl+Shift+P`), then select:  
-    `Dev Containers: Reopen in Container`.
-6. Once installation is complete, navigate to the `Run and Debug` menu and launch `lab1`
-
-This will build and start the development environment using Docker, as configured in `.devcontainer/`.
-
-Launching will also start a web browser, but you are welcome to use any browser you like. The app will be hosted on http://localhost:5015 with the backend hosted on http://localhost:5615.
-
-## 3. Next Steps
-
-- Open `issues.md` in the workspace and follow the instructions provided there.
-
-## 4. Submitting Your Interview Application
-
-Submit back a brief solution to each issue, as well as the output of the following command in the terminal:
-`git diff --unified=2`
-
-<br>
-
-## FAQs
-
-### What if I don't use Visual Studio Code?
-
-You can still use the repository and dev container with other editors that support Docker and remote development, such as JetBrains IDEs or by using the command line. Refer to your editor's documentation for connecting to a dev container.
-
-### Can I run the project without Docker or Dev Containers?
-
-While the recommended setup uses Dev Containers, you can manually install the required dependencies (Node.js, Python, etc.) on your local machine and run the project. Refer to the `.devcontainer/Dockerfile` and `package.json` for a list of dependencies.
-
-### How do I open the app in my browser?
-
-Once the app is running, open your browser and navigate to [http://localhost:5015](http://localhost:5015) for the frontend and [http://localhost:5615](http://localhost:5615) for the backend.
-
-### What if I encounter issues with the container build?
-
-Make sure Docker is running and up to date. Check the logs in the VS Code terminal for errors. If problems persist, try rebuilding the container from the Command Palette:  
+# Lab Setup Guide
+
+## 1. Cloning the Repository
+
+Clone this repository to your local machine:
+
+```bash
+git clone <REPO_URL>
+cd <REPO_NAME>
+```
+
+## 2. Opening in VS Code with Dev Containers
+1. Install [Visual Studio Code](https://code.visualstudio.com/).
+2. Install the [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers).
+3. Install [Git for Windows](https://git-scm.com/download/win) if you don't already have it.
+4. Open the project folder in VS Code.
+5. When prompted, **Reopen in Container**.  
+    Alternatively, open the Command Palette (`Ctrl+Shift+P`), then select:  
+    `Dev Containers: Reopen in Container`.
+6. Once installation is complete, navigate to the `Run and Debug` menu and launch `lab1`
+
+This will build and start the development environment using Docker, as configured in `.devcontainer/`.
+
+Launching will also start a web browser, but you are welcome to use any browser you like. The app will be hosted on http://localhost:5015 with the backend hosted on http://localhost:5615.
+
+## 3. Next Steps
+
+- Open `issues.md` in the workspace and follow the instructions provided there.
+
+## 4. Submitting Your Interview Application
+
+Submit back a brief solution to each issue, as well as the output of the following command in the terminal:
+`git diff --unified=2`
+
+<br>
+
+## FAQs
+
+### What if I don't use Visual Studio Code?
+
+You can still use the repository and dev container with other editors that support Docker and remote development, such as JetBrains IDEs or by using the command line. Refer to your editor's documentation for connecting to a dev container.
+
+### Can I run the project without Docker or Dev Containers?
+
+While the recommended setup uses Dev Containers, you can manually install the required dependencies (Node.js, Python, etc.) on your local machine and run the project. Refer to the `.devcontainer/Dockerfile` and `package.json` for a list of dependencies.
+
+### How do I open the app in my browser?
+
+Once the app is running, open your browser and navigate to [http://localhost:5015](http://localhost:5015) for the frontend and [http://localhost:5615](http://localhost:5615) for the backend.
+
+### What if I encounter issues with the container build?
+
+Make sure Docker is running and up to date. Check the logs in the VS Code terminal for errors. If problems persist, try rebuilding the container from the Command Palette:  
 `Dev Containers: Rebuild and Reopen in Container`.
\ No newline at end of file
diff --git a/backend/api/results.py b/backend/api/results.py
index edfc1e2..e701ad9 100644
--- a/backend/api/results.py
+++ b/backend/api/results.py
@@ -1,28 +1,55 @@
-from http.client import HTTPException
-from core import app, results, globalSettings
-import models.results
-
-@app.app.get(f"/api/1.0/results",
-    tags=["Results"],
-    summary = "/results",
-    description = "Get Results",
-)
-async def getResults(
-) -> models.results.getResultsResponse:
-    resultsList = next(results._result().query(json=True),[])
-    return models.results.getResultsResponse(results=resultsList)
-
-@app.app.post(
-    "/api/1.0/new",
-    tags=["Results"],
-    summary="/new (create)",
-    description="Create a new result",
-)
-async def createResult(body: dict) -> models.results.NewResultResponse:
-    try:
-        name = body.get("name")
-        mainType = body.get("type")
-        results._result().new(name, mainType)
-        return {"msg": "Successful"}
-    except Exception as e:
-        raise HTTPException(status_code=400, detail=str(e))
\ No newline at end of file
+# from http.client import HTTPException
+from fastapi import HTTPException
+from core import app, results, globalSettings
+from pydantic import BaseModel, Field
+import models.results
+import bleach
+from typing import Optional
+
+
+class NewResultRequest(BaseModel):
+    name: str = Field(..., min_length=1, description="Full name is required")
+    email: str = Field(..., min_length=1,
+                       description="Email address is required")
+    type: str = Field(..., min_length=1, description="Type is required")
+
+
+@app.app.get(f"/api/1.0/results",
+             tags=["Results"],
+             summary="/results",
+             description="Get Results",
+             )
+async def getResults(search: Optional[str] = None) -> models.results.getResultsResponse:
+    resultsList = next(results._result().query(json=True), [])
+    if search:
+        search_lower = search.lower().strip()
+        filtered_results = [
+            item for item in resultsList
+            if item.get('name') and search_lower in item['name'].lower()
+        ]
+        return models.results.getResultsResponse(results=filtered_results)
+
+    return models.results.getResultsResponse(results=resultsList)
+
+
+@app.app.post(
+    "/api/1.0/new",
+    tags=["Results"],
+    summary="/new (create)",
+    description="Create a new result",
+)
+async def createResult(item: NewResultRequest) -> models.results.NewResultResponse:
+    try:
+        safe_name = bleach.clean(item.name, strip=True)
+        if not safe_name:
+            raise HTTPException(
+                status_code=400, detail="Name contains disallowed content")
+        safe_email = bleach.clean(item.email, strip=True)
+        if not safe_name:
+            raise HTTPException(
+                status_code=400, detail="Email contains disallowed content")
+        mainType = item.type
+        results._result().new(safe_name, safe_email, mainType)
+        return {"msg": "Successful"}
+    except Exception as e:
+        raise HTTPException(status_code=400, detail=str(e))
diff --git a/backend/core/app.py b/backend/core/app.py
index 9f4b2aa..1c081aa 100644
--- a/backend/core/app.py
+++ b/backend/core/app.py
@@ -1,28 +1,28 @@
-from fastapi import FastAPI, Request, Body, Response, HTTPException, status, Depends, Header
-from fastapi.responses import HTMLResponse, JSONResponse
-from fastapi.templating import Jinja2Templates
-from fastapi.staticfiles import StaticFiles
-from contextlib import asynccontextmanager
-import asyncio
-
-@asynccontextmanager
-async def lifespan(app: FastAPI):
-    yield
-
-app = FastAPI(title="Lab 1", version="0.1", lifespan=lifespan)
-
-@app.exception_handler(Exception)
-async def generic_exception_handler(request: Request, exc: Exception):
-    return JSONResponse(
-        status_code=500,
-        content={"message": "Error occurred."},
-    )
-
-securityResponses = {
-    401: {"description": "Unauthorized"},
-    403: {"description": "Unauthenticated"},
-}
-
-from api import results
-from . import database, globalSettings
+from fastapi import FastAPI, Request, Body, Response, HTTPException, status, Depends, Header
+from fastapi.responses import HTMLResponse, JSONResponse
+from fastapi.templating import Jinja2Templates
+from fastapi.staticfiles import StaticFiles
+from contextlib import asynccontextmanager
+import asyncio
+
+@asynccontextmanager
+async def lifespan(app: FastAPI):
+    yield
+
+app = FastAPI(title="Lab 1", version="0.1", lifespan=lifespan)
+
+@app.exception_handler(Exception)
+async def generic_exception_handler(request: Request, exc: Exception):
+    return JSONResponse(
+        status_code=500,
+        content={"message": "Error occurred."},
+    )
+
+securityResponses = {
+    401: {"description": "Unauthorized"},
+    403: {"description": "Unauthenticated"},
+}
+
+from api import results
+from . import database, globalSettings
 database.initialize(globalSettings.args.database_url,globalSettings.args.database)
\ No newline at end of file
diff --git a/backend/core/database.py b/backend/core/database.py
index 8a1c99b..6e4d6cd 100644
--- a/backend/core/database.py
+++ b/backend/core/database.py
@@ -1,229 +1,229 @@
-import time
-import pymongo
-import functools
-import logging
-import copy
-import math
-from bson.objectid import ObjectId
-import json
-import logging
-
-from core import core
-from . import globalSettings
-
-logger = logging.getLogger(__name__)
-logger.setLevel(globalSettings.args.log_level)
-
-db = None
-dbClient = None
-def initialize(connectionString,database):
-    global db
-    global dbClient
-    dbClient = pymongo.MongoClient(connectionString)
-    db = dbClient[database]
-
-def mongoConnectionWrapper(func):
-    @functools.wraps(func)
-    def wrapper(inst, *args, **kwargs):
-        for x in range(1,3):
-            try:
-                return func(inst, *args, **kwargs)
-            except (pymongo.errors.AutoReconnect, pymongo.errors.ServerSelectionTimeoutError) as e:
-                logger.debug("PyMongo auto-reconnecting {}".format({ "exception" : e }))
-                time.sleep(1)
-        logger.warning("PyMongo connection failure")
-    return wrapper
-
-class _admin():
-    @mongoConnectionWrapper
-    def dropCollection(self,collection):
-        db[collection].drop()
-        return
-
-class _document():
-    _id = str()
-    _dbCollection = None
-    lastUpdateTime = int()
-
-    @mongoConnectionWrapper
-    def new(self):
-        try:
-            self.lastUpdateTime = int(time.time())
-            data = core.helpers.classToJson(self)
-            del data["_id"]
-            result = db[self._dbCollection].insert_one(data)
-            if result.inserted_id:
-                self._id = str(result.inserted_id)
-                return { "_id" : self._id }
-        except pymongo.errors.DuplicateKeyError:
-            raise core.exceptions.error("Unable to create a new document due to 'Duplicate keys'")
-        raise core.exceptions.error("Unknown error occurred while creating a new document")
-
-    @mongoConnectionWrapper
-    def get(self,_id,json=False,excludeFields=[],includeJson=False,includeFields=[]):
-        query = { "_id" : ObjectId(_id) }
-        if includeFields and json:
-            includeFields = {field:1 for field in includeFields}
-            docs = db[self._dbCollection].find(query,includeFields)
-        elif excludeFields and json:
-            excludeFields = {field:0 for field in excludeFields}
-            docs = db[self._dbCollection].find(query,excludeFields)
-        else:
-            docs = db[self._dbCollection].find(query)
-        logger.debug("Database execution stats {}".format({ "stats" : docs.explain()["executionStats"] }))
-        result = None
-        resultObject = None
-        for doc in docs:
-            if json or includeJson:
-                result = core.helpers.dbSanitize(doc,reverse=True)
-            if not json:
-                resultObject = core.helpers.jsonToClass(self,doc)
-        if not result and not resultObject:
-            raise core.exceptions.error("Unknown error occurred while loading the document")
-        if not json and includeJson:
-            return result, resultObject
-        elif not json:
-            return resultObject
-        return result
-
-    @mongoConnectionWrapper
-    def query(self,query=None,json=False,skip=0,limit=100,sort=None,ascending=True,pageStats=False,excludeFields=[],includeFields=[],includeJson=False):
-        if not query:
-            query = {}
-        order = -1
-        if ascending:
-            order = 1
-        if includeFields and json:
-            includeFields = {field:1 for field in includeFields}
-            docs = db[self._dbCollection].find(query,includeFields)
-        elif excludeFields and json:
-            excludeFields = {field:0 for field in excludeFields}
-            docs = db[self._dbCollection].find(query,excludeFields)
-        else:
-            docs = db[self._dbCollection].find(query)
-        try:
-            if sort:
-                if type(sort) is list:
-                    docs = docs.sort(sort)
-                else:
-                    docs = docs.sort(sort,order)
-            if skip:
-                docs = docs.skip(skip)
-            logger.debug("Database execution stats {}".format({ "stats" : docs.explain()["executionStats"] }))
-            results = []
-            if pageStats:
-                docCount = db[self._dbCollection].count_documents(query)
-                yield {"total":docCount,"pages":math.ceil(docCount/limit),"pageSize":limit,"skipped":skip}
-            for doc in docs:
-                _class = copy.copy(self)
-                if includeJson:
-                    results.append((core.helpers.dbSanitize(doc,reverse=True),core.helpers.jsonToClass(_class,doc)))
-                elif json:
-                    results.append(core.helpers.dbSanitize(doc,reverse=True))
-                else:
-                    results.append(core.helpers.jsonToClass(_class,doc))
-                if len(results) == limit:
-                    if limit == 1:
-                        yield results[0]
-                    else:
-                        yield results
-                    results = []
-        finally:
-            docs.close()
-        if len(results) > 0:
-            yield results
-
-    @mongoConnectionWrapper
-    def querySample(self,query=None,json=False,size=100):
-        if not query:
-            query = {}
-        
-        docs = db[self._dbCollection].aggregate(
-                [
-                    {"$match":query},
-                    {"$sample":{"size":size}}
-                ]
-            )
-        try:
-            results = []
-            for doc in docs:
-                _class = copy.copy(self)
-                if json:
-                    results.append(core.helpers.dbSanitize(doc,reverse=True))
-                else:
-                    results.append(core.helpers.jsonToClass(_class,doc))
-
-        finally:
-            docs.close()
-        
-        return results
-
-    @mongoConnectionWrapper
-    def groupedQuery(self,groupBy,sort="_id",ascending=True,groupLimit=None,query=None,json=False,skip=None,limit=100,pageStats=False):
-        if not query:
-            query = {}
-        order = -1
-        if ascending:
-            order = 1
-        aggregationQuery = []
-
-        if query:
-            aggregationQuery.append({"$match":query})
-
-        if sort:
-            aggregationQuery.append({"$sort":{sort:order}})
-
-        if groupLimit:
-            if groupLimit == 1:
-                aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$first":"$$ROOT"}}})
-                aggregationQuery.append({"$replaceRoot":{"newRoot":f"$docs"}})
-            else:
-                aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$push":"$$ROOT"}}})
-                aggregationQuery.append({'$project': {'docs': {'$slice': ['$docs', groupLimit]}}})
-        else:
-            aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$push":"$$ROOT"}}})
-
-        docs = db[self._dbCollection].aggregate(aggregationQuery)
-
-        results = []
-        for doc in docs:
-            _class = copy.copy(self)
-            if json:
-                results.append(core.helpers.dbSanitize(doc,reverse=True))
-            else:
-                results.append(core.helpers.jsonToClass(_class,doc))
-            if len(results) == limit:
-                break
-        docs.close()
-        return results
-
-    @mongoConnectionWrapper
-    def update(self,fields):
-        fields.append("lastUpdateTime")
-        self.lastUpdateTime = int(time.time())
-
-        updateData = {}
-        for field in fields:
-            updateData[field] = getattr(self,field)
-        updateData = core.helpers.dbSanitize(updateData)
-        result = db[self._dbCollection].update_one({ "_id" : ObjectId(self._id) },{ "$set" : updateData })
-        if result.matched_count == 1 and (result.modified_count == 1 or result.raw_result["updatedExisting"] == True):
-            return
-        raise core.exceptions.error("Document not updated")
-
-    @mongoConnectionWrapper
-    def delete(self,query=None):
-        if query:
-            result = db[self._dbCollection].delete_many(query)
-            return
-        result = db[self._dbCollection].delete_one({ "_id" : ObjectId(self._id) })
-        if result.deleted_count == 1:
-            return
-        raise core.exceptions.error("Document not deleted")
-    
-    @mongoConnectionWrapper
-    def uniqueCount(self,field,query):
-        return len(db[self._dbCollection].distinct(field,query))
-    
-    def createIndexes(self):
-        pass
+import time
+import pymongo
+import functools
+import logging
+import copy
+import math
+from bson.objectid import ObjectId
+import json
+import logging
+
+from core import core
+from . import globalSettings
+
+logger = logging.getLogger(__name__)
+logger.setLevel(globalSettings.args.log_level)
+
+db = None
+dbClient = None
+def initialize(connectionString,database):
+    global db
+    global dbClient
+    dbClient = pymongo.MongoClient(connectionString)
+    db = dbClient[database]
+
+def mongoConnectionWrapper(func):
+    @functools.wraps(func)
+    def wrapper(inst, *args, **kwargs):
+        for x in range(1,3):
+            try:
+                return func(inst, *args, **kwargs)
+            except (pymongo.errors.AutoReconnect, pymongo.errors.ServerSelectionTimeoutError) as e:
+                logger.debug("PyMongo auto-reconnecting {}".format({ "exception" : e }))
+                time.sleep(1)
+        logger.warning("PyMongo connection failure")
+    return wrapper
+
+class _admin():
+    @mongoConnectionWrapper
+    def dropCollection(self,collection):
+        db[collection].drop()
+        return
+
+class _document():
+    _id = str()
+    _dbCollection = None
+    lastUpdateTime = int()
+
+    @mongoConnectionWrapper
+    def new(self):
+        try:
+            self.lastUpdateTime = int(time.time())
+            data = core.helpers.classToJson(self)
+            del data["_id"]
+            result = db[self._dbCollection].insert_one(data)
+            if result.inserted_id:
+                self._id = str(result.inserted_id)
+                return { "_id" : self._id }
+        except pymongo.errors.DuplicateKeyError:
+            raise core.exceptions.error("Unable to create a new document due to 'Duplicate keys'")
+        raise core.exceptions.error("Unknown error occurred while creating a new document")
+
+    @mongoConnectionWrapper
+    def get(self,_id,json=False,excludeFields=[],includeJson=False,includeFields=[]):
+        query = { "_id" : ObjectId(_id) }
+        if includeFields and json:
+            includeFields = {field:1 for field in includeFields}
+            docs = db[self._dbCollection].find(query,includeFields)
+        elif excludeFields and json:
+            excludeFields = {field:0 for field in excludeFields}
+            docs = db[self._dbCollection].find(query,excludeFields)
+        else:
+            docs = db[self._dbCollection].find(query)
+        logger.debug("Database execution stats {}".format({ "stats" : docs.explain()["executionStats"] }))
+        result = None
+        resultObject = None
+        for doc in docs:
+            if json or includeJson:
+                result = core.helpers.dbSanitize(doc,reverse=True)
+            if not json:
+                resultObject = core.helpers.jsonToClass(self,doc)
+        if not result and not resultObject:
+            raise core.exceptions.error("Unknown error occurred while loading the document")
+        if not json and includeJson:
+            return result, resultObject
+        elif not json:
+            return resultObject
+        return result
+
+    @mongoConnectionWrapper
+    def query(self,query=None,json=False,skip=0,limit=100,sort=None,ascending=True,pageStats=False,excludeFields=[],includeFields=[],includeJson=False):
+        if not query:
+            query = {}
+        order = -1
+        if ascending:
+            order = 1
+        if includeFields and json:
+            includeFields = {field:1 for field in includeFields}
+            docs = db[self._dbCollection].find(query,includeFields)
+        elif excludeFields and json:
+            excludeFields = {field:0 for field in excludeFields}
+            docs = db[self._dbCollection].find(query,excludeFields)
+        else:
+            docs = db[self._dbCollection].find(query)
+        try:
+            if sort:
+                if type(sort) is list:
+                    docs = docs.sort(sort)
+                else:
+                    docs = docs.sort(sort,order)
+            if skip:
+                docs = docs.skip(skip)
+            logger.debug("Database execution stats {}".format({ "stats" : docs.explain()["executionStats"] }))
+            results = []
+            if pageStats:
+                docCount = db[self._dbCollection].count_documents(query)
+                yield {"total":docCount,"pages":math.ceil(docCount/limit),"pageSize":limit,"skipped":skip}
+            for doc in docs:
+                _class = copy.copy(self)
+                if includeJson:
+                    results.append((core.helpers.dbSanitize(doc,reverse=True),core.helpers.jsonToClass(_class,doc)))
+                elif json:
+                    results.append(core.helpers.dbSanitize(doc,reverse=True))
+                else:
+                    results.append(core.helpers.jsonToClass(_class,doc))
+                if len(results) == limit:
+                    if limit == 1:
+                        yield results[0]
+                    else:
+                        yield results
+                    results = []
+        finally:
+            docs.close()
+        if len(results) > 0:
+            yield results
+
+    @mongoConnectionWrapper
+    def querySample(self,query=None,json=False,size=100):
+        if not query:
+            query = {}
+        
+        docs = db[self._dbCollection].aggregate(
+                [
+                    {"$match":query},
+                    {"$sample":{"size":size}}
+                ]
+            )
+        try:
+            results = []
+            for doc in docs:
+                _class = copy.copy(self)
+                if json:
+                    results.append(core.helpers.dbSanitize(doc,reverse=True))
+                else:
+                    results.append(core.helpers.jsonToClass(_class,doc))
+
+        finally:
+            docs.close()
+        
+        return results
+
+    @mongoConnectionWrapper
+    def groupedQuery(self,groupBy,sort="_id",ascending=True,groupLimit=None,query=None,json=False,skip=None,limit=100,pageStats=False):
+        if not query:
+            query = {}
+        order = -1
+        if ascending:
+            order = 1
+        aggregationQuery = []
+
+        if query:
+            aggregationQuery.append({"$match":query})
+
+        if sort:
+            aggregationQuery.append({"$sort":{sort:order}})
+
+        if groupLimit:
+            if groupLimit == 1:
+                aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$first":"$$ROOT"}}})
+                aggregationQuery.append({"$replaceRoot":{"newRoot":f"$docs"}})
+            else:
+                aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$push":"$$ROOT"}}})
+                aggregationQuery.append({'$project': {'docs': {'$slice': ['$docs', groupLimit]}}})
+        else:
+            aggregationQuery.append({"$group":{"_id":f"${groupBy}","docs":{"$push":"$$ROOT"}}})
+
+        docs = db[self._dbCollection].aggregate(aggregationQuery)
+
+        results = []
+        for doc in docs:
+            _class = copy.copy(self)
+            if json:
+                results.append(core.helpers.dbSanitize(doc,reverse=True))
+            else:
+                results.append(core.helpers.jsonToClass(_class,doc))
+            if len(results) == limit:
+                break
+        docs.close()
+        return results
+
+    @mongoConnectionWrapper
+    def update(self,fields):
+        fields.append("lastUpdateTime")
+        self.lastUpdateTime = int(time.time())
+
+        updateData = {}
+        for field in fields:
+            updateData[field] = getattr(self,field)
+        updateData = core.helpers.dbSanitize(updateData)
+        result = db[self._dbCollection].update_one({ "_id" : ObjectId(self._id) },{ "$set" : updateData })
+        if result.matched_count == 1 and (result.modified_count == 1 or result.raw_result["updatedExisting"] == True):
+            return
+        raise core.exceptions.error("Document not updated")
+
+    @mongoConnectionWrapper
+    def delete(self,query=None):
+        if query:
+            result = db[self._dbCollection].delete_many(query)
+            return
+        result = db[self._dbCollection].delete_one({ "_id" : ObjectId(self._id) })
+        if result.deleted_count == 1:
+            return
+        raise core.exceptions.error("Document not deleted")
+    
+    @mongoConnectionWrapper
+    def uniqueCount(self,field,query):
+        return len(db[self._dbCollection].distinct(field,query))
+    
+    def createIndexes(self):
+        pass
diff --git a/backend/core/globalSettings.py b/backend/core/globalSettings.py
index bbabf20..b448774 100644
--- a/backend/core/globalSettings.py
+++ b/backend/core/globalSettings.py
@@ -1,2 +1,2 @@
-# Global args setting
-args = None
+# Global args setting
+args = None
diff --git a/backend/core/helpers.py b/backend/core/helpers.py
index 6a00f89..7245abb 100644
--- a/backend/core/helpers.py
+++ b/backend/core/helpers.py
@@ -1,121 +1,121 @@
-from bson.objectid import ObjectId
-import datetime
-import os
-import base64
-import hashlib
-import random
-import json
-import time
-import re
-import string
-import secrets
-from pathlib import Path
-import logging
-
-from . import globalSettings
-
-logger = logging.getLogger(__name__)
-logger.setLevel(globalSettings.args.log_level)
-
-emailRegex = re.compile(r"([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \t]|(\\[\t -~]))+\")@([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|\[[\t -Z^-~]*])")
-baseDir = os.getcwd()
-
-def jsonToClass(_class,json,reverse=True):
-    members = [attr for attr in dir(_class) if not callable(getattr(_class, attr)) and attr and ( attr[0] != "_" or attr == "_id" ) ]
-    for member in members:
-        foundAndSet = False
-        for key, value in json.items():
-            if key == member:
-                if type(getattr(_class,member)) == type(value):
-                    setattr(_class,member,value)
-                    foundAndSet = True
-                    break
-                elif type(getattr(_class,member)) == str or type(getattr(_class,member)) == ObjectId:
-                    setattr(_class,member,str(value))
-                    foundAndSet = True
-                    break
-                elif type(getattr(_class,member)) == float and type(value) == int:
-                    setattr(_class,member,float(value))
-                    foundAndSet = True
-                    break
-                elif type(getattr(_class,member)) == int and type(value) == float:
-                    setattr(_class,member,int(value))
-                    foundAndSet = True
-                    break
-        if not foundAndSet and type(getattr(_class,member)) in [list,dict]:
-            setattr(_class,member,type(getattr(_class,member))())
-    return dbSanitize(_class,reverse=reverse)
-
-def classToJson(_class,reverse=False):
-    members = [attr for attr in dir(_class) if not callable(getattr(_class, attr)) and attr and ( attr[0] != "_" or attr == "_id" ) ]
-    result = {}
-    for member in members:
-        result[member] = getattr(_class,member)
-    return dbSanitize(result,reverse=reverse)
-
-def classListToJson(classList):
-    results = []
-    for _class in classList:
-        results.append(classToJson(_class,reverse=True))
-    return results
-
-def dbSanitize(value,reverse=False):
-    validTypes = [str,int,bool,float,list,dict,None,datetime,ObjectId]
-    def dbSanitizeDict(dictValue):
-        result = {}
-        for key, value in dictValue.items():
-            if ("$" in key or "." in key) and not reverse:
-                key = key.replace(".","\\u002E").replace("$","\\u0024")
-            elif ("\\u002E" in key or "\\u0024" in key) and reverse:
-                key = key.replace("\\u002E",".").replace("\\u0024","$")
-            if type(value) is dict:
-                result[key] = dbSanitizeDict(value)
-            elif type(value) is list:
-                result[key] = dbSanitizeList(value)
-            elif type(value) in validTypes:
-                if type(value) is ObjectId:
-                    value = str(value)
-                elif type(value) is datetime:
-                    value = value.timestamp()
-                result[key] = value
-            else:
-                result[key] = str(type(value))
-        return result
-    def dbSanitizeList(listValue):
-        result = []
-        for item in listValue:
-            if type(item) is dict:
-                result.append(dbSanitizeDict(item))
-            elif type(item) is list:
-                result.append(dbSanitizeList(item))
-            elif type(item) in validTypes:
-                if type(item) is ObjectId:
-                    item = str(item)
-                elif type(item) is datetime:
-                    item = item.timestamp()
-                result.append(item)
-            else:
-                result.append(str(type(item)))
-        return result
-    if type(value) is dict:
-        return dbSanitizeDict(value)
-    elif type(value) is list:
-        return dbSanitizeList(value)
-    return value
-
-def safeFilepath(filename,basePath=""):
-    base = os.path.join(Path("{0}/{1}".format(baseDir,basePath)),'')
-    return not os.path.commonprefix((os.path.abspath(Path(filename)),base)) != base
-            
-def tryValue(dict,key,default=None,matchType=False):
-    try:
-        if matchType and default != None:
-            value = dict[key]
-            if type(value) != type(default):
-                return default
-            else:
-                return value
-        else:
-            return dict[key]
-    except:
-        return default
+from bson.objectid import ObjectId
+import datetime
+import os
+import base64
+import hashlib
+import random
+import json
+import time
+import re
+import string
+import secrets
+from pathlib import Path
+import logging
+
+from . import globalSettings
+
+logger = logging.getLogger(__name__)
+logger.setLevel(globalSettings.args.log_level)
+
+emailRegex = re.compile(r"([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|\"([]!#-[^-~ \t]|(\\[\t -~]))+\")@([-!#-'*+/-9=?A-Z^-~]+(\.[-!#-'*+/-9=?A-Z^-~]+)*|\[[\t -Z^-~]*])")
+baseDir = os.getcwd()
+
+def jsonToClass(_class,json,reverse=True):
+    members = [attr for attr in dir(_class) if not callable(getattr(_class, attr)) and attr and ( attr[0] != "_" or attr == "_id" ) ]
+    for member in members:
+        foundAndSet = False
+        for key, value in json.items():
+            if key == member:
+                if type(getattr(_class,member)) == type(value):
+                    setattr(_class,member,value)
+                    foundAndSet = True
+                    break
+                elif type(getattr(_class,member)) == str or type(getattr(_class,member)) == ObjectId:
+                    setattr(_class,member,str(value))
+                    foundAndSet = True
+                    break
+                elif type(getattr(_class,member)) == float and type(value) == int:
+                    setattr(_class,member,float(value))
+                    foundAndSet = True
+                    break
+                elif type(getattr(_class,member)) == int and type(value) == float:
+                    setattr(_class,member,int(value))
+                    foundAndSet = True
+                    break
+        if not foundAndSet and type(getattr(_class,member)) in [list,dict]:
+            setattr(_class,member,type(getattr(_class,member))())
+    return dbSanitize(_class,reverse=reverse)
+
+def classToJson(_class,reverse=False):
+    members = [attr for attr in dir(_class) if not callable(getattr(_class, attr)) and attr and ( attr[0] != "_" or attr == "_id" ) ]
+    result = {}
+    for member in members:
+        result[member] = getattr(_class,member)
+    return dbSanitize(result,reverse=reverse)
+
+def classListToJson(classList):
+    results = []
+    for _class in classList:
+        results.append(classToJson(_class,reverse=True))
+    return results
+
+def dbSanitize(value,reverse=False):
+    validTypes = [str,int,bool,float,list,dict,None,datetime,ObjectId]
+    def dbSanitizeDict(dictValue):
+        result = {}
+        for key, value in dictValue.items():
+            if ("$" in key or "." in key) and not reverse:
+                key = key.replace(".","\\u002E").replace("$","\\u0024")
+            elif ("\\u002E" in key or "\\u0024" in key) and reverse:
+                key = key.replace("\\u002E",".").replace("\\u0024","$")
+            if type(value) is dict:
+                result[key] = dbSanitizeDict(value)
+            elif type(value) is list:
+                result[key] = dbSanitizeList(value)
+            elif type(value) in validTypes:
+                if type(value) is ObjectId:
+                    value = str(value)
+                elif type(value) is datetime:
+                    value = value.timestamp()
+                result[key] = value
+            else:
+                result[key] = str(type(value))
+        return result
+    def dbSanitizeList(listValue):
+        result = []
+        for item in listValue:
+            if type(item) is dict:
+                result.append(dbSanitizeDict(item))
+            elif type(item) is list:
+                result.append(dbSanitizeList(item))
+            elif type(item) in validTypes:
+                if type(item) is ObjectId:
+                    item = str(item)
+                elif type(item) is datetime:
+                    item = item.timestamp()
+                result.append(item)
+            else:
+                result.append(str(type(item)))
+        return result
+    if type(value) is dict:
+        return dbSanitizeDict(value)
+    elif type(value) is list:
+        return dbSanitizeList(value)
+    return value
+
+def safeFilepath(filename,basePath=""):
+    base = os.path.join(Path("{0}/{1}".format(baseDir,basePath)),'')
+    return not os.path.commonprefix((os.path.abspath(Path(filename)),base)) != base
+            
+def tryValue(dict,key,default=None,matchType=False):
+    try:
+        if matchType and default != None:
+            value = dict[key]
+            if type(value) != type(default):
+                return default
+            else:
+                return value
+        else:
+            return dict[key]
+    except:
+        return default
diff --git a/backend/core/results.py b/backend/core/results.py
index 6fbcff9..92cbfad 100644
--- a/backend/core/results.py
+++ b/backend/core/results.py
@@ -1,18 +1,20 @@
-import logging
-
-from core import core
-
-logger = logging.getLogger(__name__)
-logger.setLevel(core.globalSettings.args.log_level)
-
-class _result(core.database._document):
-    name = str()
-    mainType = str()
-
-    _dbCollection = "results"
-
-    def new(self,name,mainType):
-        self.name = name
-        self.mainType = mainType
-        return super(_result, self).new()
-    
\ No newline at end of file
+import logging
+
+from core import core
+
+logger = logging.getLogger(__name__)
+logger.setLevel(core.globalSettings.args.log_level)
+
+
+class _result(core.database._document):
+    name = str()
+    email = str()
+    mainType = str()
+
+    _dbCollection = "results"
+
+    def new(self, name, email, mainType):
+        self.name = name
+        self.email = email
+        self.mainType = mainType
+        return super(_result, self).new()
diff --git a/backend/models/results.py b/backend/models/results.py
index d938c2c..2d44b4f 100644
--- a/backend/models/results.py
+++ b/backend/models/results.py
@@ -1,14 +1,18 @@
-from pydantic import BaseModel, Field, BeforeValidator
-from typing import Annotated
-PyObjectId = Annotated[str, BeforeValidator(str)]
-
-class Result(BaseModel):
-    id: PyObjectId = Field(default=None, alias="_id", title="Result ID")
-    name: str = Field(..., title="Result Name")
-    mainType: str = Field(..., title="Main Type")
-
-class getResultsResponse(BaseModel):
-    results: list[Result] = Field(..., title="List of Results")
-
-class NewResultResponse(BaseModel):
-    msg: str = Field(..., title="Message")
+from pydantic import BaseModel, Field, BeforeValidator
+from typing import Annotated
+PyObjectId = Annotated[str, BeforeValidator(str)]
+
+
+class Result(BaseModel):
+    id: PyObjectId = Field(default=None, alias="_id", title="Result ID")
+    name: str = Field(..., title="Result Name")
+    email: str = Field(..., title="Email Address")
+    mainType: str = Field(..., title="Main Type")
+
+
+class getResultsResponse(BaseModel):
+    results: list[Result] = Field(..., title="List of Results")
+
+
+class NewResultResponse(BaseModel):
+    msg: str = Field(..., title="Message")
diff --git a/backend/requirements.txt b/backend/requirements.txt
index 5984b23..95f967a 100644
--- a/backend/requirements.txt
+++ b/backend/requirements.txt
@@ -1,3 +1,4 @@
-fastapi[standard]
-uvicorn
-pymongo
\ No newline at end of file
+fastapi[standard]
+uvicorn
+pymongo
+bleach==6.2.0
\ No newline at end of file
diff --git a/backend/run.py b/backend/run.py
index f78e793..05c7ff2 100644
--- a/backend/run.py
+++ b/backend/run.py
@@ -1,35 +1,35 @@
-import argparse
-
-mainParser = argparse.ArgumentParser(add_help=False)
-mainParser.add_argument('--log_level', type=str, default="INFO", help='--log_level INFO')
-subParsers = mainParser.add_subparsers(help='commands')
-
-webParser = subParsers.add_parser('web', parents=[mainParser])
-webParser.set_defaults(component='web')
-webParser.add_argument('--bind_address', type=str, default="127.0.0.1", help='--bind_address 127.0.0.1')
-webParser.add_argument('--bind_port', type=int, default=5615, help='--bind_port 5615')
-webParser.add_argument('--database_url', type=str, default="mongodb://127.0.0.1", help='--database_url mongodb://127.0.0.1')
-webParser.add_argument('--database', type=str, default="lab1", help='--database lab1')
-
-args = mainParser.parse_args()
-
-if args.component == "web":
-    from core import globalSettings
-    globalSettings.args = args
-
-    from core import app
-    import uvicorn
-    from fastapi.middleware.cors import CORSMiddleware
-    # Add CORS middleware to allow any origin
-    app.app.add_middleware(
-        CORSMiddleware,
-        allow_origins=["*"],
-        allow_credentials=True,
-        allow_methods=["*"],
-        allow_headers=["*"],
-    )
-
-    forwardedAllowIps = "*"
-    kwargs = {}
-    uvicorn.run(app.app, host=args.bind_address, port=args.bind_port, forwarded_allow_ips=forwardedAllowIps, **kwargs)
+import argparse
+
+mainParser = argparse.ArgumentParser(add_help=False)
+mainParser.add_argument('--log_level', type=str, default="INFO", help='--log_level INFO')
+subParsers = mainParser.add_subparsers(help='commands')
+
+webParser = subParsers.add_parser('web', parents=[mainParser])
+webParser.set_defaults(component='web')
+webParser.add_argument('--bind_address', type=str, default="127.0.0.1", help='--bind_address 127.0.0.1')
+webParser.add_argument('--bind_port', type=int, default=5615, help='--bind_port 5615')
+webParser.add_argument('--database_url', type=str, default="mongodb://127.0.0.1", help='--database_url mongodb://127.0.0.1')
+webParser.add_argument('--database', type=str, default="lab1", help='--database lab1')
+
+args = mainParser.parse_args()
+
+if args.component == "web":
+    from core import globalSettings
+    globalSettings.args = args
+
+    from core import app
+    import uvicorn
+    from fastapi.middleware.cors import CORSMiddleware
+    # Add CORS middleware to allow any origin
+    app.app.add_middleware(
+        CORSMiddleware,
+        allow_origins=["*"],
+        allow_credentials=True,
+        allow_methods=["*"],
+        allow_headers=["*"],
+    )
+
+    forwardedAllowIps = "*"
+    kwargs = {}
+    uvicorn.run(app.app, host=args.bind_address, port=args.bind_port, forwarded_allow_ips=forwardedAllowIps, **kwargs)
    
\ No newline at end of file
diff --git a/issues.md b/issues.md
index a8051e3..1f16b35 100644
--- a/issues.md
+++ b/issues.md
@@ -1,51 +1,51 @@
-# Lab Issues
-## Introduction
-
-Please attempt to complete all issues as thoroughly as possible. There will be a discussion around your findings and solutions, so it is best to keep notes. Once you have completed all of the below, please refer to `README.md` to submit your findings.
-
-## Issues
-
-1. **Fix New Button Misalignment**  
-    The "New" button on the `/new` page is indented to the right instead of being aligned with the form input and dropdown.  
-
-    ![Screenshot showing the "New" button misalignment](questionImages/misalignment.png)
-
-    **Task:** Correct the alignment so the button is flush with the form elements.
-
-2. **Fix Name Input Not Appearing When Typed**  
-    Users have reported that text entered into the "name" input field does not appear as they type.  
-
-    **Task:** Investigate and resolve the issue so that user input is visible in the "name" field in real time.
-
-3. **Fix Searchable Dropdown Selected Item Not Highlighting**  
-    When an item is selected in the searchable dropdown, it does not get highlighted in the list. The highlight should appear on the selected item whenever the dropdown is opened.  
-
-    ![Screenshot showing the selected item not highlighted in the dropdown](questionImages/missingHighlight.png)
-
-    **Task:** Update the component so that the selected item is always highlighted when the dropdown is open.
-
-4. **Add Success Message When a New Record Is Added**  
-    Currently, when a new record is added, there is no feedback and the form does not reset.  
-    **Task:**  
-    - Show a confirmation message when a record is successfully added (i.e., response code 200).  
-    - Ensure "name" and "type" fields are present on every request using both client-side and server-side validation.  
-    - If required fields are missing, display an error message.
-
-5. **Fix XSS Vulnerability When Adding New Records**  
-    A recent security test identified an XSS vulnerability in the "name" field of the new record form. The tester demonstrated the issue by submitting the following input as proof of concept: `<img src=x onerror="alert('XSS')">`.  
-    **Task:** Implement a fix to prevent XSS attacks when adding new records.
-
-6. **Add a Search Filter to the Results Page**  
-    The results table does not currently support filtering by name.  
-    **Task:**  
-    - Add server-side filtering of results by name using GET URL parameters (e.g., `http://127.0.0.1:5015/results?search=test`).  
-    - The table should display only items whose name contains or matches the search term.
-
-7. **Add Email Address Field**  
-    Users should provide an email address when submitting the form, however this should be partially redacted on the results page.  
-    **Task:** Display email addresses on the results page, but mask them for privacy (e.g., `si**********@lab.local`).
-
-8. **Download as CSV**  
-    There is currently no option to download results.  
-    **Task:** Add an option to download all results as a CSV file.
-
+# Lab Issues
+## Introduction
+
+Please attempt to complete all issues as thoroughly as possible. There will be a discussion around your findings and solutions, so it is best to keep notes. Once you have completed all of the below, please refer to `README.md` to submit your findings.
+
+## Issues
+
+1. **Fix New Button Misalignment**  
+    The "New" button on the `/new` page is indented to the right instead of being aligned with the form input and dropdown.  
+
+    ![Screenshot showing the "New" button misalignment](questionImages/misalignment.png)
+
+    **Task:** Correct the alignment so the button is flush with the form elements.
+
+2. **Fix Name Input Not Appearing When Typed**  
+    Users have reported that text entered into the "name" input field does not appear as they type.  
+
+    **Task:** Investigate and resolve the issue so that user input is visible in the "name" field in real time.
+
+3. **Fix Searchable Dropdown Selected Item Not Highlighting**  
+    When an item is selected in the searchable dropdown, it does not get highlighted in the list. The highlight should appear on the selected item whenever the dropdown is opened.  
+
+    ![Screenshot showing the selected item not highlighted in the dropdown](questionImages/missingHighlight.png)
+
+    **Task:** Update the component so that the selected item is always highlighted when the dropdown is open.
+
+4. **Add Success Message When a New Record Is Added**  
+    Currently, when a new record is added, there is no feedback and the form does not reset.  
+    **Task:**  
+    - Show a confirmation message when a record is successfully added (i.e., response code 200).  
+    - Ensure "name" and "type" fields are present on every request using both client-side and server-side validation.  
+    - If required fields are missing, display an error message.
+
+5. **Fix XSS Vulnerability When Adding New Records**  
+    A recent security test identified an XSS vulnerability in the "name" field of the new record form. The tester demonstrated the issue by submitting the following input as proof of concept: `<img src=x onerror="alert('XSS')">`.  
+    **Task:** Implement a fix to prevent XSS attacks when adding new records.
+
+6. **Add a Search Filter to the Results Page**  
+    The results table does not currently support filtering by name.  
+    **Task:**  
+    - Add server-side filtering of results by name using GET URL parameters (e.g., `http://127.0.0.1:5015/results?search=test`).  
+    - The table should display only items whose name contains or matches the search term.
+
+7. **Add Email Address Field**  
+    Users should provide an email address when submitting the form, however this should be partially redacted on the results page.  
+    **Task:** Display email addresses on the results page, but mask them for privacy (e.g., `si**********@lab.local`).
+
+8. **Download as CSV**  
+    There is currently no option to download results.  
+    **Task:** Add an option to download all results as a CSV file.
+
diff --git a/lab1.py b/lab1.py
index 6e9fa99..05507e5 100644
--- a/lab1.py
+++ b/lab1.py
@@ -1,49 +1,49 @@
-import logging
-import argparse
-import os
-import sys
-import _thread
-import time
-from traceback import format_exception
-
-try:
-    if "/" in sys.argv[0]:
-        os.chdir("/".join(sys.argv[0].split("/")[:-1]))
-except:
-    pass
-
-# Setup logging and un-handled exception hook
-logging.basicConfig(format="%(asctime)s lab1 %(levelname)s %(name)s[%(process)d] %(filename)s:%(lineno)d | %(message)s")
-logger = logging.getLogger(__name__)
-
-def unhandledExceptionHook(*exc_info):
-    message = ''.join(format_exception(*exc_info)).replace("\n","\\n")
-    logger.critical(f"Uncaught Exception {message}")
-
-sys.excepthook = unhandledExceptionHook
-
-mainParser = argparse.ArgumentParser(add_help=False)
-mainParser.add_argument('--database_url', type=str, default="mongodb://127.0.0.1", help='--database_url mongodb://127.0.0.1')
-mainParser.add_argument('--database', type=str, default="lab1", help='--database lab1')
-mainParser.add_argument('--log_level', type=str, default="WARNING", help='log_level WARNING')
-subParsers = mainParser.add_subparsers(help='commands')
-
-webParser = subParsers.add_parser('web', parents=[mainParser])
-webParser.add_argument('--bind_address', type=str, default="127.0.0.1", help='--bind_address 127.0.0.1')
-webParser.add_argument('--bind_port', type=int, default=5015, help='--bind_port 5015')
-webParser.add_argument('--autoreload', type=bool, default=False, help='Flag to enable autoreload', nargs="?", const=True)
-webParser.set_defaults(component='web')
-
-args = mainParser.parse_args()
-from core import globalSettings
-globalSettings.args = args
-
-if hasattr(args,"component"):
-    logger.setLevel(globalSettings.args.log_level)
-    logger.debug(f"args={globalSettings.args}")
-    
-    if args.component == "web":
-        from web import web
-        web.load()
-else:
-    mainParser.print_help()
+import logging
+import argparse
+import os
+import sys
+import _thread
+import time
+from traceback import format_exception
+
+try:
+    if "/" in sys.argv[0]:
+        os.chdir("/".join(sys.argv[0].split("/")[:-1]))
+except:
+    pass
+
+# Setup logging and un-handled exception hook
+logging.basicConfig(format="%(asctime)s lab1 %(levelname)s %(name)s[%(process)d] %(filename)s:%(lineno)d | %(message)s")
+logger = logging.getLogger(__name__)
+
+def unhandledExceptionHook(*exc_info):
+    message = ''.join(format_exception(*exc_info)).replace("\n","\\n")
+    logger.critical(f"Uncaught Exception {message}")
+
+sys.excepthook = unhandledExceptionHook
+
+mainParser = argparse.ArgumentParser(add_help=False)
+mainParser.add_argument('--database_url', type=str, default="mongodb://127.0.0.1", help='--database_url mongodb://127.0.0.1')
+mainParser.add_argument('--database', type=str, default="lab1", help='--database lab1')
+mainParser.add_argument('--log_level', type=str, default="WARNING", help='log_level WARNING')
+subParsers = mainParser.add_subparsers(help='commands')
+
+webParser = subParsers.add_parser('web', parents=[mainParser])
+webParser.add_argument('--bind_address', type=str, default="127.0.0.1", help='--bind_address 127.0.0.1')
+webParser.add_argument('--bind_port', type=int, default=5015, help='--bind_port 5015')
+webParser.add_argument('--autoreload', type=bool, default=False, help='Flag to enable autoreload', nargs="?", const=True)
+webParser.set_defaults(component='web')
+
+args = mainParser.parse_args()
+from core import globalSettings
+globalSettings.args = args
+
+if hasattr(args,"component"):
+    logger.setLevel(globalSettings.args.log_level)
+    logger.debug(f"args={globalSettings.args}")
+    
+    if args.component == "web":
+        from web import web
+        web.load()
+else:
+    mainParser.print_help()
diff --git a/solutions.md b/solutions.md
new file mode 100644
index 0000000..17f87e7
--- /dev/null
+++ b/solutions.md
@@ -0,0 +1,55 @@
+
+# CybaVerse technical interview task – My Fixes and Solutions
+
+I focused on making the app feel cleaner, more functional, and secure for users.
+
+## Issue 1
+**Fix New Button Misalignment**
+The "New" button was misaligned because it wasn’t grouped with the form layout. I moved it inside the .formContainer 
+and adjusted its styling so it now sits correctly beneath the form inputs, using the same formItem class for consistent spacing.
+
+## Issue 2
+**Fix Name Input Not Appearing When Typed**
+The name field wasn’t displaying typed input because it wasn’t connected to the component’s state. 
+I fixed it by converting the input to a controlled component binding it to this.state.name and updating the value through onChange.
+This ensures the text shows up as the user types.
+
+### Issue 3
+**Fix Dropdown Highlighting**
+When opening the dropdown, it was hard to tell which item was currently selected. To fix this, I introduced two lines in `Dropdown.jsx`:
+const isSelected = this.state.selected === x;
+className={`formDropdownItemSelector ${this.props.size}${isSelected ? ' selected' : ''}`}
+
+### Issue 4
+**Add Success and Error Feedback for New Records**
+Before, submitting a new record gave no feedback—it was confusing. I added:
+- A success message when a new record is created.
+- Input validation (both on the frontend and backend) to make sure "name" and "type" are required.
+- An error message if any required info is missing.
+
+This makes the form feel responsive and trustworthy.
+
+### Issue 5
+**Fix XSS Vulnerability**
+To stop unsafe input, I used `bleach` library  to clean the name and email fields. This keeps the app secure from script-based attacks.
+
+### Issue 6
+**Add Search Filter to Results Page**
+I added support for a search query in the /results API and filtered the results based on name.
+ It’s now easier for users to find specific records by typing part of a name.
+
+### Issue 7
+**Add Email Address Field with Masking**
+I added an email field to the form and validated it using Pydantic with a simple @ check. On the results page, 
+I mask the email showing only the first few characters and the domain to keep it private.
+
+### Issue 8
+**Add Download as CSV**
+I added a “Download CSV” button so users can easily export the results. It takes the current data from state.resultsData,
+ builds a CSV string using Object.keys() and Object.values(), and then creates a downloadable file using Blob and URL.createObjectURL().
+ The file name includes a timestamp for clarity. This makes it really convenient for users to save or analyze their data offline.
+
+
+Thanks again for reviewing my work!  
+ 
+**Oghenefejiro Macdonald Ejime**
diff --git a/web/.gitignore b/web/.gitignore
index a547bf3..4108b33 100644
--- a/web/.gitignore
+++ b/web/.gitignore
@@ -1,24 +1,24 @@
-# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-pnpm-debug.log*
-lerna-debug.log*
-
-node_modules
-dist
-dist-ssr
-*.local
-
-# Editor directories and files
-.vscode/*
-!.vscode/extensions.json
-.idea
-.DS_Store
-*.suo
-*.ntvs*
-*.njsproj
-*.sln
-*.sw?
+# Logs
+logs
+*.log
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+pnpm-debug.log*
+lerna-debug.log*
+
+node_modules
+dist
+dist-ssr
+*.local
+
+# Editor directories and files
+.vscode/*
+!.vscode/extensions.json
+.idea
+.DS_Store
+*.suo
+*.ntvs*
+*.njsproj
+*.sln
+*.sw?
diff --git a/web/index.html b/web/index.html
index a82cefb..931398a 100644
--- a/web/index.html
+++ b/web/index.html
@@ -1,13 +1,13 @@
-<!doctype html>
-<html lang="en" data-theme="dark">
-  <head>
-    <meta charset="UTF-8" />
-    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
-    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <title>Lab 1</title>
-  </head>
-  <body>
-    <div id="root"></div>
-    <script type="module" src="/src/main.jsx"></script>
-  </body>
-</html>
+<!doctype html>
+<html lang="en" data-theme="dark">
+  <head>
+    <meta charset="UTF-8" />
+    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Lab 1</title>
+  </head>
+  <body>
+    <div id="root"></div>
+    <script type="module" src="/src/main.jsx"></script>
+  </body>
+</html>
diff --git a/web/package-lock.json b/web/package-lock.json
new file mode 100644
index 0000000..f55a6a4
--- /dev/null
+++ b/web/package-lock.json
@@ -0,0 +1,1824 @@
+{
+  "name": "web",
+  "version": "0.0.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "web",
+      "version": "0.0.0",
+      "dependencies": {
+        "@vitejs/plugin-react": "^4.4.1",
+        "react-bootstrap": "^2.7.0"
+      },
+      "devDependencies": {
+        "react-chartjs-2": "^5.3.0",
+        "react-dom": "^18.3.1",
+        "react-router-dom": "^6.26.2",
+        "vite": "^6.3.5"
+      }
+    },
+    "node_modules/@ampproject/remapping": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
+      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/code-frame": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz",
+      "integrity": "sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==",
+      "dependencies": {
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "js-tokens": "^4.0.0",
+        "picocolors": "^1.1.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/compat-data": {
+      "version": "7.27.5",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.27.5.tgz",
+      "integrity": "sha512-KiRAp/VoJaWkkte84TvUd9qjdbZAdiqyvMxrGl1N6vzFogKmaLgoM3L1kgtLicp2HP5fBJS8JrZKLVIZGVJAVg==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/core": {
+      "version": "7.27.4",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.27.4.tgz",
+      "integrity": "sha512-bXYxrXFubeYdvB0NhD/NBB3Qi6aZeV20GOWVI47t2dkecCEoneR4NPVcb7abpXDEvejgrUfFtG6vG/zxAKmg+g==",
+      "dependencies": {
+        "@ampproject/remapping": "^2.2.0",
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.27.3",
+        "@babel/helper-compilation-targets": "^7.27.2",
+        "@babel/helper-module-transforms": "^7.27.3",
+        "@babel/helpers": "^7.27.4",
+        "@babel/parser": "^7.27.4",
+        "@babel/template": "^7.27.2",
+        "@babel/traverse": "^7.27.4",
+        "@babel/types": "^7.27.3",
+        "convert-source-map": "^2.0.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.2",
+        "json5": "^2.2.3",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/babel"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.27.5",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.27.5.tgz",
+      "integrity": "sha512-ZGhA37l0e/g2s1Cnzdix0O3aLYm66eF8aufiVteOgnwxgnRP8GoyMj7VWsgWnQbVKXyge7hqrFh2K2TQM6t1Hw==",
+      "dependencies": {
+        "@babel/parser": "^7.27.5",
+        "@babel/types": "^7.27.3",
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.25",
+        "jsesc": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz",
+      "integrity": "sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==",
+      "dependencies": {
+        "@babel/compat-data": "^7.27.2",
+        "@babel/helper-validator-option": "^7.27.1",
+        "browserslist": "^4.24.0",
+        "lru-cache": "^5.1.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-imports": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz",
+      "integrity": "sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==",
+      "dependencies": {
+        "@babel/traverse": "^7.27.1",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-transforms": {
+      "version": "7.27.3",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz",
+      "integrity": "sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1",
+        "@babel/traverse": "^7.27.3"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-plugin-utils": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz",
+      "integrity": "sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-string-parser": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
+      "integrity": "sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-identifier": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz",
+      "integrity": "sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-option": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz",
+      "integrity": "sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helpers": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz",
+      "integrity": "sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==",
+      "dependencies": {
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.27.6"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/parser": {
+      "version": "7.27.5",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.27.5.tgz",
+      "integrity": "sha512-OsQd175SxWkGlzbny8J3K8TnnDD0N3lrIUtB92xwyRpzaenGZhxDvxN/JgU00U3CDZNj9tPuDJ5H0WS4Nt3vKg==",
+      "dependencies": {
+        "@babel/types": "^7.27.3"
+      },
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-self": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.27.1.tgz",
+      "integrity": "sha512-6UzkCs+ejGdZ5mFFC/OCUrv028ab2fp1znZmCZjAOBKiBK2jXD1O+BPSfX8X2qjJ75fZBMSnQn3Rq2mrBJK2mw==",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-source": {
+      "version": "7.27.1",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.27.1.tgz",
+      "integrity": "sha512-zbwoTsBruTeKB9hSq73ha66iFeJHuaFkUbwvqElnygoNbj/jHRsSeokowZFN3CZ64IvEqcmmkVe89OPXc7ldAw==",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/runtime": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz",
+      "integrity": "sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/template": {
+      "version": "7.27.2",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz",
+      "integrity": "sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/parser": "^7.27.2",
+        "@babel/types": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/traverse": {
+      "version": "7.27.4",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.27.4.tgz",
+      "integrity": "sha512-oNcu2QbHqts9BtOWJosOVJapWjBDSxGCpFvikNR5TGDYDQf3JwpIoMzIKrvfoti93cLfPJEG4tH9SPVeyCGgdA==",
+      "dependencies": {
+        "@babel/code-frame": "^7.27.1",
+        "@babel/generator": "^7.27.3",
+        "@babel/parser": "^7.27.4",
+        "@babel/template": "^7.27.2",
+        "@babel/types": "^7.27.3",
+        "debug": "^4.3.1",
+        "globals": "^11.1.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/types": {
+      "version": "7.27.6",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.27.6.tgz",
+      "integrity": "sha512-ETyHEk2VHHvl9b9jZP5IHPavHYk57EhanlRRuae9XCpb/j5bDCbPPMOBfCWhnl/7EDJz0jEMCi/RhccCE8r1+Q==",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.27.1",
+        "@babel/helper-validator-identifier": "^7.27.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@esbuild/aix-ppc64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgz",
+      "integrity": "sha512-9o3TMmpmftaCMepOdA5k/yDw8SfInyzWWTjYTFCX3kPSDJMROQTb8jg+h9Cnwnmm1vOzvxN7gIfB5V2ewpjtGA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "optional": true,
+      "os": [
+        "aix"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.25.5.tgz",
+      "integrity": "sha512-AdJKSPeEHgi7/ZhuIPtcQKr5RQdo6OO2IL87JkianiMYMPbCtot9fxPbrMiBADOWWm3T2si9stAiVsGbTQFkbA==",
+      "cpu": [
+        "arm"
+      ],
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.25.5.tgz",
+      "integrity": "sha512-VGzGhj4lJO+TVGV1v8ntCZWJktV7SGCs3Pn1GRWI1SBFtRALoomm8k5E9Pmwg3HOAal2VDc2F9+PM/rEY6oIDg==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/android-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.25.5.tgz",
+      "integrity": "sha512-D2GyJT1kjvO//drbRT3Hib9XPwQeWd9vZoBJn+bu/lVsOZ13cqNdDeqIF/xQ5/VmWvMduP6AmXvylO/PIc2isw==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.25.5.tgz",
+      "integrity": "sha512-GtaBgammVvdF7aPIgH2jxMDdivezgFu6iKpmT+48+F8Hhg5J/sfnDieg0aeG/jfSvkYQU2/pceFPDKlqZzwnfQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/darwin-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.25.5.tgz",
+      "integrity": "sha512-1iT4FVL0dJ76/q1wd7XDsXrSW+oLoquptvh4CLR4kITDtqi2e/xwXwdCVH8hVHU43wgJdsq7Gxuzcs6Iq/7bxQ==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.25.5.tgz",
+      "integrity": "sha512-nk4tGP3JThz4La38Uy/gzyXtpkPW8zSAmoUhK9xKKXdBCzKODMc2adkB2+8om9BDYugz+uGV7sLmpTYzvmz6Sw==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/freebsd-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.25.5.tgz",
+      "integrity": "sha512-PrikaNjiXdR2laW6OIjlbeuCPrPaAl0IwPIaRv+SMV8CiM8i2LqVUHFC1+8eORgWyY7yhQY+2U2fA55mBzReaw==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.25.5.tgz",
+      "integrity": "sha512-cPzojwW2okgh7ZlRpcBEtsX7WBuqbLrNXqLU89GxWbNt6uIg78ET82qifUy3W6OVww6ZWobWub5oqZOVtwolfw==",
+      "cpu": [
+        "arm"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.25.5.tgz",
+      "integrity": "sha512-Z9kfb1v6ZlGbWj8EJk9T6czVEjjq2ntSYLY2cw6pAZl4oKtfgQuS4HOq41M/BcoLPzrUbNd+R4BXFyH//nHxVg==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ia32": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.25.5.tgz",
+      "integrity": "sha512-sQ7l00M8bSv36GLV95BVAdhJ2QsIbCuCjh/uYrWiMQSUuV+LpXwIqhgJDcvMTj+VsQmqAHL2yYaasENvJ7CDKA==",
+      "cpu": [
+        "ia32"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-loong64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.25.5.tgz",
+      "integrity": "sha512-0ur7ae16hDUC4OL5iEnDb0tZHDxYmuQyhKhsPBV8f99f6Z9KQM02g33f93rNH5A30agMS46u2HP6qTdEt6Q1kg==",
+      "cpu": [
+        "loong64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-mips64el": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.25.5.tgz",
+      "integrity": "sha512-kB/66P1OsHO5zLz0i6X0RxlQ+3cu0mkxS3TKFvkb5lin6uwZ/ttOkP3Z8lfR9mJOBk14ZwZ9182SIIWFGNmqmg==",
+      "cpu": [
+        "mips64el"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-ppc64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.25.5.tgz",
+      "integrity": "sha512-UZCmJ7r9X2fe2D6jBmkLBMQetXPXIsZjQJCjgwpVDz+YMcS6oFR27alkgGv3Oqkv07bxdvw7fyB71/olceJhkQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-riscv64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.25.5.tgz",
+      "integrity": "sha512-kTxwu4mLyeOlsVIFPfQo+fQJAV9mh24xL+y+Bm6ej067sYANjyEw1dNHmvoqxJUCMnkBdKpvOn0Ahql6+4VyeA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-s390x": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.25.5.tgz",
+      "integrity": "sha512-K2dSKTKfmdh78uJ3NcWFiqyRrimfdinS5ErLSn3vluHNeHVnBAFWC8a4X5N+7FgVE1EjXS1QDZbpqZBjfrqMTQ==",
+      "cpu": [
+        "s390x"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/linux-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.25.5.tgz",
+      "integrity": "sha512-uhj8N2obKTE6pSZ+aMUbqq+1nXxNjZIIjCjGLfsWvVpy7gKCOL6rsY1MhRh9zLtUtAI7vpgLMK6DxjO8Qm9lJw==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-arm64/-/netbsd-arm64-0.25.5.tgz",
+      "integrity": "sha512-pwHtMP9viAy1oHPvgxtOv+OkduK5ugofNTVDilIzBLpoWAM16r7b/mxBvfpuQDpRQFMfuVr5aLcn4yveGvBZvw==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/netbsd-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.25.5.tgz",
+      "integrity": "sha512-WOb5fKrvVTRMfWFNCroYWWklbnXH0Q5rZppjq0vQIdlsQKuw6mdSihwSo4RV/YdQ5UCKKvBy7/0ZZYLBZKIbwQ==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-arm64/-/openbsd-arm64-0.25.5.tgz",
+      "integrity": "sha512-7A208+uQKgTxHd0G0uqZO8UjK2R0DDb4fDmERtARjSHWxqMTye4Erz4zZafx7Di9Cv+lNHYuncAkiGFySoD+Mw==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/openbsd-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.25.5.tgz",
+      "integrity": "sha512-G4hE405ErTWraiZ8UiSoesH8DaCsMm0Cay4fsFWOOUcz8b8rC6uCvnagr+gnioEjWn0wC+o1/TAHt+It+MpIMg==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/sunos-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.25.5.tgz",
+      "integrity": "sha512-l+azKShMy7FxzY0Rj4RCt5VD/q8mG/e+mDivgspo+yL8zW7qEwctQ6YqKX34DTEleFAvCIUviCFX1SDZRSyMQA==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "sunos"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-arm64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.25.5.tgz",
+      "integrity": "sha512-O2S7SNZzdcFG7eFKgvwUEZ2VG9D/sn/eIiz8XRZ1Q/DO5a3s76Xv0mdBzVM5j5R639lXQmPmSo0iRpHqUUrsxw==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-ia32": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.25.5.tgz",
+      "integrity": "sha512-onOJ02pqs9h1iMJ1PQphR+VZv8qBMQ77Klcsqv9CNW2w6yLqoURLcgERAIurY6QE63bbLuqgP9ATqajFLK5AMQ==",
+      "cpu": [
+        "ia32"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@esbuild/win32-x64": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.25.5.tgz",
+      "integrity": "sha512-TXv6YnJ8ZMVdX+SXWVBo/0p8LTcrUYngpWjvm91TMjjBQii7Oz11Lw5lbDV5Y0TzuhSJHwiH4hEtC1I42mMS0g==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=18"
+      }
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.8",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
+      "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
+      "dependencies": {
+        "@jridgewell/set-array": "^1.2.1",
+        "@jridgewell/sourcemap-codec": "^1.4.10",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
+      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/set-array": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
+      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
+      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ=="
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/@kurkle/color": {
+      "version": "0.3.4",
+      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.4.tgz",
+      "integrity": "sha512-M5UknZPHRu3DEDWoipU6sE8PdkZ6Z/S+v4dD+Ke8IaNlpdSQah50lz1KtcFBa2vsdOnwbbnxJwVM4wty6udA5w==",
+      "dev": true,
+      "peer": true
+    },
+    "node_modules/@popperjs/core": {
+      "version": "2.11.8",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
+      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/popperjs"
+      }
+    },
+    "node_modules/@react-aria/ssr": {
+      "version": "3.9.9",
+      "resolved": "https://registry.npmjs.org/@react-aria/ssr/-/ssr-3.9.9.tgz",
+      "integrity": "sha512-2P5thfjfPy/np18e5wD4WPt8ydNXhij1jwA8oehxZTFqlgVMGXzcWKxTb4RtJrLFsqPO7RUQTiY8QJk0M4Vy2g==",
+      "dependencies": {
+        "@swc/helpers": "^0.5.0"
+      },
+      "engines": {
+        "node": ">= 12"
+      },
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0-rc.1 || ^18.0.0 || ^19.0.0-rc.1"
+      }
+    },
+    "node_modules/@remix-run/router": {
+      "version": "1.23.0",
+      "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.23.0.tgz",
+      "integrity": "sha512-O3rHJzAQKamUz1fvE0Qaw0xSFqsA/yafi2iqeE0pvdFtCO1viYx8QL6f3Ln/aCCTLxs68SLf0KPM9eSeM8yBnA==",
+      "dev": true,
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@restart/hooks": {
+      "version": "0.4.16",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.4.16.tgz",
+      "integrity": "sha512-f7aCv7c+nU/3mF7NWLtVVr0Ra80RqsO89hO72r+Y/nvQr5+q0UFGkocElTH6MJApvReVh6JHUFYn2cw1WdHF3w==",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@restart/ui": {
+      "version": "1.9.4",
+      "resolved": "https://registry.npmjs.org/@restart/ui/-/ui-1.9.4.tgz",
+      "integrity": "sha512-N4C7haUc3vn4LTwVUPlkJN8Ach/+yIMvRuTVIhjilNHqegY60SGLrzud6errOMNJwSnmYFnt1J0H/k8FE3A4KA==",
+      "dependencies": {
+        "@babel/runtime": "^7.26.0",
+        "@popperjs/core": "^2.11.8",
+        "@react-aria/ssr": "^3.5.0",
+        "@restart/hooks": "^0.5.0",
+        "@types/warning": "^3.0.3",
+        "dequal": "^2.0.3",
+        "dom-helpers": "^5.2.0",
+        "uncontrollable": "^8.0.4",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      }
+    },
+    "node_modules/@restart/ui/node_modules/@restart/hooks": {
+      "version": "0.5.1",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.5.1.tgz",
+      "integrity": "sha512-EMoH04NHS1pbn07iLTjIjgttuqb7qu4+/EyhAx27MHpoENcB2ZdSsLTNxmKD+WEPnZigo62Qc8zjGnNxoSE/5Q==",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/@restart/ui/node_modules/uncontrollable": {
+      "version": "8.0.4",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-8.0.4.tgz",
+      "integrity": "sha512-ulRWYWHvscPFc0QQXvyJjY6LIXU56f0h8pQFvhxiKk5V1fcI8gp9Ht9leVAhrVjzqMw0BgjspBINx9r6oyJUvQ==",
+      "peerDependencies": {
+        "react": ">=16.14.0"
+      }
+    },
+    "node_modules/@rolldown/pluginutils": {
+      "version": "1.0.0-beta.9",
+      "resolved": "https://registry.npmjs.org/@rolldown/pluginutils/-/pluginutils-1.0.0-beta.9.tgz",
+      "integrity": "sha512-e9MeMtVWo186sgvFFJOPGy7/d2j2mZhLJIdVW0C/xDluuOvymEATqz6zKsP0ZmXGzQtqlyjz5sC1sYQUoJG98w=="
+    },
+    "node_modules/@rollup/rollup-android-arm-eabi": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.42.0.tgz",
+      "integrity": "sha512-gldmAyS9hpj+H6LpRNlcjQWbuKUtb94lodB9uCz71Jm+7BxK1VIOo7y62tZZwxhA7j1ylv/yQz080L5WkS+LoQ==",
+      "cpu": [
+        "arm"
+      ],
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-android-arm64": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.42.0.tgz",
+      "integrity": "sha512-bpRipfTgmGFdCZDFLRvIkSNO1/3RGS74aWkJJTFJBH7h3MRV4UijkaEUeOMbi9wxtxYmtAbVcnMtHTPBhLEkaw==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-arm64": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.42.0.tgz",
+      "integrity": "sha512-JxHtA081izPBVCHLKnl6GEA0w3920mlJPLh89NojpU2GsBSB6ypu4erFg/Wx1qbpUbepn0jY4dVWMGZM8gplgA==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-x64": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.42.0.tgz",
+      "integrity": "sha512-rv5UZaWVIJTDMyQ3dCEK+m0SAn6G7H3PRc2AZmExvbDvtaDc+qXkei0knQWcI3+c9tEs7iL/4I4pTQoPbNL2SA==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-arm64": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.42.0.tgz",
+      "integrity": "sha512-fJcN4uSGPWdpVmvLuMtALUFwCHgb2XiQjuECkHT3lWLZhSQ3MBQ9pq+WoWeJq2PrNxr9rPM1Qx+IjyGj8/c6zQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-freebsd-x64": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.42.0.tgz",
+      "integrity": "sha512-CziHfyzpp8hJpCVE/ZdTizw58gr+m7Y2Xq5VOuCSrZR++th2xWAz4Nqk52MoIIrV3JHtVBhbBsJcAxs6NammOQ==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "freebsd"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.42.0.tgz",
+      "integrity": "sha512-UsQD5fyLWm2Fe5CDM7VPYAo+UC7+2Px4Y+N3AcPh/LdZu23YcuGPegQly++XEVaC8XUTFVPscl5y5Cl1twEI4A==",
+      "cpu": [
+        "arm"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.42.0.tgz",
+      "integrity": "sha512-/i8NIrlgc/+4n1lnoWl1zgH7Uo0XK5xK3EDqVTf38KvyYgCU/Rm04+o1VvvzJZnVS5/cWSd07owkzcVasgfIkQ==",
+      "cpu": [
+        "arm"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.42.0.tgz",
+      "integrity": "sha512-eoujJFOvoIBjZEi9hJnXAbWg+Vo1Ov8n/0IKZZcPZ7JhBzxh2A+2NFyeMZIRkY9iwBvSjloKgcvnjTbGKHE44Q==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-musl": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.42.0.tgz",
+      "integrity": "sha512-/3NrcOWFSR7RQUQIuZQChLND36aTU9IYE4j+TB40VU78S+RA0IiqHR30oSh6P1S9f9/wVOenHQnacs/Byb824g==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.42.0.tgz",
+      "integrity": "sha512-O8AplvIeavK5ABmZlKBq9/STdZlnQo7Sle0LLhVA7QT+CiGpNVe197/t8Aph9bhJqbDVGCHpY2i7QyfEDDStDg==",
+      "cpu": [
+        "loong64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.42.0.tgz",
+      "integrity": "sha512-6Qb66tbKVN7VyQrekhEzbHRxXXFFD8QKiFAwX5v9Xt6FiJ3BnCVBuyBxa2fkFGqxOCSGGYNejxd8ht+q5SnmtA==",
+      "cpu": [
+        "ppc64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.42.0.tgz",
+      "integrity": "sha512-KQETDSEBamQFvg/d8jajtRwLNBlGc3aKpaGiP/LvEbnmVUKlFta1vqJqTrvPtsYsfbE/DLg5CC9zyXRX3fnBiA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-musl": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.42.0.tgz",
+      "integrity": "sha512-qMvnyjcU37sCo/tuC+JqeDKSuukGAd+pVlRl/oyDbkvPJ3awk6G6ua7tyum02O3lI+fio+eM5wsVd66X0jQtxw==",
+      "cpu": [
+        "riscv64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-s390x-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.42.0.tgz",
+      "integrity": "sha512-I2Y1ZUgTgU2RLddUHXTIgyrdOwljjkmcZ/VilvaEumtS3Fkuhbw4p4hgHc39Ypwvo2o7sBFNl2MquNvGCa55Iw==",
+      "cpu": [
+        "s390x"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-gnu": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.42.0.tgz",
+      "integrity": "sha512-Gfm6cV6mj3hCUY8TqWa63DB8Mx3NADoFwiJrMpoZ1uESbK8FQV3LXkhfry+8bOniq9pqY1OdsjFWNsSbfjPugw==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-musl": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.42.0.tgz",
+      "integrity": "sha512-g86PF8YZ9GRqkdi0VoGlcDUb4rYtQKyTD1IVtxxN4Hpe7YqLBShA7oHMKU6oKTCi3uxwW4VkIGnOaH/El8de3w==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-arm64-msvc": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.42.0.tgz",
+      "integrity": "sha512-+axkdyDGSp6hjyzQ5m1pgcvQScfHnMCcsXkx8pTgy/6qBmWVhtRVlgxjWwDp67wEXXUr0x+vD6tp5W4x6V7u1A==",
+      "cpu": [
+        "arm64"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-ia32-msvc": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.42.0.tgz",
+      "integrity": "sha512-F+5J9pelstXKwRSDq92J0TEBXn2nfUrQGg+HK1+Tk7VOL09e0gBqUHugZv7SW4MGrYj41oNCUe3IKCDGVlis2g==",
+      "cpu": [
+        "ia32"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-x64-msvc": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.42.0.tgz",
+      "integrity": "sha512-LpHiJRwkaVz/LqjHjK8LCi8osq7elmpwujwbXKNW88bM8eeGxavJIKKjkjpMHAh/2xfnrt1ZSnhTv41WYUHYmA==",
+      "cpu": [
+        "x64"
+      ],
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@swc/helpers": {
+      "version": "0.5.17",
+      "resolved": "https://registry.npmjs.org/@swc/helpers/-/helpers-0.5.17.tgz",
+      "integrity": "sha512-5IKx/Y13RsYd+sauPb2x+U/xZikHjolzfuDgTAl/Tdf3Q8rslRvC19NKDLgAJQ6wsqADk10ntlv08nPFw/gO/A==",
+      "dependencies": {
+        "tslib": "^2.8.0"
+      }
+    },
+    "node_modules/@types/babel__core": {
+      "version": "7.20.5",
+      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
+      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
+      "dependencies": {
+        "@babel/parser": "^7.20.7",
+        "@babel/types": "^7.20.7",
+        "@types/babel__generator": "*",
+        "@types/babel__template": "*",
+        "@types/babel__traverse": "*"
+      }
+    },
+    "node_modules/@types/babel__generator": {
+      "version": "7.27.0",
+      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz",
+      "integrity": "sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==",
+      "dependencies": {
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__template": {
+      "version": "7.4.4",
+      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
+      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
+      "dependencies": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__traverse": {
+      "version": "7.20.7",
+      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz",
+      "integrity": "sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==",
+      "dependencies": {
+        "@babel/types": "^7.20.7"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
+      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ=="
+    },
+    "node_modules/@types/prop-types": {
+      "version": "15.7.14",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.14.tgz",
+      "integrity": "sha512-gNMvNH49DJ7OJYv+KAKn0Xp45p8PLl6zo2YnvDIbTd4J6MER2BmWN49TG7n9LvkyihINxeKW8+3bfS2yDC9dzQ=="
+    },
+    "node_modules/@types/react": {
+      "version": "19.1.6",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-19.1.6.tgz",
+      "integrity": "sha512-JeG0rEWak0N6Itr6QUx+X60uQmN+5t3j9r/OVDtWzFXKaj6kD1BwJzOksD0FF6iWxZlbE1kB0q9vtnU2ekqa1Q==",
+      "dependencies": {
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@types/react-transition-group": {
+      "version": "4.4.12",
+      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.12.tgz",
+      "integrity": "sha512-8TV6R3h2j7a91c+1DXdJi3Syo69zzIZbz7Lg5tORM5LEJG7X/E6a1V3drRyBRZq7/utz7A+c4OgYLiLcYGHG6w==",
+      "peerDependencies": {
+        "@types/react": "*"
+      }
+    },
+    "node_modules/@types/warning": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/@types/warning/-/warning-3.0.3.tgz",
+      "integrity": "sha512-D1XC7WK8K+zZEveUPY+cf4+kgauk8N4eHr/XIHXGlGYkHLud6hK9lYfZk1ry1TNh798cZUCgb6MqGEG8DkJt6Q=="
+    },
+    "node_modules/@vitejs/plugin-react": {
+      "version": "4.5.1",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.5.1.tgz",
+      "integrity": "sha512-uPZBqSI0YD4lpkIru6M35sIfylLGTyhGHvDZbNLuMA73lMlwJKz5xweH7FajfcCAc2HnINciejA9qTz0dr0M7A==",
+      "dependencies": {
+        "@babel/core": "^7.26.10",
+        "@babel/plugin-transform-react-jsx-self": "^7.25.9",
+        "@babel/plugin-transform-react-jsx-source": "^7.25.9",
+        "@rolldown/pluginutils": "1.0.0-beta.9",
+        "@types/babel__core": "^7.20.5",
+        "react-refresh": "^0.17.0"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "vite": "^4.2.0 || ^5.0.0 || ^6.0.0"
+      }
+    },
+    "node_modules/browserslist": {
+      "version": "4.25.0",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.25.0.tgz",
+      "integrity": "sha512-PJ8gYKeS5e/whHBh8xrwYK+dAvEj7JXtz6uTucnMRB8OiGTsKccFekoRrjajPBHV8oOY+2tI4uxeceSimKwMFA==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001718",
+        "electron-to-chromium": "^1.5.160",
+        "node-releases": "^2.0.19",
+        "update-browserslist-db": "^1.1.3"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      }
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001721",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001721.tgz",
+      "integrity": "sha512-cOuvmUVtKrtEaoKiO0rSc29jcjwMwX5tOHDy4MgVFEWiUXj4uBMJkwI8MDySkgXidpMiHUcviogAvFi4pA2hDQ==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ]
+    },
+    "node_modules/chart.js": {
+      "version": "4.4.9",
+      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.4.9.tgz",
+      "integrity": "sha512-EyZ9wWKgpAU0fLJ43YAEIF8sr5F2W3LqbS40ZJyHIner2lY14ufqv2VMp69MAiZ2rpwxEUxEhIH/0U3xyRynxg==",
+      "dev": true,
+      "peer": true,
+      "dependencies": {
+        "@kurkle/color": "^0.3.0"
+      },
+      "engines": {
+        "pnpm": ">=8"
+      }
+    },
+    "node_modules/classnames": {
+      "version": "2.5.1",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz",
+      "integrity": "sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow=="
+    },
+    "node_modules/convert-source-map": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
+      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg=="
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw=="
+    },
+    "node_modules/debug": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
+      "dependencies": {
+        "ms": "^2.1.3"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/dequal": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
+      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/dom-helpers": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.1.tgz",
+      "integrity": "sha512-nRCa7CK3VTrM2NmGkIy4cbK7IZlgBE/PYMn55rrXefr5xXDP0LdtfPnblFDoVdcAfslJ7or6iqAUnx0CCGIWQA==",
+      "dependencies": {
+        "@babel/runtime": "^7.8.7",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.5.165",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.165.tgz",
+      "integrity": "sha512-naiMx1Z6Nb2TxPU6fiFrUrDTjyPMLdTtaOd2oLmG8zVSg2hCWGkhPyxwk+qRmZ1ytwVqUv0u7ZcDA5+ALhaUtw=="
+    },
+    "node_modules/esbuild": {
+      "version": "0.25.5",
+      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.25.5.tgz",
+      "integrity": "sha512-P8OtKZRv/5J5hhz0cUAdu/cLuPIKXpQl1R9pZtvmHWQvrAUVd0UNIPT4IB4W3rNOqVO0rlqHmCIbSwxh/c9yUQ==",
+      "hasInstallScript": true,
+      "bin": {
+        "esbuild": "bin/esbuild"
+      },
+      "engines": {
+        "node": ">=18"
+      },
+      "optionalDependencies": {
+        "@esbuild/aix-ppc64": "0.25.5",
+        "@esbuild/android-arm": "0.25.5",
+        "@esbuild/android-arm64": "0.25.5",
+        "@esbuild/android-x64": "0.25.5",
+        "@esbuild/darwin-arm64": "0.25.5",
+        "@esbuild/darwin-x64": "0.25.5",
+        "@esbuild/freebsd-arm64": "0.25.5",
+        "@esbuild/freebsd-x64": "0.25.5",
+        "@esbuild/linux-arm": "0.25.5",
+        "@esbuild/linux-arm64": "0.25.5",
+        "@esbuild/linux-ia32": "0.25.5",
+        "@esbuild/linux-loong64": "0.25.5",
+        "@esbuild/linux-mips64el": "0.25.5",
+        "@esbuild/linux-ppc64": "0.25.5",
+        "@esbuild/linux-riscv64": "0.25.5",
+        "@esbuild/linux-s390x": "0.25.5",
+        "@esbuild/linux-x64": "0.25.5",
+        "@esbuild/netbsd-arm64": "0.25.5",
+        "@esbuild/netbsd-x64": "0.25.5",
+        "@esbuild/openbsd-arm64": "0.25.5",
+        "@esbuild/openbsd-x64": "0.25.5",
+        "@esbuild/sunos-x64": "0.25.5",
+        "@esbuild/win32-arm64": "0.25.5",
+        "@esbuild/win32-ia32": "0.25.5",
+        "@esbuild/win32-x64": "0.25.5"
+      }
+    },
+    "node_modules/escalade": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
+      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/fdir": {
+      "version": "6.4.5",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz",
+      "integrity": "sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==",
+      "peerDependencies": {
+        "picomatch": "^3 || ^4"
+      },
+      "peerDependenciesMeta": {
+        "picomatch": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/fsevents": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
+      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
+      "hasInstallScript": true,
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
+      }
+    },
+    "node_modules/gensync": {
+      "version": "1.0.0-beta.2",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
+      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/globals": {
+      "version": "11.12.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
+      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/invariant": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
+      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
+    },
+    "node_modules/jsesc": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
+      "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
+    "node_modules/lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "dependencies": {
+        "yallist": "^3.0.2"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.11",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz",
+      "integrity": "sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==",
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/node-releases": {
+      "version": "2.0.19",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
+      "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw=="
+    },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/picocolors": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
+      "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA=="
+    },
+    "node_modules/picomatch": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-4.0.2.tgz",
+      "integrity": "sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/postcss": {
+      "version": "8.5.4",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz",
+      "integrity": "sha512-QSa9EBe+uwlGTFmHsPKokv3B/oEMQZxfqW0QqNCyhpa6mB1afzulwn8hihglqAb2pOw+BJgNlmXQ8la2VeHB7w==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "nanoid": "^3.3.11",
+        "picocolors": "^1.1.1",
+        "source-map-js": "^1.2.1"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/prop-types": {
+      "version": "15.8.1",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
+      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
+      "dependencies": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.13.1"
+      }
+    },
+    "node_modules/prop-types-extra": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/prop-types-extra/-/prop-types-extra-1.1.1.tgz",
+      "integrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew==",
+      "dependencies": {
+        "react-is": "^16.3.2",
+        "warning": "^4.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=0.14.0"
+      }
+    },
+    "node_modules/react": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
+      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
+      "peer": true,
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-bootstrap": {
+      "version": "2.10.10",
+      "resolved": "https://registry.npmjs.org/react-bootstrap/-/react-bootstrap-2.10.10.tgz",
+      "integrity": "sha512-gMckKUqn8aK/vCnfwoBpBVFUGT9SVQxwsYrp9yDHt0arXMamxALerliKBxr1TPbntirK/HGrUAHYbAeQTa9GHQ==",
+      "dependencies": {
+        "@babel/runtime": "^7.24.7",
+        "@restart/hooks": "^0.4.9",
+        "@restart/ui": "^1.9.4",
+        "@types/prop-types": "^15.7.12",
+        "@types/react-transition-group": "^4.4.6",
+        "classnames": "^2.3.2",
+        "dom-helpers": "^5.2.1",
+        "invariant": "^2.2.4",
+        "prop-types": "^15.8.1",
+        "prop-types-extra": "^1.1.0",
+        "react-transition-group": "^4.4.5",
+        "uncontrollable": "^7.2.1",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "@types/react": ">=16.14.8",
+        "react": ">=16.14.0",
+        "react-dom": ">=16.14.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/react-chartjs-2": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/react-chartjs-2/-/react-chartjs-2-5.3.0.tgz",
+      "integrity": "sha512-UfZZFnDsERI3c3CZGxzvNJd02SHjaSJ8kgW1djn65H1KK8rehwTjyrRKOG3VTMG8wtHZ5rgAO5oTHtHi9GCCmw==",
+      "dev": true,
+      "peerDependencies": {
+        "chart.js": "^4.1.1",
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
+      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
+      "dependencies": {
+        "loose-envify": "^1.1.0",
+        "scheduler": "^0.23.2"
+      },
+      "peerDependencies": {
+        "react": "^18.3.1"
+      }
+    },
+    "node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
+    },
+    "node_modules/react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="
+    },
+    "node_modules/react-refresh": {
+      "version": "0.17.0",
+      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.17.0.tgz",
+      "integrity": "sha512-z6F7K9bV85EfseRCp2bzrpyQ0Gkw1uLoCel9XBVWPg/TjRj94SkJzUTGfOa4bs7iJvBWtQG0Wq7wnI0syw3EBQ==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-router": {
+      "version": "6.30.1",
+      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.30.1.tgz",
+      "integrity": "sha512-X1m21aEmxGXqENEPG3T6u0Th7g0aS4ZmoNynhbs+Cn+q+QGTLt+d5IQ2bHAXKzKcxGJjxACpVbnYQSCRcfxHlQ==",
+      "dev": true,
+      "dependencies": {
+        "@remix-run/router": "1.23.0"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8"
+      }
+    },
+    "node_modules/react-router-dom": {
+      "version": "6.30.1",
+      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.30.1.tgz",
+      "integrity": "sha512-llKsgOkZdbPU1Eg3zK8lCn+sjD9wMRZZPuzmdWWX5SUs8OFkN5HnFVC0u5KMeMaC9aoancFI/KoLuKPqN+hxHw==",
+      "dev": true,
+      "dependencies": {
+        "@remix-run/router": "1.23.0",
+        "react-router": "6.30.1"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8",
+        "react-dom": ">=16.8"
+      }
+    },
+    "node_modules/react-transition-group": {
+      "version": "4.4.5",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.5.tgz",
+      "integrity": "sha512-pZcd1MCJoiKiBR2NRxeCRg13uCXbydPnmB4EOeRrY7480qNWO8IIgQG6zlDkm6uRMsURXPuKq0GWtiM59a5Q6g==",
+      "dependencies": {
+        "@babel/runtime": "^7.5.5",
+        "dom-helpers": "^5.0.1",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2"
+      },
+      "peerDependencies": {
+        "react": ">=16.6.0",
+        "react-dom": ">=16.6.0"
+      }
+    },
+    "node_modules/rollup": {
+      "version": "4.42.0",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.42.0.tgz",
+      "integrity": "sha512-LW+Vse3BJPyGJGAJt1j8pWDKPd73QM8cRXYK1IxOBgL2AGLu7Xd2YOW0M2sLUBCkF5MshXXtMApyEAEzMVMsnw==",
+      "dependencies": {
+        "@types/estree": "1.0.7"
+      },
+      "bin": {
+        "rollup": "dist/bin/rollup"
+      },
+      "engines": {
+        "node": ">=18.0.0",
+        "npm": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "@rollup/rollup-android-arm-eabi": "4.42.0",
+        "@rollup/rollup-android-arm64": "4.42.0",
+        "@rollup/rollup-darwin-arm64": "4.42.0",
+        "@rollup/rollup-darwin-x64": "4.42.0",
+        "@rollup/rollup-freebsd-arm64": "4.42.0",
+        "@rollup/rollup-freebsd-x64": "4.42.0",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.42.0",
+        "@rollup/rollup-linux-arm-musleabihf": "4.42.0",
+        "@rollup/rollup-linux-arm64-gnu": "4.42.0",
+        "@rollup/rollup-linux-arm64-musl": "4.42.0",
+        "@rollup/rollup-linux-loongarch64-gnu": "4.42.0",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.42.0",
+        "@rollup/rollup-linux-riscv64-gnu": "4.42.0",
+        "@rollup/rollup-linux-riscv64-musl": "4.42.0",
+        "@rollup/rollup-linux-s390x-gnu": "4.42.0",
+        "@rollup/rollup-linux-x64-gnu": "4.42.0",
+        "@rollup/rollup-linux-x64-musl": "4.42.0",
+        "@rollup/rollup-win32-arm64-msvc": "4.42.0",
+        "@rollup/rollup-win32-ia32-msvc": "4.42.0",
+        "@rollup/rollup-win32-x64-msvc": "4.42.0",
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.23.2",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
+      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      }
+    },
+    "node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
+      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/tinyglobby": {
+      "version": "0.2.14",
+      "resolved": "https://registry.npmjs.org/tinyglobby/-/tinyglobby-0.2.14.tgz",
+      "integrity": "sha512-tX5e7OM1HnYr2+a2C/4V0htOcSQcoSTH9KgJnVvNm5zm/cyEWKJ7j7YutsH9CxMdtOkkLFy2AHrMci9IM8IPZQ==",
+      "dependencies": {
+        "fdir": "^6.4.4",
+        "picomatch": "^4.0.2"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/SuperchupuDev"
+      }
+    },
+    "node_modules/tslib": {
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
+      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w=="
+    },
+    "node_modules/uncontrollable": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-7.2.1.tgz",
+      "integrity": "sha512-svtcfoTADIB0nT9nltgjujTi7BzVmwjZClOmskKu/E8FW9BXzg9os8OLr4f8Dlnk0rYWJIWr4wv9eKUXiQvQwQ==",
+      "dependencies": {
+        "@babel/runtime": "^7.6.3",
+        "@types/react": ">=16.9.11",
+        "invariant": "^2.2.4",
+        "react-lifecycles-compat": "^3.0.4"
+      },
+      "peerDependencies": {
+        "react": ">=15.0.0"
+      }
+    },
+    "node_modules/update-browserslist-db": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz",
+      "integrity": "sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "dependencies": {
+        "escalade": "^3.2.0",
+        "picocolors": "^1.1.1"
+      },
+      "bin": {
+        "update-browserslist-db": "cli.js"
+      },
+      "peerDependencies": {
+        "browserslist": ">= 4.21.0"
+      }
+    },
+    "node_modules/vite": {
+      "version": "6.3.5",
+      "resolved": "https://registry.npmjs.org/vite/-/vite-6.3.5.tgz",
+      "integrity": "sha512-cZn6NDFE7wdTpINgs++ZJ4N49W2vRp8LCKrn3Ob1kYNtOo21vfDoaV5GzBfLU4MovSAB8uNRm4jgzVQZ+mBzPQ==",
+      "dependencies": {
+        "esbuild": "^0.25.0",
+        "fdir": "^6.4.4",
+        "picomatch": "^4.0.2",
+        "postcss": "^8.5.3",
+        "rollup": "^4.34.9",
+        "tinyglobby": "^0.2.13"
+      },
+      "bin": {
+        "vite": "bin/vite.js"
+      },
+      "engines": {
+        "node": "^18.0.0 || ^20.0.0 || >=22.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/vitejs/vite?sponsor=1"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.3"
+      },
+      "peerDependencies": {
+        "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
+        "jiti": ">=1.21.0",
+        "less": "*",
+        "lightningcss": "^1.21.0",
+        "sass": "*",
+        "sass-embedded": "*",
+        "stylus": "*",
+        "sugarss": "*",
+        "terser": "^5.16.0",
+        "tsx": "^4.8.1",
+        "yaml": "^2.4.2"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        },
+        "jiti": {
+          "optional": true
+        },
+        "less": {
+          "optional": true
+        },
+        "lightningcss": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        },
+        "sass-embedded": {
+          "optional": true
+        },
+        "stylus": {
+          "optional": true
+        },
+        "sugarss": {
+          "optional": true
+        },
+        "terser": {
+          "optional": true
+        },
+        "tsx": {
+          "optional": true
+        },
+        "yaml": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
+    "node_modules/yallist": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g=="
+    }
+  }
+}
diff --git a/web/package.json b/web/package.json
index 6071291..53bb545 100644
--- a/web/package.json
+++ b/web/package.json
@@ -1,21 +1,21 @@
-{
-  "name": "web",
-  "private": true,
-  "version": "0.0.0",
-  "type": "module",
-  "scripts": {
-    "dev": "vite",
-    "build": "vite build",
-    "preview": "vite preview"
-  },
-  "devDependencies": {
-    "vite": "^6.3.5",
-    "react-chartjs-2": "^5.3.0",
-    "react-dom": "^18.3.1",
-    "react-router-dom": "^6.26.2"
-  },
-  "dependencies": {
-    "@vitejs/plugin-react": "^4.4.1",
-    "react-bootstrap": "^2.7.0"
-  }
-}
+{
+  "name": "web",
+  "private": true,
+  "version": "0.0.0",
+  "type": "module",
+  "scripts": {
+    "dev": "vite",
+    "build": "vite build",
+    "preview": "vite preview"
+  },
+  "devDependencies": {
+    "vite": "^6.3.5",
+    "react-chartjs-2": "^5.3.0",
+    "react-dom": "^18.3.1",
+    "react-router-dom": "^6.26.2"
+  },
+  "dependencies": {
+    "@vitejs/plugin-react": "^4.4.1",
+    "react-bootstrap": "^2.7.0"
+  }
+}
diff --git a/web/src/App.jsx b/web/src/App.jsx
index e43cbf5..5f2e308 100644
--- a/web/src/App.jsx
+++ b/web/src/App.jsx
@@ -1,11 +1,11 @@
-import AppRoutes from './Routes';
-
-function App() {
-	return (
-		<div className="App">
-			<AppRoutes />
-		</div>
-	);
-}
-
-export default App
+import AppRoutes from './Routes';
+
+function App() {
+	return (
+		<div className="App">
+			<AppRoutes />
+		</div>
+	);
+}
+
+export default App
diff --git a/web/src/Routes.jsx b/web/src/Routes.jsx
index 4b6257f..b464eae 100644
--- a/web/src/Routes.jsx
+++ b/web/src/Routes.jsx
@@ -1,27 +1,27 @@
-import { Component } from "react";
-import { BrowserRouter, Routes, Route } from "react-router-dom";
-
-import MainPage from "./pages/main";
-import NewItemPage from "./pages/new";
-import ResultsPage from "./pages/results";
-
-class AppRoutes extends Component {
-    render() {
-        return (
-            <>
-                <BrowserRouter basename="">
-                    <Routes>
-                        <Route exact path="/" element={<MainPage />} />
-                        <Route exact path="/new" element={<NewItemPage />} />
-                        <Route exact path="/results" element={<ResultsPage />} />
-                        <Route path="*" element={<MainPage />} />
-                    </Routes>
-                </BrowserRouter>
-            </>
-        )
-    }
-}
-
-export default function routes() {
-    return <AppRoutes />;
+import { Component } from "react";
+import { BrowserRouter, Routes, Route } from "react-router-dom";
+
+import MainPage from "./pages/main";
+import NewItemPage from "./pages/new";
+import ResultsPage from "./pages/results";
+
+class AppRoutes extends Component {
+    render() {
+        return (
+            <>
+                <BrowserRouter basename="">
+                    <Routes>
+                        <Route exact path="/" element={<MainPage />} />
+                        <Route exact path="/new" element={<NewItemPage />} />
+                        <Route exact path="/results" element={<ResultsPage />} />
+                        <Route path="*" element={<MainPage />} />
+                    </Routes>
+                </BrowserRouter>
+            </>
+        )
+    }
+}
+
+export default function routes() {
+    return <AppRoutes />;
 }
\ No newline at end of file
diff --git a/web/src/components/button/Button.css b/web/src/components/button/Button.css
index c02e4d4..bd63b34 100644
--- a/web/src/components/button/Button.css
+++ b/web/src/components/button/Button.css
@@ -1,129 +1,129 @@
-.DefaultButton {
-    display: inline-flex;
-    justify-content: center;
-    align-items: center;
-    border-radius: 2px;
-    min-width: 120px;
-    gap: 8px;
-    padding: 0 6px;
-    
-    /* Fonts/Nav and Button Label */
-    font-family: 'Roboto';
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 600;
-    line-height: 24px;
-    letter-spacing: 2px;
-    text-transform: uppercase;
-    user-select: none;
-    cursor: pointer;
-}
-
-.DefaultButton.disabled {
-    cursor: unset;
-    pointer-events: none;
-}
-
-.SmallDefaultButton {
-    height: 24px;
-}
-
-.MediumDefaultButton {
-    height: 28px;
-}
-
-.LargeDefaultButton {
-    height: 32px;
-}
-
-.PrimaryButton:hover:not(.disabled) {
-    background: var(--Gradient-Button-Hover);
-}
-
-.PrimaryButton {
-    background: var(--Gradient-Button-Default);
-    color: var(--Button-Primary-Label);
-}
-
-.PrimaryButton.disabled {
-    background: var(--gradientButtonDisabled);
-}
-
-.SecondaryButton:hover:not(.disabled) {
-    background: var(--secondaryHighlight);
-}
-
-.SecondaryButton {
-    background: var(--quandaryBackground);
-    color: var(--primaryText);
-    font-weight: 400;
-}
-
-.SecondaryButton.disabled {
-    background: var(--secondaryBackground);
-}
-
-.TertiaryButton:hover:not(.disabled) {
-    background: var(--tertiaryHighlight);
-}
-
-.TertiaryButton {
-    background: var(--tertiaryBackground);
-    color: var(--primaryText);
-}
-
-.QuandaryButton:hover:not(.disabled) {
-    background: var(--secondaryHighlight);
-}
-
-.QuandaryButton {
-    background: var(--quandaryBackground);
-    color: var(--primaryText);
-}
-
-.StrokeButton {
-    padding: 0px 1rem;
-    min-height: 32px;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-    gap: .5rem;
-    color: var(--Button-Outline-Stroke);
-    border-radius: 0.25rem;
-    background-color: var(--primaryBackground);
-    border: 1px solid var(--Button-Outline-Stroke);
-    cursor: pointer;
-    text-transform: uppercase;
-    letter-spacing: 1px;
-    font-family: 'Roboto';
-    font-weight: 500;
-    transition: all .2s ease-in-out;
-    height: auto;
-    width: auto;
-    box-sizing: border-box;
-    -moz-box-sizing: border-box;
-    -webkit-box-sizing: border-box;
-}
-
-.StrokeButton:hover {
-    background-color: var(--Button-Outline-Stroke-Hover);
-}
-
-.AutoDefaultButton {
-    height: auto;
-    min-width: auto;
-}
-
-.TextButton {
-    background: transparent;
-    color: var(--Button-Link-Text);
-}
-
-.StrokeButtonNeutral {
-    color: var(--tertiaryHighlight);
-    border: 1px solid var(--tertiaryHighlight);
-}
-
-.StrokeButtonNeutral:hover {
-    background-color: var(--secondaryHighlight);
+.DefaultButton {
+    display: inline-flex;
+    justify-content: center;
+    align-items: center;
+    border-radius: 2px;
+    min-width: 120px;
+    gap: 8px;
+    padding: 0 6px;
+    
+    /* Fonts/Nav and Button Label */
+    font-family: 'Roboto';
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 600;
+    line-height: 24px;
+    letter-spacing: 2px;
+    text-transform: uppercase;
+    user-select: none;
+    cursor: pointer;
+}
+
+.DefaultButton.disabled {
+    cursor: unset;
+    pointer-events: none;
+}
+
+.SmallDefaultButton {
+    height: 24px;
+}
+
+.MediumDefaultButton {
+    height: 28px;
+}
+
+.LargeDefaultButton {
+    height: 32px;
+}
+
+.PrimaryButton:hover:not(.disabled) {
+    background: var(--Gradient-Button-Hover);
+}
+
+.PrimaryButton {
+    background: var(--Gradient-Button-Default);
+    color: var(--Button-Primary-Label);
+}
+
+.PrimaryButton.disabled {
+    background: var(--gradientButtonDisabled);
+}
+
+.SecondaryButton:hover:not(.disabled) {
+    background: var(--secondaryHighlight);
+}
+
+.SecondaryButton {
+    background: var(--quandaryBackground);
+    color: var(--primaryText);
+    font-weight: 400;
+}
+
+.SecondaryButton.disabled {
+    background: var(--secondaryBackground);
+}
+
+.TertiaryButton:hover:not(.disabled) {
+    background: var(--tertiaryHighlight);
+}
+
+.TertiaryButton {
+    background: var(--tertiaryBackground);
+    color: var(--primaryText);
+}
+
+.QuandaryButton:hover:not(.disabled) {
+    background: var(--secondaryHighlight);
+}
+
+.QuandaryButton {
+    background: var(--quandaryBackground);
+    color: var(--primaryText);
+}
+
+.StrokeButton {
+    padding: 0px 1rem;
+    min-height: 32px;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+    gap: .5rem;
+    color: var(--Button-Outline-Stroke);
+    border-radius: 0.25rem;
+    background-color: var(--primaryBackground);
+    border: 1px solid var(--Button-Outline-Stroke);
+    cursor: pointer;
+    text-transform: uppercase;
+    letter-spacing: 1px;
+    font-family: 'Roboto';
+    font-weight: 500;
+    transition: all .2s ease-in-out;
+    height: auto;
+    width: auto;
+    box-sizing: border-box;
+    -moz-box-sizing: border-box;
+    -webkit-box-sizing: border-box;
+}
+
+.StrokeButton:hover {
+    background-color: var(--Button-Outline-Stroke-Hover);
+}
+
+.AutoDefaultButton {
+    height: auto;
+    min-width: auto;
+}
+
+.TextButton {
+    background: transparent;
+    color: var(--Button-Link-Text);
+}
+
+.StrokeButtonNeutral {
+    color: var(--tertiaryHighlight);
+    border: 1px solid var(--tertiaryHighlight);
+}
+
+.StrokeButtonNeutral:hover {
+    background-color: var(--secondaryHighlight);
 }
\ No newline at end of file
diff --git a/web/src/components/button/Button.jsx b/web/src/components/button/Button.jsx
index 29779bf..3be6e90 100644
--- a/web/src/components/button/Button.jsx
+++ b/web/src/components/button/Button.jsx
@@ -1,57 +1,57 @@
-import { Component } from 'react';
-import PropTypes from "prop-types";
-import "./Button.css";
-
-export class Button extends Component {
-    static propTypes = {
-        value: PropTypes.string,
-        className: PropTypes.string,
-        action: PropTypes.func
-    }
-    
-    constructor(props) {
-        super(props);
-        this.state = {
-            contextMenu : null
-        }
-    }
-    
-    render() {
-        return (
-            <>
-                <div className={`DefaultButton ${this.props.className}`} onClick={this.props.action}>{this.props.value}</div>
-                { this.state.contextMenu && this.props.contextMenuOptions && this.props.contextMenuOptions.length > 0 && (
-                    <ContextMenu  x={this.state.contextMenu.x} y={this.state.contextMenu.y} onClose={() => this.setState({ contextMenu: null })}>
-                        <items>
-                            {this.props.contextMenuOptions.map((option, index) => (
-                                <ContextMenuItem key={index} value={option.value} action={option.action} />
-                            ))}
-                        </items>
-                    </ContextMenu>
-                )}
-            </>
-        )
-    }
-}
-
-export class DefaultButton extends Component {
-    static propTypes = {
-        type: PropTypes.string,
-        value: PropTypes.string,
-        className: PropTypes.string,
-        children: PropTypes.string,
-        size: PropTypes.string,
-        disabled: PropTypes.bool,
-        action: PropTypes.func
-    }
-
-    constructor(props) {
-        super(props);
-    }
-
-    render() {
-        return (
-            <Button className={`${this.props.type}Button ${this.props.size}DefaultButton ${!this.props.disabled? 'enabled' : 'disabled'} ${this.props.className}`} value={this.props.value ? this.props.value : this.props.children} action={this.props.action} />
-        )
-    }
+import { Component } from 'react';
+import PropTypes from "prop-types";
+import "./Button.css";
+
+export class Button extends Component {
+    static propTypes = {
+        value: PropTypes.string,
+        className: PropTypes.string,
+        action: PropTypes.func
+    }
+    
+    constructor(props) {
+        super(props);
+        this.state = {
+            contextMenu : null
+        }
+    }
+    
+    render() {
+        return (
+            <>
+                <div className={`DefaultButton ${this.props.className}`} onClick={this.props.action}>{this.props.value}</div>
+                { this.state.contextMenu && this.props.contextMenuOptions && this.props.contextMenuOptions.length > 0 && (
+                    <ContextMenu  x={this.state.contextMenu.x} y={this.state.contextMenu.y} onClose={() => this.setState({ contextMenu: null })}>
+                        <items>
+                            {this.props.contextMenuOptions.map((option, index) => (
+                                <ContextMenuItem key={index} value={option.value} action={option.action} />
+                            ))}
+                        </items>
+                    </ContextMenu>
+                )}
+            </>
+        )
+    }
+}
+
+export class DefaultButton extends Component {
+    static propTypes = {
+        type: PropTypes.string,
+        value: PropTypes.string,
+        className: PropTypes.string,
+        children: PropTypes.string,
+        size: PropTypes.string,
+        disabled: PropTypes.bool,
+        action: PropTypes.func
+    }
+
+    constructor(props) {
+        super(props);
+    }
+
+    render() {
+        return (
+            <Button className={`${this.props.type}Button ${this.props.size}DefaultButton ${!this.props.disabled? 'enabled' : 'disabled'} ${this.props.className}`} value={this.props.value ? this.props.value : this.props.children} action={this.props.action} />
+        )
+    }
 }
\ No newline at end of file
diff --git a/web/src/components/dropdown/Dropdown.css b/web/src/components/dropdown/Dropdown.css
index 50a9e82..a5da712 100644
--- a/web/src/components/dropdown/Dropdown.css
+++ b/web/src/components/dropdown/Dropdown.css
@@ -1,142 +1,142 @@
-.formDropdown {
-    border-radius: 2px;
-    border: 1px solid var(--secondaryBackground);
-    background: var(--primaryBackground);
-    user-select: none;
-    display: flex;
-    flex-direction: column;
-    cursor: pointer;
-    transition: all .4s ease;
-}
-
-.formDropdown:hover,
-.formDropdown:focus {
-    border-color: var(--General-Primary-Green);
-}
-
-.formDropdown:has( .formDropdownItems:not(.collapsed)) {
-    border-color: var(--General-Primary-Green);
-}
-
-.formDropdown .formDropdownHeaderOpenIcon svg {
-    transition: all .4s ease;
-}
-
-.formDropdown:hover .formDropdownHeaderOpenIcon svg {
-    stroke: var(--General-Primary-Green);
-}
-
-.formDropdownContainer label {
-    margin-bottom: .5rem;
-    display: block;
-}
-
-.formDropdownHeader {
-    display: flex;
-    align-content: center;
-    align-items: center;
-    padding-left: 0;
-    padding-right: 12px;
-    height: 100%;
-}
-
-.formDropdownHeaderOpenIcon {
-    margin-left: auto;
-    padding-left: 8px;
-}
-
-.formDropdownItemsContainer {
-    position: relative;
-    display: inline-flex;
-    flex-direction: column;
-}
-
-.formDropdownItems {
-    position: absolute;
-    width: fit-content;
-    background: var(--primaryBackground);
-    border-radius: 6px;
-    border: 1px solid var(--secondaryBackground);
-    z-index: 10;
-    max-height: 148px;
-    overflow-y: auto;
-    margin-top: 6px;
-    width: 100%;
-}
-
-.formDropdownItems.collapsed {
-    display: none;
-}
-
-.formDropdownItemSelector.selected {
-    background: #424242;
-}
-
-.formDropdownItemSelector:hover:not(.selected) {
-    background: #424242;
-}
-
-.formDropdown.Small {
-    height: 28px;
-    max-height: 28px;
-}
-
-.formDropdown.Small .formDropdownHeaderOpenIcon {
-    margin-bottom: 5px;
-}
-
-.formDropdown.Stretch {
-    align-self: stretch;
-    display: inline-flex;
-    align-items: flex-start;
-    flex-direction: column;
-    justify-content: center;
-}
-
-.formDropdownHeaderActiveItem {
-    padding: 10px 10px;
-    overflow: hidden;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 16px;
-    letter-spacing: 0.4px;
-}
-
-.formDropdownItemSelector {
-    padding: 10px 10px;
-    overflow: hidden;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 16px;
-    letter-spacing: 0.4px;
-}
-
-.formDropdownItemSelector.Small, .formDropdownHeaderActiveItem.Small {
-    padding: 6px 10px 6px 10px;
-    overflow: hidden;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 16px;
-    letter-spacing: 0.4px;
-}
-
-.formDropdownItem {
-    width: fit-content;
-}
-
-.formDropdownContainer {
-    width: 100%;
-}
-
-.formDropdownItems > .formDropdownItemSelector:first-child {
-    border-top-left-radius: 5px;
-    border-top-right-radius: 5px;
-} 
-
-.formDropdownItems > .formDropdownItemSelector:last-child {
-    border-bottom-left-radius: 5px;
-    border-bottom-right-radius: 5px;
-} 
+.formDropdown {
+    border-radius: 2px;
+    border: 1px solid var(--secondaryBackground);
+    background: var(--primaryBackground);
+    user-select: none;
+    display: flex;
+    flex-direction: column;
+    cursor: pointer;
+    transition: all .4s ease;
+}
+
+.formDropdown:hover,
+.formDropdown:focus {
+    border-color: var(--General-Primary-Green);
+}
+
+.formDropdown:has( .formDropdownItems:not(.collapsed)) {
+    border-color: var(--General-Primary-Green);
+}
+
+.formDropdown .formDropdownHeaderOpenIcon svg {
+    transition: all .4s ease;
+}
+
+.formDropdown:hover .formDropdownHeaderOpenIcon svg {
+    stroke: var(--General-Primary-Green);
+}
+
+.formDropdownContainer label {
+    margin-bottom: .5rem;
+    display: block;
+}
+
+.formDropdownHeader {
+    display: flex;
+    align-content: center;
+    align-items: center;
+    padding-left: 0;
+    padding-right: 12px;
+    height: 100%;
+}
+
+.formDropdownHeaderOpenIcon {
+    margin-left: auto;
+    padding-left: 8px;
+}
+
+.formDropdownItemsContainer {
+    position: relative;
+    display: inline-flex;
+    flex-direction: column;
+}
+
+.formDropdownItems {
+    position: absolute;
+    width: fit-content;
+    background: var(--primaryBackground);
+    border-radius: 6px;
+    border: 1px solid var(--secondaryBackground);
+    z-index: 10;
+    max-height: 148px;
+    overflow-y: auto;
+    margin-top: 6px;
+    width: 100%;
+}
+
+.formDropdownItems.collapsed {
+    display: none;
+}
+
+.formDropdownItemSelector.selected {
+    background: #424242;
+}
+
+.formDropdownItemSelector:hover:not(.selected) {
+    background: #424242;
+}
+
+.formDropdown.Small {
+    height: 28px;
+    max-height: 28px;
+}
+
+.formDropdown.Small .formDropdownHeaderOpenIcon {
+    margin-bottom: 5px;
+}
+
+.formDropdown.Stretch {
+    align-self: stretch;
+    display: inline-flex;
+    align-items: flex-start;
+    flex-direction: column;
+    justify-content: center;
+}
+
+.formDropdownHeaderActiveItem {
+    padding: 10px 10px;
+    overflow: hidden;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 16px;
+    letter-spacing: 0.4px;
+}
+
+.formDropdownItemSelector {
+    padding: 10px 10px;
+    overflow: hidden;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 16px;
+    letter-spacing: 0.4px;
+}
+
+.formDropdownItemSelector.Small, .formDropdownHeaderActiveItem.Small {
+    padding: 6px 10px 6px 10px;
+    overflow: hidden;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 16px;
+    letter-spacing: 0.4px;
+}
+
+.formDropdownItem {
+    width: fit-content;
+}
+
+.formDropdownContainer {
+    width: 100%;
+}
+
+.formDropdownItems > .formDropdownItemSelector:first-child {
+    border-top-left-radius: 5px;
+    border-top-right-radius: 5px;
+} 
+
+.formDropdownItems > .formDropdownItemSelector:last-child {
+    border-bottom-left-radius: 5px;
+    border-bottom-right-radius: 5px;
+} 
diff --git a/web/src/components/dropdown/Dropdown.jsx b/web/src/components/dropdown/Dropdown.jsx
index 02103cc..4051d8e 100644
--- a/web/src/components/dropdown/Dropdown.jsx
+++ b/web/src/components/dropdown/Dropdown.jsx
@@ -1,137 +1,140 @@
-import { Component, createRef, Children } from 'react';
-import PropTypes from "prop-types";
-
-import "./Dropdown.css";
-
-export class Dropdown extends Component {
-    static defaultProps = {
-        size: "Small"
-    }
-
-    static propTypes = {
-        size: PropTypes.string,
-        disabled: PropTypes.bool,
-        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element),PropTypes.element]),
-        onChange: PropTypes.func,
-        onOpen: PropTypes.func,
-        value: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        title: PropTypes.string
-    }
-    
-    constructor(props) {
-        super(props);
-
-        this.state = {
-            collapsed : true,
-            selected : null,
-            items : {},
-            
-        }
-
-        this.fromDropdownHeader = createRef();
-    }
-
-    componentDidMount() {
-        document.addEventListener('click', this.collapse.bind(this), true);
-        if (this.props.value != null) {
-            this.setState({selected: this.props.value})
-        }
-        this.generateItems()
-        
-    }
-
-    componentWillUnmount() {
-        document.removeEventListener('click', this.collapse.bind(this), true);
-    }
-
-    componentDidUpdate(preProps) {
-        if (this.props.children != preProps.children) {
-            this.generateItems()
-        } 
-        if (this.props.value != preProps.value) {
-            this.setState({ selected : this.props.value })
-        }
-    }
-
-    collapse(e) {
-        if ( this.fromDropdownHeader.current && (!this.fromDropdownHeader.current?.contains(e.target))) {
-            this.setState({ collapsed : true })
-        }
-    }
-
-    generateItems() {
-        if (this.props.children) {
-            var items = {};
-            Children.map(this.props.children, child => { 
-                if (child.type.name == DropdownItem.name) {
-                    items[child.props.value] = child
-                }
-            })
-            this.setState({ items: items })
-        }
-    }
-
-    select(value) {
-        this.setState({ selected : value, collapsed : true })
-        if (this.props.onChange) {
-            this.props.onChange(value)
-        }
-    }
-
-    onOpen() {
-        if (!this.props.disabled) {
-            this.setState({ collapsed : !this.state.collapsed })
-            if (this.props.onOpen) { this.props.onOpen() }
-        }
-    }
-    
-    render() {
-        return (
-            <div className='formDropdownContainer'>
-                {this.props.title ? <label>{this.props.title}</label> : ''}
-                <div className={`formDropdown ${this.props.size} `}>
-                    <div className="formDropdownHeader" ref={this.fromDropdownHeader} onClick={() => { this.onOpen() }}>
-                        <div className={`formDropdownHeaderActiveItem ${this.props.size} `}>
-                            {this.state.items[this.state.selected]}
-                        </div>
-                        <div className='formDropdownHeaderOpenIcon'>
-                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" viewBox="0 0 10 6" fill="none">
-                                <path d="M4.99994 4.50933L0.660348 0.169739L-6.10352e-05 0.830148L4.99994 5.83015L9.99994 0.830148L9.33953 0.169739L4.99994 4.50933Z" fill="currentColor"/>
-                            </svg>
-                        </div>
-                    </div>
-                    <div className='formDropdownItemsContainer'>
-                        <div className={`formDropdownItems ${this.state.collapsed ? 'collapsed' : ''}`}>
-                            {Object.keys(this.state.items).map((x) => { 
-                                return (
-                                    <div key={x} className={`formDropdownItemSelector ${this.props.size}`} onClick={() => this.select(x) }>
-                                        {this.state.items[x]}
-                                    </div>
-                                )
-                            })}
-                        </div>
-                    </div>
-                </div>
-            </div>
-        )
-    }
-}
-
-export class DropdownItem extends Component {
-    static propTypes = {
-        value: PropTypes.oneOfType([PropTypes.string,PropTypes.bool,PropTypes.number]).isRequired,
-        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element),PropTypes.element,PropTypes.string])
-    }
-
-    constructor(props) {
-        super(props);
-    }
-    
-    render() {
-        return (
-            <div className={`formDropdownItem`}>
-                {this.props.children}
-            </div>
-        )
-    }
-}
+import { Component, createRef, Children } from 'react';
+import PropTypes from "prop-types";
+
+import "./Dropdown.css";
+
+export class Dropdown extends Component {
+    static defaultProps = {
+        size: "Small"
+    }
+
+    static propTypes = {
+        size: PropTypes.string,
+        disabled: PropTypes.bool,
+        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element]),
+        onChange: PropTypes.func,
+        onOpen: PropTypes.func,
+        value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
+        title: PropTypes.string
+    }
+
+    constructor(props) {
+        super(props);
+
+        this.state = {
+            collapsed: true,
+            selected: null,
+            items: {},
+
+        }
+
+        this.fromDropdownHeader = createRef();
+    }
+
+    componentDidMount() {
+        document.addEventListener('click', this.collapse.bind(this), true);
+        if (this.props.value != null) {
+            this.setState({ selected: this.props.value })
+        }
+        this.generateItems()
+
+    }
+
+    componentWillUnmount() {
+        document.removeEventListener('click', this.collapse.bind(this), true);
+    }
+
+    componentDidUpdate(preProps) {
+        if (this.props.children != preProps.children) {
+            this.generateItems()
+        }
+        if (this.props.value != preProps.value) {
+            this.setState({ selected: this.props.value })
+        }
+    }
+
+    collapse(e) {
+        if (this.fromDropdownHeader.current && (!this.fromDropdownHeader.current?.contains(e.target))) {
+            this.setState({ collapsed: true })
+        }
+    }
+
+    generateItems() {
+        if (this.props.children) {
+            var items = {};
+            Children.map(this.props.children, child => {
+                if (child.type.name == DropdownItem.name) {
+                    items[child.props.value] = child
+                }
+            })
+            this.setState({ items: items })
+        }
+    }
+
+    select(value) {
+        this.setState({ selected: value, collapsed: true })
+        if (this.props.onChange) {
+            this.props.onChange(value)
+        }
+    }
+
+    onOpen() {
+        if (!this.props.disabled) {
+            this.setState({ collapsed: !this.state.collapsed })
+            if (this.props.onOpen) { this.props.onOpen() }
+        }
+    }
+
+    render() {
+        return (
+            <div className='formDropdownContainer'>
+                {this.props.title ? <label>{this.props.title}</label> : ''}
+                <div className={`formDropdown ${this.props.size} `}>
+                    <div className="formDropdownHeader" ref={this.fromDropdownHeader} onClick={() => { this.onOpen() }}>
+                        <div className={`formDropdownHeaderActiveItem ${this.props.size} `}>
+                            {this.state.items[this.state.selected]}
+                        </div>
+                        <div className='formDropdownHeaderOpenIcon'>
+                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" viewBox="0 0 10 6" fill="none">
+                                <path d="M4.99994 4.50933L0.660348 0.169739L-6.10352e-05 0.830148L4.99994 5.83015L9.99994 0.830148L9.33953 0.169739L4.99994 4.50933Z" fill="currentColor" />
+                            </svg>
+                        </div>
+                    </div>
+                    <div className='formDropdownItemsContainer'>
+                        <div className={`formDropdownItems ${this.state.collapsed ? 'collapsed' : ''}`}>
+                            {Object.keys(this.state.items).map((x) => {
+                                const isSelected = this.state.selected === x;
+                                return (
+                                    <div key={x}
+                                        className={`formDropdownItemSelector ${this.props.size}${isSelected ? ' selected' : ''}`}
+                                        onClick={() => this.select(x)}>
+                                        {this.state.items[x]}
+                                    </div>
+                                )
+                            })}
+                        </div>
+                    </div>
+                </div>
+            </div>
+        )
+    }
+}
+
+export class DropdownItem extends Component {
+    static propTypes = {
+        value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number]).isRequired,
+        children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element, PropTypes.string])
+    }
+
+    constructor(props) {
+        super(props);
+    }
+
+    render() {
+        return (
+            <div className={`formDropdownItem`}>
+                {this.props.children}
+            </div>
+        )
+    }
+}
diff --git a/web/src/components/input/Input.css b/web/src/components/input/Input.css
index 0c825cb..52c9562 100644
--- a/web/src/components/input/Input.css
+++ b/web/src/components/input/Input.css
@@ -1,140 +1,140 @@
-.DefaultInput {
-    display: block;
-    color: var(--General-Main-Text);
-    font-weight: 300;
-    background-color: var(--Forms-Input-Field-BG);
-    border: 1px solid var(--Forms-Input-Stroke);
-    padding: .5rem .75rem;
-    line-height: 1.3rem;
-    border-radius: 0.25rem;
-    font-family: 'Roboto';
-    font-size: .9rem;
-    transition: border .3s ease;
-    width: -webkit-fill-available;
-}
-
-.DefaultInput:focus, 
-.DefaultInput:hover {
-    outline: none;
-    border-color: var(--General-Primary-Green);
-}
-
-.InputContainer {
-    display: flex;
-    flex-direction: column;
-    align-items: flex-start;
-    gap: 10px;
-    width: 100%;
-    position: relative;
-    user-select: none;
-}
-
-.InputLabel {
-    color: var(--General-Main-Text);
-    font-family: "Roboto";
-    font-size: 14px;
-    font-style: normal;
-    font-weight: 600;
-    line-height: 18px;
-    letter-spacing: 0.48px;
-}
-
-.SmallInput {
-    min-height: 7px;
-    max-height: 7px;
-    padding-block: 7px;
-    padding-inline: 8px;
-    color: var(--General-Main-Text);
-    /* Fonts/Small Copy */
-    font-family: "Roboto";
-    font-size: 12px;
-    font-weight: 400;
-    line-height: 18px;
-    letter-spacing: 0.32px;
-}
-
-.MediumInput {
-    min-height: 8px;
-    max-height: 8px;
-    padding-block: 9px;
-    padding-inline: 8px;
-    /* Fonts/Main Copy */
-    font-family: "Roboto";
-    font-size: 14px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 20px; /* 142.857% */
-    letter-spacing: 0.48px;
-}
-
-.LargeInput {
-    min-height: 8px;
-    max-height: 8px;
-    padding-block: 11px;
-    padding-inline: 8px;
-    /* Fonts/Main Copy */
-    font-family: "Roboto";
-    font-size: 14px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 20px; /* 142.857% */
-    letter-spacing: 0.48px;
-}
-
-.InputSearchIconLeft {
-    position: absolute;
-    top: 0;
-    left: 0;
-    font-size: 0.8rem;
-    z-index: 10;
-    width: 32px;
-    height: 100%;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-}
-
-.ExpandIcon:hover svg path {
-    fill: var(--General-Primary-Green);
-}
-
-.DefaultInput[disabled] {
-    color: var(--secondaryText)
-}
-
-.DefaultInput.Error {
-    border: solid 1px var(--alertRed)
-}
-
-.InputSearchIconLeft svg path {
-    stroke: var(--General-Secondary-Text);
-}
-
-.InputGroupIconLeft {
-    position: relative;
-    width: 100%;
-    overflow: hidden;
-}
-
-.InputGroupIconLeft input[type="text"] {
-    padding: 0 0 0 2rem;
-    width: calc(100% - 2rem - 2px);
-    min-width: auto;
-}
-
-.InputIcon {
-    position: absolute;
-    top: 0;
-    left: 0;
-    font-size: 0.8rem;
-    z-index: 10;
-    width: 32px;
-    height: 100%;
-    display: flex;
-    align-items: center;
-    justify-content: center;
-}
-
-input.DefaultInput.InputIconShift {
-    padding-left: 1.75rem;
+.DefaultInput {
+    display: block;
+    color: var(--General-Main-Text);
+    font-weight: 300;
+    background-color: var(--Forms-Input-Field-BG);
+    border: 1px solid var(--Forms-Input-Stroke);
+    padding: .5rem .75rem;
+    line-height: 1.3rem;
+    border-radius: 0.25rem;
+    font-family: 'Roboto';
+    font-size: .9rem;
+    transition: border .3s ease;
+    width: -webkit-fill-available;
+}
+
+.DefaultInput:focus, 
+.DefaultInput:hover {
+    outline: none;
+    border-color: var(--General-Primary-Green);
+}
+
+.InputContainer {
+    display: flex;
+    flex-direction: column;
+    align-items: flex-start;
+    gap: 10px;
+    width: 100%;
+    position: relative;
+    user-select: none;
+}
+
+.InputLabel {
+    color: var(--General-Main-Text);
+    font-family: "Roboto";
+    font-size: 14px;
+    font-style: normal;
+    font-weight: 600;
+    line-height: 18px;
+    letter-spacing: 0.48px;
+}
+
+.SmallInput {
+    min-height: 7px;
+    max-height: 7px;
+    padding-block: 7px;
+    padding-inline: 8px;
+    color: var(--General-Main-Text);
+    /* Fonts/Small Copy */
+    font-family: "Roboto";
+    font-size: 12px;
+    font-weight: 400;
+    line-height: 18px;
+    letter-spacing: 0.32px;
+}
+
+.MediumInput {
+    min-height: 8px;
+    max-height: 8px;
+    padding-block: 9px;
+    padding-inline: 8px;
+    /* Fonts/Main Copy */
+    font-family: "Roboto";
+    font-size: 14px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 20px; /* 142.857% */
+    letter-spacing: 0.48px;
+}
+
+.LargeInput {
+    min-height: 8px;
+    max-height: 8px;
+    padding-block: 11px;
+    padding-inline: 8px;
+    /* Fonts/Main Copy */
+    font-family: "Roboto";
+    font-size: 14px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 20px; /* 142.857% */
+    letter-spacing: 0.48px;
+}
+
+.InputSearchIconLeft {
+    position: absolute;
+    top: 0;
+    left: 0;
+    font-size: 0.8rem;
+    z-index: 10;
+    width: 32px;
+    height: 100%;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+}
+
+.ExpandIcon:hover svg path {
+    fill: var(--General-Primary-Green);
+}
+
+.DefaultInput[disabled] {
+    color: var(--secondaryText)
+}
+
+.DefaultInput.Error {
+    border: solid 1px var(--alertRed)
+}
+
+.InputSearchIconLeft svg path {
+    stroke: var(--General-Secondary-Text);
+}
+
+.InputGroupIconLeft {
+    position: relative;
+    width: 100%;
+    overflow: hidden;
+}
+
+.InputGroupIconLeft input[type="text"] {
+    padding: 0 0 0 2rem;
+    width: calc(100% - 2rem - 2px);
+    min-width: auto;
+}
+
+.InputIcon {
+    position: absolute;
+    top: 0;
+    left: 0;
+    font-size: 0.8rem;
+    z-index: 10;
+    width: 32px;
+    height: 100%;
+    display: flex;
+    align-items: center;
+    justify-content: center;
+}
+
+input.DefaultInput.InputIconShift {
+    padding-left: 1.75rem;
 }
\ No newline at end of file
diff --git a/web/src/components/input/Input.jsx b/web/src/components/input/Input.jsx
index e39bbc7..7d8080e 100644
--- a/web/src/components/input/Input.jsx
+++ b/web/src/components/input/Input.jsx
@@ -1,94 +1,94 @@
-import { Component, createRef } from 'react';
-import PropTypes from "prop-types";
-import "./Input.css";
-
-export class Input extends Component {
-    static defaultProps = {
-        value: "",
-        type: "text"
-    }
-    static propTypes = {
-        value: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        className: PropTypes.string,
-        onSubmit: PropTypes.func,
-        onClose: PropTypes.func,
-        action: PropTypes.func,
-        onClick: PropTypes.func,
-        placeholder: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        defaultValue: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        type: PropTypes.string,
-        disabled: PropTypes.bool,
-        label: PropTypes.string,
-        size: PropTypes.string,
-        error: PropTypes.bool,
-        focus: PropTypes.bool,
-        readOnly: PropTypes.bool,
-        icon: PropTypes.string,
-        title: PropTypes.string
-    }
-    
-    constructor(props) {
-        super(props);
-        this.input = createRef();
-    }
-
-    componentDidMount() {
-        if (this.props.focus) {
-            this.input.current.focus();
-        }
-    }
-
-    handleKeyPress(event) {
-        if (event.key === 'Enter' && this.props.onSubmit) {
-            this.props.onSubmit();
-        } else if (event.key === 'Escape' && this.props.onClose) {
-            this.props.onClose();
-        }
-    }
-
-    update() {
-        
-    }
-    
-    render() {
-        return (
-            <div className={`InputContainer`}>
-                {this.props.label && <div className="InputLabel" title={this.props.title}>{this.props.label}</div>}
-                <input ref={this.input} type={this.props.type} disabled={this.props.disabled} className={`DefaultInput ${this.props.className} ${this.props.size}Input ${this.props.error ? 'Error' : ''} ${this.props.icon ? "InputIconShift" : ""}`} onChange={this.props.action} onClick={this.props.onClick} value={this.props.value} placeholder={this.props.placeholder} defaultValue={this.props.defaultValue} onKeyUp={this.handleKeyPress.bind(this)} readOnly={this.props.readOnly} />
-            </div>
-        )
-    }
-}
-
-export class DefaultInput extends Component {
-    static defaultProps = {
-        type: "Text"
-    }
-    static propTypes = {
-        type: PropTypes.string,
-        value: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        className: PropTypes.string,
-        children: PropTypes.string,
-        disabled: PropTypes.bool,
-        action: PropTypes.func,
-        onSubmit: PropTypes.func,
-        onClick: PropTypes.func,
-        onClose: PropTypes.func,
-        readOnly: PropTypes.bool,
-        placeholder: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        defaultValue: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
-        label: PropTypes.string,
-        focus: PropTypes.bool,
-        icon: PropTypes.string
-    }
-
-    constructor(props) {
-        super(props);
-    }
-
-    render() {
-        return (
-            <Input className={`${this.props.className}Input ${!this.props.disabled? 'enabled' : 'disabled'}`} label={this.props.label} disabled={this.props.disabled} placeholder={this.props.placeholder} defaultValue={this.props.defaultValue} value={this.props.value != null ? this.props.value : this.props.children} action={this.props.action} type={this.props.type.toLowerCase()} onSubmit={this.props.onSubmit} onClose={this.props.onClose} focus={this.props.focus} onClick={this.props.onClick} readOnly={this.props.readOnly} icon={this.props.icon}></Input>
-        )
-    }
+import { Component, createRef } from 'react';
+import PropTypes from "prop-types";
+import "./Input.css";
+
+export class Input extends Component {
+    static defaultProps = {
+        value: "",
+        type: "text"
+    }
+    static propTypes = {
+        value: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        className: PropTypes.string,
+        onSubmit: PropTypes.func,
+        onClose: PropTypes.func,
+        action: PropTypes.func,
+        onClick: PropTypes.func,
+        placeholder: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        defaultValue: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        type: PropTypes.string,
+        disabled: PropTypes.bool,
+        label: PropTypes.string,
+        size: PropTypes.string,
+        error: PropTypes.bool,
+        focus: PropTypes.bool,
+        readOnly: PropTypes.bool,
+        icon: PropTypes.string,
+        title: PropTypes.string
+    }
+    
+    constructor(props) {
+        super(props);
+        this.input = createRef();
+    }
+
+    componentDidMount() {
+        if (this.props.focus) {
+            this.input.current.focus();
+        }
+    }
+
+    handleKeyPress(event) {
+        if (event.key === 'Enter' && this.props.onSubmit) {
+            this.props.onSubmit();
+        } else if (event.key === 'Escape' && this.props.onClose) {
+            this.props.onClose();
+        }
+    }
+
+    update() {
+        
+    }
+    
+    render() {
+        return (
+            <div className={`InputContainer`}>
+                {this.props.label && <div className="InputLabel" title={this.props.title}>{this.props.label}</div>}
+                <input ref={this.input} type={this.props.type} disabled={this.props.disabled} className={`DefaultInput ${this.props.className} ${this.props.size}Input ${this.props.error ? 'Error' : ''} ${this.props.icon ? "InputIconShift" : ""}`} onChange={this.props.action} onClick={this.props.onClick} value={this.props.value} placeholder={this.props.placeholder} defaultValue={this.props.defaultValue} onKeyUp={this.handleKeyPress.bind(this)} readOnly={this.props.readOnly} />
+            </div>
+        )
+    }
+}
+
+export class DefaultInput extends Component {
+    static defaultProps = {
+        type: "Text"
+    }
+    static propTypes = {
+        type: PropTypes.string,
+        value: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        className: PropTypes.string,
+        children: PropTypes.string,
+        disabled: PropTypes.bool,
+        action: PropTypes.func,
+        onSubmit: PropTypes.func,
+        onClick: PropTypes.func,
+        onClose: PropTypes.func,
+        readOnly: PropTypes.bool,
+        placeholder: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        defaultValue: PropTypes.oneOfType([PropTypes.string,PropTypes.number]),
+        label: PropTypes.string,
+        focus: PropTypes.bool,
+        icon: PropTypes.string
+    }
+
+    constructor(props) {
+        super(props);
+    }
+
+    render() {
+        return (
+            <Input className={`${this.props.className}Input ${!this.props.disabled? 'enabled' : 'disabled'}`} label={this.props.label} disabled={this.props.disabled} placeholder={this.props.placeholder} defaultValue={this.props.defaultValue} value={this.props.value != null ? this.props.value : this.props.children} action={this.props.action} type={this.props.type.toLowerCase()} onSubmit={this.props.onSubmit} onClose={this.props.onClose} focus={this.props.focus} onClick={this.props.onClick} readOnly={this.props.readOnly} icon={this.props.icon}></Input>
+        )
+    }
 }
\ No newline at end of file
diff --git a/web/src/components/navbar/navbar.jsx b/web/src/components/navbar/navbar.jsx
index ef59f35..1f093d6 100644
--- a/web/src/components/navbar/navbar.jsx
+++ b/web/src/components/navbar/navbar.jsx
@@ -1,19 +1,19 @@
-import { Component } from 'react';
-export class NavBar extends Component {
-    constructor(props) {
-        super(props);
-    }
-
-    render() {
-        return (
-            <div id="nav" className="site-header sticky-top">
-                <div className="topBar" id="topbar">
-                    <a className="home" href="/">Lab 1</a>
-                    <a className="link bi-table" href="/results"> <span>Results</span></a>
-                    <a className="link bi-plus" id="conducts" href="/new"> <span>New</span></a>
-                </div>
-            </div>
-        );
-    }
-}
-
+import { Component } from 'react';
+export class NavBar extends Component {
+    constructor(props) {
+        super(props);
+    }
+
+    render() {
+        return (
+            <div id="nav" className="site-header sticky-top">
+                <div className="topBar" id="topbar">
+                    <a className="home" href="/">Lab 1</a>
+                    <a className="link bi-table" href="/results"> <span>Results</span></a>
+                    <a className="link bi-plus" id="conducts" href="/new"> <span>New</span></a>
+                </div>
+            </div>
+        );
+    }
+}
+
diff --git a/web/src/components/searchDropdown/searchDropdown.css b/web/src/components/searchDropdown/searchDropdown.css
index 79708f7..844cc99 100644
--- a/web/src/components/searchDropdown/searchDropdown.css
+++ b/web/src/components/searchDropdown/searchDropdown.css
@@ -1,133 +1,133 @@
-.searchDropdownContainer {
-    width: 100%;
-}
-
-.searchDropdownContainer label {
-    margin-bottom: .5rem;
-    display: block;
-    width: 100%;
-}
-
-.searchDropdownMain {
-    position: relative;
-}
-
-.searchDropdownMain input {
-    border-radius: 2px;
-    border: 1px solid var(--General-Primary-Border);
-    background: var(--primaryBackground);
-    user-select: none;
-    height: 100%;
-    padding: 6px 10px 6px 10px;
-    overflow: hidden;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 16px;
-    letter-spacing: 0.4px;
-    color: var(--General-Main-Text);
-}
-
-.searchDropdown {
-    position: fixed;
-    display: flex;
-    flex-direction: column;
-    user-select: none;
-    height: 28px;
-    max-height: 28px;
-    z-index: 10;
-}
-
-.searchDropdownMain input:focus, 
-.searchDropdownMain input:hover {
-    outline: none;
-    border-color: var(--General-Primary-Green);
-}
-
-.searchDropdownItemsContainer {
-    position: relative;
-}
-
-.searchDropdownItems {
-    max-height: 200px;
-    overflow-y: auto;
-}
-
-.searchDropdownItems::-webkit-scrollbar-track {
-    border-radius: 6px;
-}
-
-.searchDropdownItem {
-    padding: 6px 10px 6px 10px;
-    overflow: hidden;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 400;
-    line-height: 16px;
-    letter-spacing: 0.4px;
-    border-radius: 6px;
-    border: 1px none var(--General-Primary-Border);
-    display: flex;
-    align-content: center;
-    flex-wrap: wrap;
-    gap: 0.25rem;
-}
-
-.searchDropdownItem:hover {
-    background: #4e4e4e;
-}
-
-.SearchDropdownInputContainer {
-    display: flex;
-}
-
-.SearchDropdownHeaderIcon {
-    position: absolute;
-    right: 8px;
-    display: flex;
-    height: 100%;
-    flex-direction: column;
-    justify-content: center;
-    cursor: pointer;
-}
-
-.SearchDropdownHeaderClearIcon {
-    position: absolute;
-    right: 24px;
-    display: flex;
-    height: 100%;
-    flex-direction: column;
-    justify-content: center;
-    cursor: pointer;
-}
-
-.searchDropdownItemsActions {
-    display: flex;
-    align-items: center;
-}
-
-.searchDropdownItemCreate {
-    border-top: 1px solid var(--General-Primary-Border, #3B3C3D);
-    border-radius: 0px 0px 8px 8px;
-    padding: 12px;
-    width: 100%
-}
-
-.searchDropdownItemsRefresh {
-    display: flex;
-    width: 32px;
-    height: 32px;
-    justify-content: center;
-    align-items: center;
-    gap: 8px;
-    border-radius: 2px;
-    background: var(--quandaryBackground);
-    cursor: pointer;
-}
-
-.searchDropdownItemsAllContainer {
-    border-radius: 6px;
-    border: 1px solid var(--General-Primary-Border);
-    background: var(--primaryBackground);
-    z-index: 2;
+.searchDropdownContainer {
+    width: 100%;
+}
+
+.searchDropdownContainer label {
+    margin-bottom: .5rem;
+    display: block;
+    width: 100%;
+}
+
+.searchDropdownMain {
+    position: relative;
+}
+
+.searchDropdownMain input {
+    border-radius: 2px;
+    border: 1px solid var(--General-Primary-Border);
+    background: var(--primaryBackground);
+    user-select: none;
+    height: 100%;
+    padding: 6px 10px 6px 10px;
+    overflow: hidden;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 16px;
+    letter-spacing: 0.4px;
+    color: var(--General-Main-Text);
+}
+
+.searchDropdown {
+    position: fixed;
+    display: flex;
+    flex-direction: column;
+    user-select: none;
+    height: 28px;
+    max-height: 28px;
+    z-index: 10;
+}
+
+.searchDropdownMain input:focus, 
+.searchDropdownMain input:hover {
+    outline: none;
+    border-color: var(--General-Primary-Green);
+}
+
+.searchDropdownItemsContainer {
+    position: relative;
+}
+
+.searchDropdownItems {
+    max-height: 200px;
+    overflow-y: auto;
+}
+
+.searchDropdownItems::-webkit-scrollbar-track {
+    border-radius: 6px;
+}
+
+.searchDropdownItem {
+    padding: 6px 10px 6px 10px;
+    overflow: hidden;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 400;
+    line-height: 16px;
+    letter-spacing: 0.4px;
+    border-radius: 6px;
+    border: 1px none var(--General-Primary-Border);
+    display: flex;
+    align-content: center;
+    flex-wrap: wrap;
+    gap: 0.25rem;
+}
+
+.searchDropdownItem:hover {
+    background: #4e4e4e;
+}
+
+.SearchDropdownInputContainer {
+    display: flex;
+}
+
+.SearchDropdownHeaderIcon {
+    position: absolute;
+    right: 8px;
+    display: flex;
+    height: 100%;
+    flex-direction: column;
+    justify-content: center;
+    cursor: pointer;
+}
+
+.SearchDropdownHeaderClearIcon {
+    position: absolute;
+    right: 24px;
+    display: flex;
+    height: 100%;
+    flex-direction: column;
+    justify-content: center;
+    cursor: pointer;
+}
+
+.searchDropdownItemsActions {
+    display: flex;
+    align-items: center;
+}
+
+.searchDropdownItemCreate {
+    border-top: 1px solid var(--General-Primary-Border, #3B3C3D);
+    border-radius: 0px 0px 8px 8px;
+    padding: 12px;
+    width: 100%
+}
+
+.searchDropdownItemsRefresh {
+    display: flex;
+    width: 32px;
+    height: 32px;
+    justify-content: center;
+    align-items: center;
+    gap: 8px;
+    border-radius: 2px;
+    background: var(--quandaryBackground);
+    cursor: pointer;
+}
+
+.searchDropdownItemsAllContainer {
+    border-radius: 6px;
+    border: 1px solid var(--General-Primary-Border);
+    background: var(--primaryBackground);
+    z-index: 2;
 }
\ No newline at end of file
diff --git a/web/src/components/searchDropdown/searchDropdown.jsx b/web/src/components/searchDropdown/searchDropdown.jsx
index 382b0a7..b8ddc10 100644
--- a/web/src/components/searchDropdown/searchDropdown.jsx
+++ b/web/src/components/searchDropdown/searchDropdown.jsx
@@ -1,148 +1,148 @@
-import { Component, createRef } from 'react';
-import PropTypes from "prop-types";
-
-import "./searchDropdown.css";
-import { DefaultInput } from "../input/Input.jsx";
-
-export class SearchDropdown extends Component {
-    static defaultProps = {
-        size: "Medium"
-    }
-    static propTypes = {
-        value: PropTypes.string,
-        label: PropTypes.string,
-        items: PropTypes.array,
-        action: PropTypes.func,
-        resetValue: PropTypes.bool,
-        size: PropTypes.string,
-        icon: PropTypes.string,
-        title: PropTypes.string,
-    }
-    
-    constructor(props) {
-        super(props);
-
-        this.state = {
-            search: this.props.value,
-            expanded: false,
-            filteredItems: []
-        }
-        this.items = []
-        this.itemsDropdown = createRef();
-        this.dropdown = createRef();
-        this.dropdownContainer = createRef();
-    }
-
-    componentDidUpdate(prevProps,prevState) {
-        if (this.props.value !== prevProps.value){
-            this.setState({ search : this.props.value })
-        }
-        if (this.props.items !== prevProps.items){
-            this.loadItems()
-        }
-        if ( prevState.expanded !== this.state.expanded && this.state.expanded ) {
-            this.loadItems()
-            this.fixDropdownPosition()
-        }
-    }
-
-    componentDidMount() {
-        document.addEventListener('click', this.closeItemsDropdown.bind(this), true);
-        this.loadItems()
-    }
-
-    loadItems(){
-        this.items = []
-        for (let item of this.props.items) {
-            if (typeof item == "string") {
-                this.items.push({value: item, label: item})
-            }
-            else {
-                this.items.push(item)
-            }
-        }
-        this.setState({filteredItems: this.items})
-    }
-
-    componentWillUnmount() {
-        document.removeEventListener('click', this.closeItemsDropdown.bind(this), true);
-    }
-
-    closeItemsDropdown(e) {
-        if ( this.itemsDropdown.current && (!this.itemsDropdown.current?.contains(e.target))) {
-            this.setState({ expanded : false })
-        }
-    }
-
-    search(search) {
-        var tempFilteredItems = structuredClone(this.items)
-        tempFilteredItems = [...new Set(tempFilteredItems.filter((item) => item.label.toLowerCase().includes(search.toLowerCase())))]
-        this.setState({"search": search, filteredItems: tempFilteredItems})
-    }
-
-    fixDropdownPosition() {
-        const dropdown = this.dropdown.current;
-        const dropdownMenu = dropdown.nextElementSibling;
-
-        if (dropdownMenu) {
-            let width = dropdown.getBoundingClientRect().width;
-            dropdownMenu.style.minWidth = `${width}px`;
-
-            const overflowRight = dropdownMenu.getBoundingClientRect().right > window.innerWidth;
-            if (overflowRight) {
-                dropdownMenu.style.right = `0px`;
-            }
-
-            const dropdownBottom = dropdown.getBoundingClientRect().bottom;
-            const dropdownHeight = this.itemsDropdown.current.getBoundingClientRect().height;
-            if (dropdownBottom + dropdownHeight > window.innerHeight) {
-                this.dropdownContainer.current.style.top = `${dropdown.getBoundingClientRect().top - dropdownHeight}px`;
-            } else {
-                this.dropdownContainer.current.style.top = `${dropdownBottom}px`;
-            }
-        }
-    }
-    
-    render() {
-        return (
-            <div className="searchDropdownContainer">
-                {this.props.label &&
-                    <label title={this.props.title}>
-                        {this.props.label}
-                    </label>}
-                <div className="searchDropdownMain">
-                    <div className="SearchDropdownInputContainer" ref={this.dropdown}>
-                        <DefaultInput size={this.props.size} type="text" placeholder="Search" value={this.state.search} action={(e) => {this.setState({expanded: true}); this.search(e.target.value)}} onClick={() => this.setState({expanded: true})}/>
-                        <div className='SearchDropdownHeaderIcon' onClick={() => this.setState({expanded: !this.state.expanded})}>
-                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" viewBox="0 0 10 6" fill="none">
-                                <path d="M4.99994 4.50933L0.660348 0.169739L-6.10352e-05 0.830148L4.99994 5.83015L9.99994 0.830148L9.33953 0.169739L4.99994 4.50933Z" fill="currentColor"/>
-                            </svg>
-                        </div>
-                        {this.props.resetValue && this.state.search && (
-                            <div className="SearchDropdownHeaderClearIcon" onClick={() => {this.search("");this.props.action("")}}>
-                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
-                                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
-                                </svg>
-                            </div>
-                        )}
-                    </div>
-                    {this.state.expanded &&
-                        <div className='searchDropdown' ref={this.dropdownContainer}>
-                            <div className='searchDropdownItemsAllContainer' ref={this.itemsDropdown}>
-                                <div className="searchDropdownItemsContainer">
-                                    <div className="searchDropdownItems">
-                                        {this.state.filteredItems && this.state.filteredItems.map((item,index) => 
-                                            <div className="searchDropdownItem" key={`${index}-${item.value}`} onClick={() => {this.search(item.label);this.setState({expanded: false, icon: item?.icon});this.props.action(item.value)}}>
-                                                {item.label}
-                                            </div>
-                                        )}
-                                    </div>
-                                </div>
-                            </div>
-                        </div>
-                    }
-                </div>
-            </div>
-        )
-    }
+import { Component, createRef } from 'react';
+import PropTypes from "prop-types";
+
+import "./searchDropdown.css";
+import { DefaultInput } from "../input/Input.jsx";
+
+export class SearchDropdown extends Component {
+    static defaultProps = {
+        size: "Medium"
+    }
+    static propTypes = {
+        value: PropTypes.string,
+        label: PropTypes.string,
+        items: PropTypes.array,
+        action: PropTypes.func,
+        resetValue: PropTypes.bool,
+        size: PropTypes.string,
+        icon: PropTypes.string,
+        title: PropTypes.string,
+    }
+    
+    constructor(props) {
+        super(props);
+
+        this.state = {
+            search: this.props.value,
+            expanded: false,
+            filteredItems: []
+        }
+        this.items = []
+        this.itemsDropdown = createRef();
+        this.dropdown = createRef();
+        this.dropdownContainer = createRef();
+    }
+
+    componentDidUpdate(prevProps,prevState) {
+        if (this.props.value !== prevProps.value){
+            this.setState({ search : this.props.value })
+        }
+        if (this.props.items !== prevProps.items){
+            this.loadItems()
+        }
+        if ( prevState.expanded !== this.state.expanded && this.state.expanded ) {
+            this.loadItems()
+            this.fixDropdownPosition()
+        }
+    }
+
+    componentDidMount() {
+        document.addEventListener('click', this.closeItemsDropdown.bind(this), true);
+        this.loadItems()
+    }
+
+    loadItems(){
+        this.items = []
+        for (let item of this.props.items) {
+            if (typeof item == "string") {
+                this.items.push({value: item, label: item})
+            }
+            else {
+                this.items.push(item)
+            }
+        }
+        this.setState({filteredItems: this.items})
+    }
+
+    componentWillUnmount() {
+        document.removeEventListener('click', this.closeItemsDropdown.bind(this), true);
+    }
+
+    closeItemsDropdown(e) {
+        if ( this.itemsDropdown.current && (!this.itemsDropdown.current?.contains(e.target))) {
+            this.setState({ expanded : false })
+        }
+    }
+
+    search(search) {
+        var tempFilteredItems = structuredClone(this.items)
+        tempFilteredItems = [...new Set(tempFilteredItems.filter((item) => item.label.toLowerCase().includes(search.toLowerCase())))]
+        this.setState({"search": search, filteredItems: tempFilteredItems})
+    }
+
+    fixDropdownPosition() {
+        const dropdown = this.dropdown.current;
+        const dropdownMenu = dropdown.nextElementSibling;
+
+        if (dropdownMenu) {
+            let width = dropdown.getBoundingClientRect().width;
+            dropdownMenu.style.minWidth = `${width}px`;
+
+            const overflowRight = dropdownMenu.getBoundingClientRect().right > window.innerWidth;
+            if (overflowRight) {
+                dropdownMenu.style.right = `0px`;
+            }
+
+            const dropdownBottom = dropdown.getBoundingClientRect().bottom;
+            const dropdownHeight = this.itemsDropdown.current.getBoundingClientRect().height;
+            if (dropdownBottom + dropdownHeight > window.innerHeight) {
+                this.dropdownContainer.current.style.top = `${dropdown.getBoundingClientRect().top - dropdownHeight}px`;
+            } else {
+                this.dropdownContainer.current.style.top = `${dropdownBottom}px`;
+            }
+        }
+    }
+    
+    render() {
+        return (
+            <div className="searchDropdownContainer">
+                {this.props.label &&
+                    <label title={this.props.title}>
+                        {this.props.label}
+                    </label>}
+                <div className="searchDropdownMain">
+                    <div className="SearchDropdownInputContainer" ref={this.dropdown}>
+                        <DefaultInput size={this.props.size} type="text" placeholder="Search" value={this.state.search} action={(e) => {this.setState({expanded: true}); this.search(e.target.value)}} onClick={() => this.setState({expanded: true})}/>
+                        <div className='SearchDropdownHeaderIcon' onClick={() => this.setState({expanded: !this.state.expanded})}>
+                            <svg xmlns="http://www.w3.org/2000/svg" width="10" height="6" viewBox="0 0 10 6" fill="none">
+                                <path d="M4.99994 4.50933L0.660348 0.169739L-6.10352e-05 0.830148L4.99994 5.83015L9.99994 0.830148L9.33953 0.169739L4.99994 4.50933Z" fill="currentColor"/>
+                            </svg>
+                        </div>
+                        {this.props.resetValue && this.state.search && (
+                            <div className="SearchDropdownHeaderClearIcon" onClick={() => {this.search("");this.props.action("")}}>
+                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
+                                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
+                                </svg>
+                            </div>
+                        )}
+                    </div>
+                    {this.state.expanded &&
+                        <div className='searchDropdown' ref={this.dropdownContainer}>
+                            <div className='searchDropdownItemsAllContainer' ref={this.itemsDropdown}>
+                                <div className="searchDropdownItemsContainer">
+                                    <div className="searchDropdownItems">
+                                        {this.state.filteredItems && this.state.filteredItems.map((item,index) => 
+                                            <div className="searchDropdownItem" key={`${index}-${item.value}`} onClick={() => {this.search(item.label);this.setState({expanded: false, icon: item?.icon});this.props.action(item.value)}}>
+                                                {item.label}
+                                            </div>
+                                        )}
+                                    </div>
+                                </div>
+                            </div>
+                        </div>
+                    }
+                </div>
+            </div>
+        )
+    }
 }
\ No newline at end of file
diff --git a/web/src/main.jsx b/web/src/main.jsx
index b292cc1..600733f 100644
--- a/web/src/main.jsx
+++ b/web/src/main.jsx
@@ -1,6 +1,6 @@
-import { createRoot } from 'react-dom/client'
-import App from './App.jsx'
-
-createRoot(document.getElementById('root')).render(
-    <App />
-)
+import { createRoot } from 'react-dom/client'
+import App from './App.jsx'
+
+createRoot(document.getElementById('root')).render(
+    <App />
+)
diff --git a/web/src/pages/main.jsx b/web/src/pages/main.jsx
index e4c2274..bedb5e9 100644
--- a/web/src/pages/main.jsx
+++ b/web/src/pages/main.jsx
@@ -1,23 +1,23 @@
-import { Component } from 'react';
-import '../style.css'
-import { NavBar } from '../components/navbar/navbar.jsx';
-
-class MainPage extends Component {
-    constructor(props) {
-        super(props);
-    }
-
-   
-    render() {
-        return (
-            <div className="MainPageContainer">
-                <NavBar />
-                <div className="mainContent">
-                    Welcome to simple request system 1.0
-                </div>
-            </div>
-        );
-    }
-}
-
+import { Component } from 'react';
+import '../style.css'
+import { NavBar } from '../components/navbar/navbar.jsx';
+
+class MainPage extends Component {
+    constructor(props) {
+        super(props);
+    }
+
+   
+    render() {
+        return (
+            <div className="MainPageContainer">
+                <NavBar />
+                <div className="mainContent">
+                    Welcome to simple request system 1.0
+                </div>
+            </div>
+        );
+    }
+}
+
 export default MainPage;
\ No newline at end of file
diff --git a/web/src/pages/new.jsx b/web/src/pages/new.jsx
index e63c477..498a7c5 100644
--- a/web/src/pages/new.jsx
+++ b/web/src/pages/new.jsx
@@ -1,72 +1,125 @@
-import { Component } from 'react';
-import { NavBar } from '../components/navbar/navbar.jsx';
-import { Dropdown, DropdownItem } from '../components/dropdown/Dropdown.jsx';
-import { Button } from 'react-bootstrap';
-import { BACKEND_URL } from '../Global.jsx';
-
-class NewItemPage extends Component {
-    constructor(props) {
-        super(props);
-        this.state = {
-            type: "Laptop",
-            availableTypes: ["Laptop", "Desktop", "Server", "Mobile Phone"],
-        };
-        this.name = "";
-    }
-
-    async newResult() {
-        await fetch(`${BACKEND_URL}api/1.0/new`, {
-            method: 'POST',
-            headers: {
-                'Content-Type': 'application/json'
-            },
-            body: JSON.stringify({
-                name: document.getElementById("name").value,
-                type: this.state.type
-            })
-        }
-        )
-    }
-
-    render() {
-        return (
-            <div className="MainPageContainer">
-            <NavBar />
-            <div className="mainContent">
-                <div className="formContainer">
-                <div className="formItem">
-                    <input
-                    type="text"
-                    className="form-control textbox"
-                    id="name"
-                    placeholder="Full Name"
-                    value={this.name}
-                    />
-                    <label className="formLabel">Your Name</label>
-                </div>
-                <div className="formItem">
-                    <Dropdown
-                        value={this.state.type}
-                        onChange={(type) => this.setState({ type })}
-                        title="Type"
-                    >
-                    {this.state.availableTypes.map((type) => (
-                        <DropdownItem value={type} key={type}>
-                            {type}
-                        </DropdownItem>
-                    ))}
-                    </Dropdown>
-                </div>
-                </div>
-                <div className="submitButton">
-                <Button type="button" className="newButton" onClick={() => this.newResult()}>
-                    New
-                </Button>
-                </div>
-            </div>
-            </div>
-        );
-    }
-}
-
+import { Component } from 'react';
+import { NavBar } from '../components/navbar/navbar.jsx';
+import { Dropdown, DropdownItem } from '../components/dropdown/Dropdown.jsx';
+import { Button } from 'react-bootstrap';
+import { BACKEND_URL } from '../Global.jsx';
+
+class NewItemPage extends Component {
+    constructor(props) {
+        super(props);
+        this.state = {
+            name: "",
+            type: "Laptop",
+            availableTypes: ["Laptop", "Desktop", "Server", "Mobile Phone"],
+            message: "",
+            error: ""
+        };
+
+    }
+    validateEmail(email) {
+        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
+        return re.test(email);
+    }
+    async newResult() {
+        const { name, email, type } = this.state;
+        if (!name.trim()) {
+            return this.setState({ error: "Name is required.", message: "" });
+        }
+        if (!type.trim()) {
+            return this.setState({ error: "Type is required.", message: "" });
+        }
+        if (!email.trim()) {
+            return this.setState({ error: "Email is required.", message: "" });
+        }
+        if (!this.validateEmail(email)) {
+            return this.setState({ error: "Please enter a valid email address.", message: "" });
+        }
+        try {
+            const response = await fetch(`${BACKEND_URL}api/1.0/new`, {
+                method: 'POST',
+                headers: { 'Content-Type': 'application/json' },
+                body: JSON.stringify({ name, email, type })
+            });
+            const body = await response.json();
+            if (response.ok) {
+                this.setState({
+                    name: "",
+                    email: "",
+                    type: this.state.availableTypes[0],
+                    message: body.msg || "New record added!",
+                    error: ""
+                });
+            } else {
+                this.setState({
+                    error: body.detail || response.statusText || "The content you tried to save is not allowed",
+                    message: ""
+                });
+            }
+        } catch (err) {
+            this.setState({
+                error: err.message || "An unexpected error occurred",
+                message: ""
+            });
+        }
+    }
+
+    render() {
+        return (
+            <div className="MainPageContainer">
+                <NavBar />
+                <div className="mainContent">
+                    <div className="formContainer">
+                        {this.state.message && (
+                            <div className="alert alert-success">{this.state.message}</div>
+                        )}
+                        {this.state.error && (
+                            <div className="alert alert-danger">{this.state.error}</div>
+                        )}
+                        <div className="formItem">
+                            <input
+                                type="text"
+                                className="form-control textbox"
+                                id="name"
+                                placeholder="Full Name"
+                                value={this.state.name}
+                                onChange={e => this.setState({ name: e.target.value })}
+                            />
+                            <label className="formLabel">Your Name</label>
+                        </div>
+                        <div className="formItem">
+                            <input
+                                type="email"
+                                className="form-control textbox"
+                                id="email"
+                                placeholder="Email Address"
+                                value={this.state.email}
+                                onChange={e => this.setState({ email: e.target.value })}
+                            />
+                            <label className="formLabel">Email Address</label>
+                        </div>
+                        <div className="formItem">
+                            <Dropdown
+                                value={this.state.type}
+                                onChange={(type) => this.setState({ type })}
+                                title="Type"
+                            >
+                                {this.state.availableTypes.map((type) => (
+                                    <DropdownItem value={type} key={type}>
+                                        {type}
+                                    </DropdownItem>
+                                ))}
+                            </Dropdown>
+                        </div>
+                        <div className="formItem">
+                            <Button type="button" className="newButton" onClick={() => this.newResult()}>
+                                New
+                            </Button>
+                        </div>
+                    </div>
+                </div>
+            </div>
+        );
+    }
+}
+
 export default NewItemPage;
\ No newline at end of file
diff --git a/web/src/pages/results.jsx b/web/src/pages/results.jsx
index ee6df8f..9771f53 100644
--- a/web/src/pages/results.jsx
+++ b/web/src/pages/results.jsx
@@ -1,68 +1,142 @@
-import React, { Component } from 'react';
-import { NavBar } from '../components/navbar/navbar.jsx';
-import { SearchDropdown } from '../components/searchDropdown/searchDropdown.jsx';
-import { Button } from 'react-bootstrap';
-import { BACKEND_URL } from '../Global.jsx';
-
-class ResultsPage extends Component {
-    constructor(props) {
-        super(props);
-        this.state = {
-        };
-        this.resultsTable = React.createRef();
-    }
-
-    componentDidMount() {
-        this.getResults();
-    }
-
-    async getResults() {
-        await fetch(`${BACKEND_URL}api/1.0/results`, {
-            method: 'GET',
-            headers: {
-                'Content-Type': 'application/json'
-            }
-        })
-        .then(response => response.json())
-        .then(data => {
-            this.generateTable(data["results"]);
-        })
-    }
-
-    generateTable(tableData) {
-        this.resultsTable.current.innerHTML = "";
-        tableData.forEach((result, index) => {
-            const row = document.createElement("tr");
-            row.innerHTML = `
-                <td>${result["_id"]}</td>
-                <td>${result["name"]}</td>
-                <td>${result["mainType"]}</td>
-            `;
-            this.resultsTable.current.appendChild(row);
-        });
-        this.resultsTable.current.scrollIntoView({ behavior: "smooth" });
-    }
-
-    render() {
-        return (
-            <div className="MainPageContainer">
-                <NavBar />
-                <div className="mainContent">
-                    <table className="resultsTable">
-                        <thead>
-                            <tr>
-                                <th>ID</th>
-                                <th>Name</th>
-                                <th>Type</th>
-                            </tr>
-                        </thead>
-                        <tbody ref={this.resultsTable}>
-                        </tbody>
-                    </table>
-                </div>
-            </div>
-        );
-    }
-}
-
+import React, { Component } from 'react';
+import { NavBar } from '../components/navbar/navbar.jsx';
+import { SearchDropdown } from '../components/searchDropdown/searchDropdown.jsx';
+import { Button } from 'react-bootstrap';
+import { BACKEND_URL } from '../Global.jsx';
+
+class ResultsPage extends Component {
+    constructor(props) {
+        super(props);
+        this.state = {
+            searchTerm: "",
+            resultsData: []
+        };
+        this.resultsTable = React.createRef();
+    }
+
+    componentDidMount() {
+        this.getResults();
+    }
+
+    async getResults() {
+        this.setState({ loading: true, error: null });
+        try {
+            const q = this.state.searchTerm
+                ? `?search=${encodeURIComponent(this.state.searchTerm)}`
+                : "";
+
+            const response = await fetch(`${BACKEND_URL}api/1.0/results${q}`);
+            const data = await response.json();
+            this.setState({
+                resultsData: data.results,
+                loading: false
+            });
+            this.generateTable(data.results);
+        } catch (error) {
+            this.setState({
+                loading: false,
+                error: "Failed to load results. Please try again."
+            });
+        }
+    }
+    exportToCSV = () => {
+        const { resultsData } = this.state;
+
+        if (resultsData.length === 0) {
+            alert("No data to export");
+            return;
+        }
+        const headers = Object.keys(resultsData[0]).join(",");
+        const rows = resultsData.map(item =>
+            Object.values(item).map(field =>
+                `"${field?.toString().replace(/"/g, '""')}"`
+            ).join(",")
+        ).join("\n");
+        const csvContent = `${headers}\n${rows}`;
+        const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
+        const url = URL.createObjectURL(blob);
+        const link = document.createElement("a");
+        link.href = url;
+
+        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
+        link.setAttribute("download", `results-${timestamp}.csv`);
+        document.body.appendChild(link);
+        link.click();
+        document.body.removeChild(link);
+    };
+    generateTable(tableData) {
+        this.resultsTable.current.innerHTML = "";
+        tableData.forEach((result, index) => {
+            const row = document.createElement("tr");
+            const maskedEmail = result.email ?
+                `${result.email.substring(0, 2)}${'*'.repeat(Math.max(0, result.email.indexOf
+                    ('@') - 2))}${result.email.substring(result.email.indexOf('@'))}` :
+                'N/A';
+            row.innerHTML = `
+                <td>${result["_id"]}</td>
+                <td>${result["name"]}</td>
+                <td>${maskedEmail}</td>
+                <td>${result["mainType"]}</td>
+            `;
+            this.resultsTable.current.appendChild(row);
+        });
+        this.resultsTable.current.scrollIntoView({ behavior: "smooth" });
+    }
+
+    render() {
+        return (
+            <div className="MainPageContainer">
+                <NavBar />
+                <div className="mainContent">
+                    {this.state.loading && (
+                        <div className="spinner-border text-primary" style={{ width: '3rem', height: '3rem' }}>
+                            <span className="visually-hidden">Loading...</span>
+                        </div>
+                    )}
+                    {this.state.error && (
+                        <div className="alert alert-danger alert-dismissible fade show">
+                            {this.state.error}
+                            <button type="button" className="btn-close"
+                                onClick={() => this.setState({ error: null })} />
+                        </div>
+                    )}
+                    <div className="formItem" style={{ marginBottom: '1rem' }}>
+                        <input
+                            type="text"
+                            className="form-control textbox"
+                            placeholder="Search by name"
+                            value={this.state.searchTerm}
+                            onChange={e => this.setState({ searchTerm: e.target.value })}
+                        />
+                        <Button
+                            variant="primary"
+                            onClick={() => this.getResults()}
+                            style={{ marginLeft: '0.5rem' }}
+                        >
+                            Search
+                        </Button>
+                        <Button variant="success"
+                            onClick={this.exportToCSV}
+                            disabled={this.state.loading || this.state.resultsData.length === 0}>
+                            Download CSV
+                        </Button>
+                    </div>
+                    <table className="resultsTable">
+                        <thead>
+                            <tr>
+                                <th>ID</th>
+                                <th>Name</th>
+                                <th>Email</th>
+                                <th>Type</th>
+                            </tr>
+                        </thead>
+                        <tbody ref={this.resultsTable}>
+                        </tbody>
+                    </table>
+                </div>
+            </div>
+        );
+    }
+}
+
 export default ResultsPage;
\ No newline at end of file
diff --git a/web/src/style.css b/web/src/style.css
index 26cd1d6..c10563e 100644
--- a/web/src/style.css
+++ b/web/src/style.css
@@ -1,2336 +1,2336 @@
-:root {
-    /* Main */
-    --menuBackgroundColor: #181818;
-    --mainBackgroundColor: #3f3f3f;
-    --textColor: #cccccc;
-    --textColorHover: #f1f1f1;
-    --textDisabledColor: #615f5f;
-    --hoverColor: #4e4e4e;
-    --hoverTextColor: #fff;
-
-    /* Scrollbar */
-    --scrollbarColor: #8e8e8e;
-    --scrollbarBackgroundColor: #222222;
-    --scrollbarBorderColor: #f1f1f1;
-
-    /* Panel */
-    --panelBackgroundColor: #333333;
-    --panel2BackgroundColor: #444444;
-    --panelBorderColor: #000000;
-    --panelShadowColor1: rgba(0, 0, 0, 0.12);
-    --panelShadowColor2: rgba(0, 0, 0, 0.24);
-    --panelComponentBackground: #111111;
-    --panelComponentBackground-Focus: #020202;
-    --panelComponentBorder: #2e6da4;
-    --panelComponentBorder-Focus: #167bff;
-
-    /* Objects Panel */
-    --objPanelHeaderBackground: #181818;
-    --objPanelFooterBackground: #444444;
-    --objPanelBorderColor: #6c6c6c;
-    --objPanelTableRowOdd: #2a2a2a;
-    --objPanelTableRowEven: #3f3f3f;
-
-    /* Code Editor Box */
-    --codeEditorNumberPanel : #1e1e1e;
-    --codeEditorTextArea: #1e1e1e;
-    --codeEditorActiveLineNumber: #c6c6c6;
-    --codeEditorMiniMap: transparent;
-    --mtk1: #d4d4d4;
-    --mtk6: #b5cea8;
-    --mtk7: #608b4e;
-    --mtk8: #569cd6;
-    --mtk9: #dcdcdc;
-
-    /* Flowchart */
-    --flowchartBackground: #525252;
-    --flowchartBackgroundLines: #ffffff0c;
-    --flowchartSidebarBackground: #333333;
-    --flowchartSidebarLinkText: #eeeeee;
-    --flowchartSidebarText: #eeeeee;
-    --flowchartSidebarBorderColor: #eeeeee;
-    --flowchartTopBarBackground: #666;
-    --flowchartTopBarBorder: #666;
-    --contextMenuSeparator: #222;
-    --contextMenuHover: #666;
-
-    /* Component */
-    --componentBorderColor: #000000;
-    --componentBorderColorSelect: #167bff;
-    --componentBackground1: #111111;
-    --componentBackground2: #1f1f1f;
-    --componentBackgroundSelect: #030303;
-    --componentDisabledColor: #222222;
-
-    /* Alerts */
-    --errorBackgroundColor: #800303;
-    --errorColor: #adadad;
-    --warningBackgroundColor: #c57600;
-    --warningColor: #4e4e4e;
-    --alertBackgroundColor: #009b22;
-    --alertColor: #000000;
-    --infoBackgroundColor: #fff;
-    --infoColor: #000000;
-
-    /* Conducts */
-    --nodeEnableColor: #181818;
-    --nodeDisabledColor: gray;
-    --nodeErrorColor: red;
-    --nodeWarningColor: #e09b11;
-    --nodeRunningColor: green;
-    --nodeBorderColor: #595959;
-    --nodeUnknownColor: black;
-    --linkColor: green;
-    --linkTrueColor: rgb(34, 207, 34);
-    --linkFalseColor: rgb(251, 50, 50);
-    --linkRCColor: #FBB121;
-    --linkLogicColor: #D04D8A;
-    --linkAllColor: #3DBEFF;
-    --nodeTextColor: #fff;
-
-    /* Tables */
-    --tableRowOdd: #3f3f3f;
-    --tableRowEven: #484848;
-    --tableBorderColor: #000;
-
-    /* Buttons */
-    --buttonTextColor: #ccc;
-    --successButton: #181818;
-    --dangerButton: #181818;
-    --primaryButton: #181818;
-    --warningButton: #181818;
-    --secondaryButton: #181818;
-
-    --primaryBackground: #222426;
-    --primaryBorder: #3B3C3D;
-    --secondaryBackground: #3B3C3D;
-    --secondaryBorder: #5B5C5E;
-    --tertiaryBackground: #5B5C5E;
-    --tertiaryBorder: #A5A9AC;
-}
-
-html {
-    overflow: hidden;
-}
-
-*::-webkit-scrollbar {
-    width: 10px;
-}
-
-*::-webkit-scrollbar-track {
-    background-color: var(--scrollbarBackgroundColor);
-}
-
-*::-webkit-scrollbar-thumb {
-    background: var(--scrollbarColor);
-}
-
-textarea {
-    resize: vertical;
-    overflow: auto;
-    position: relative;
-}
-
-textarea::-webkit-resizer {
-    border-width: 8px;
-    border-style: solid;
-    border-color: transparent var(--scrollbarColor) var(--scrollbarColor) transparent;
-    background-color: var(--componentBackground1);
-}
-
-a {
-    color: var(--textColorHover);
-    text-decoration: none;
-    cursor: pointer;
-}
-
-a:hover {
-    color: var(--textColor);
-    text-decoration: none;
-}
-
-body {
-    background-color: var(--mainBackgroundColor);
-    color: var(--textColor);
-    font-family: sans-serif;
-}
-
-p {
-    color: var(--textColor);
-}
-
-.panel {
-    overflow-y: auto;
-    background-color: var(--panelBackgroundColor);
-    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
-    color: var(--textColor);
-    padding: 5px;
-    border-style: solid;
-    border-color: var(--panelBorderColor);
-    border-width: 1px;
-    border-radius: 5px;
-}
-
-.modal-content.panel {
-    padding: 0;
-}
-
-.modal-header {
-    border-bottom: 1px solid #555;
-}
-
-.modal-header .modal-title {
-    text-transform: capitalize;
-}
-
-.modal-header button.close.button {
-    background: transparent;
-    border: 0;
-    font-size: 30px;
-    line-height: 20px;
-}
-
-.modal-footer {
-    border-top: 1px solid #555;
-}
-
-.content {
-    overflow-y: auto;
-}
-
-.panelHeader {
-    font-size: 15px;
-    text-align: center;
-    width: 100%;
-}
-
-.chartContainer {
-    height: calc(100% - 23px);
-}
-
-/* .chart {
-    width: unset!important;
-    height: unset!important;
-} */
-
-.panelTextbox {
-    background-color: var(--panelComponentBackground);
-    color: var(--textColor);
-    border: none;
-}
-
-.panelTextbox:focus {
-    background-color: var(--panelComponentBackground);
-    color: var(--textColor);
-    border: none;
-}
-
-.form-control:focus {
-    box-shadow: none;
-}
-
-.dictTable {
-    width: 100%;
-    border-style: solid;
-    border-color: var(--panelComponentBackground);
-}
-
-.pluginPanel {
-    min-height: 250px;
-    min-width: 250px;
-}
-
-/* dataTable */
-div.dts {
-    height: calc(100% - 100px);
-}
-
-div.dts div.dataTables_scrollBody {
-    background: unset;
-    background-color: var(--panelBackgroundColor);
-    border-radius: 0 0 5px 5px;
-    border: 1px solid var(--panelBorderColor);
-    border-top: 0;
-}
-
-.dataTables_scrollHead div table {
-    border: 1px solid var(--panelBorderColor);
-}
-
-.theme-table .sorting {
-    font-size: 16px;
-}
-
-.theme-table td, .theme-table th {
-    padding: 10px;
-}
-
-table.dataTable.theme-table {
-    background-color: var(--panelBackgroundColor);
-    color: var(--textColor);
-    font-size: 16px;    
-    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
-    margin-top: 1rem !important;
-}
-
-table.display.theme-table.mt-3.dataTable.no-footer.fixedHeader-floating {
-    position: inherit !important;
-    table-layout: unset !important;
-    top: 51px !important;
-    left: auto !important;
-    margin: 0 !important;
-}
-
-.dataTables_scroll {
-    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
-    margin-top: 1rem !important;
-    border-radius: 5px;
-}
-
-#sourceTable {
-    margin-top: 0 !important;
-}
-
-.dataTables_scroll table.dataTable.theme-table {
-    box-shadow: none;
-    margin-top: 0 !important;
-    border-radius: 5px 5px 0 0;
-    min-width: 100%;
-}
-
-.dataTables_scrollHeadInner {
-    padding-right: 0 !important;
-    width: 100% !important;
-}
-
-.modalEditor div.dataTables_wrapper div.dataTables_info {
-    padding-top: 0;
-    font-size: .9rem;
-}
-
-.modalEditor div.dts {
-    height: calc(100% - 75px);
-    padding-bottom: 10px;
-}
-
-.modalEditor .dataTables_scrollBody table.dataTable.theme-table {
-    border: 0;
-    border-radius: 0;
-}
-
-div#saveObjectContainer button.btn.btn-primary.button {
-    margin-top: 1rem !important;
-}
-
-.dataTables_scrollBody table.dataTable.theme-table {
-    margin-top: 0 !important;
-}
-
-table.dataTable>thead .sorting:before, table.dataTable>thead .sorting:after, table.dataTable>thead .sorting_asc:before, table.dataTable>thead .sorting_asc:after, table.dataTable>thead .sorting_desc:before, table.dataTable>thead .sorting_desc:after, table.dataTable>thead .sorting_asc_disabled:before, table.dataTable>thead .sorting_asc_disabled:after, table.dataTable>thead .sorting_desc_disabled:before, table.dataTable>thead .sorting_desc_disabled:after {
-    bottom: 0.75em !important;
-}
-
-.theme-tableRowOdd {
-    background-color: var(--tableRowOdd);
-}
-
-.theme-tableRowEven {
-    background-color: var(--tableRowEven);
-}
-
-.fullscreen .theme-panelBody td:first-child {
-    width: 150px;
-}
-
-.theme-panelBody td:first-child {
-    max-width: 40%;
-    width: 180px;
-    word-break: break-word;
-}
-
-.theme-panelBody td:first-child label.theme-panelLabel {
-    white-space: break-spaces;
-    margin-right: 10px;
-}
-
-.theme-panelBody td {
-    padding-bottom: 5px;
-}
-
-.form-switch label.form-check-label.theme-panelLabel {
-    padding-top: 4px;
-    margin-left: 2px;
-    text-transform: capitalize;
-    word-break: break-word;
-}
-
-tbody#objectRevisionsTableBody td.fixedCell {
-    max-width: 100px;
-    overflow: hidden;
-    text-overflow: ellipsis;
-    white-space: nowrap;
-}
-
-table thead td {
-    font-size: .95rem;
-}
-
-table.table {
-    color: var(--textColor);
-    border-color: var(--objPanelBorderColor);
-}
-
-table tbody tr td .fixedCell {
-    max-width: 14vw;
-    overflow: hidden;
-    text-overflow: ellipsis;
-}
-
-@media only screen and (max-width: 1920px) {
-    table tbody tr td .fixedCell {
-        max-width: 12vw;
-    }
-    .fixedCell.secretsToken {
-        max-width: 20vw;
-    }
-}
-
-@media only screen and (max-width: 1537px) {
-    table tbody tr td .fixedCell {
-        max-width: 8vw;
-    }
-    .fixedCell.secretsToken {
-        max-width: 15vw;
-    }
-}
-
-table tbody tr td small {
-    width: 150px;
-    font-size: 12px;
-    display: block;
-    line-height: 16px;
-    margin-top: 5px;
-}
-
-/* visjs */
-.vis-network:focus {
-    outline: none;
-}
-
-.visjstimeline {
-    height: calc(100% - 22px);  
-}
-
-.vis-time-axis .vis-text {
-    color: var(--textColor);
-}
-
-/* bootstrap extras */
-
-.h-search {
-    height: 46px;
-}
-
-.h-10 {
-    height: 10%!important;
-}
-
-.h-20 {
-    height: 20%!important;
-}
-
-
-.h-30 {
-    height: 30%!important;
-}
-
-.h-40 {
-    height: 40%!important;
-}
-
-.h-60 {
-    height: 60%!important;
-}
-
-.h-60-search {
-    height: calc(60% - 70px);
-}
-
-.h-100-menu {
-    height: calc(100% - 40px);
-}
-
-.noHover:hover {
-    text-decoration: none;
-}
-
-.hide {
-    display: none!important;
-}
-
-.unselectable {
-    -webkit-touch-callout: none;
-    -webkit-user-select: none;
-    -khtml-user-select: none;
-    -moz-user-select: none;
-    -ms-user-select: none;
-    user-select: none;
-}
-
-.listcontainer {
-    background-color: var(--componentBackground1); 
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--componentBorderColor);
-}
-
-.listitem {
-    background-color: var(--componentBackground1); 
-    color: var(--textColor);
-    border-style: none;
-}
-
-.form-control:disabled, .form-control[readonly] {
-    background-color: var(--componentBackground2) !important;
-    opacity: 1;
-    color: var(--textDisabledColor);
-}
-
-.divInputBox {
-    width: 100%;
-    display: block !important;
-    background-color: var(--componentBackground2) !important;
-    color: var(--textDisabledColor) !important;
-}
-
-.textbox {
-    background-color: var(--componentBackground1);
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--componentBorderColor);
-    display: inline;
-    padding: 0.475rem 0.75rem 0.275rem;
-}
-
-.textboxError {
-    border-width: 1px;
-    border-color: var(--errorBackgroundColor);
-}
-
-.textbox:disabled {
-    background-color: var(--panelComponentBackground); 
-    color: var(--textDisabledColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--panelComponentBorder);
-}
-
-.textbox:focus {
-    background-color: var(--componentBackgroundSelect);
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--componentBorderColorSelect);
-}
-
-.textbox:hover {
-    background-color: var(--componentBackgroundSelect);
-}
-
-.textarea {
-    background-color: var(--panelComponentBackground); 
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--panelComponentBorder);
-    display:inline;
-    height: 150px !important;
-}
-
-.textarea:disabled {
-    background-color: var(--panelComponentBackground); 
-    color: var(--textDisabledColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--panelComponentBorder);
-}
-
-.textarea:focus {
-    background-color: var(--panelComponentBackground-Focus); 
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--panelComponentBorder);
-}
-
-.textarea:hover {
-    background-color: var(--panelComponentBackground-Focus); 
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    border-color: var(--panelComponentBorder);
-}
-
-.button {
-    background-color: var(--componentBackground2);
-    border-color: var(--componentBorderColor);
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-    display: inline;
-}
-
-.btn-primary, .btn-primary:focus, .btn-primary:active {
-    color: var(--buttonTextColor);
-    background-color: var(--primaryButton);
-    border-color: var(--primaryButton);
-}
-
-.btn-secondary, .btn-secondary:focus, .btn-secondary:active {
-    color: var(--buttonTextColor);
-    background-color: var(--secondaryButton);
-    border-color: var(--secondaryButton);
-}
-
-.btn-success, .btn-success:focus, .btn-success:active {
-    color: var(--buttonTextColor);
-    background-color: var(--successButton);
-    border-color: var(--successButton);
-}
-
-.btn-danger, .btn-danger:focus, .btn-danger:active {
-    color: var(--buttonTextColor);
-    background-color: var(--dangerButton);
-    border-color: var(--dangerButton);
-}
-
-.btn-warning, .btn-warning:focus, .btn-warning:active {
-    color: var(--buttonTextColor);
-    background-color: var(--warningButton);
-    border-color: var(--warningButton);
-}
-
-.btn-primary:hover, .btn-primary:focus:hover, .btn-primary:active:hover {
-    color: #fff;
-    background-color: #0b5ed7;
-    border-color: #0a58ca;
-}
-
-.btn-secondary:hover, .btn-secondary:focus:hover, .btn-secondary:active:hover {
-    color: #fff;
-    background-color: #5c636a;
-    border-color: #565e64;
-}
-
-.btn-success:hover, .btn-success:focus:hover, .btn-success:active:hover {
-    color: #fff;
-    background-color: #157347;
-    border-color: #146c43;
-}
-
-.btn-danger:hover, .btn-danger:focus:hover, .btn-danger:active:hover {
-    color: #fff;
-    background-color: #bb2d3b;
-    border-color: #b02a37;
-}
-
-.btn-warning:hover, .btn-warning:focus:hover, .btn-warning:active:hover {
-    color: #fff;
-    background-color: #ffca2c;
-    border-color: #ffc720;
-}
-
-.input-group-text {
-    background-color: var(--componentBackground2);
-    border-color: var(--componentBorderColor);
-    color: var(--textColor);
-    border-style: solid;
-    border-width: 1px;
-}
-
-.button:hover, .button:focus, .button:active {
-    /* background-color: var(--componentBackgroundSelect);
-    border-color: var(--componentBorderColor);
-    color: var(--textColor); */
-    border-style: solid;
-    border-width: 1px;
-    display:inline;
-    outline: none;
-    box-shadow: none;
-}
-
-.button:disabled {
-    background-color: var(--componentDisabledColor);
-    border-color: var(--componentBorderColor);
-    color: var(--textDisabledColor);
-}
-
-.small {
-    width: 100px;
-}
-
-.medium {
-    width: 350px;
-}
-
-.marSmall {
-    margin: 2px;
-}
-
-.dropdown-menu {
-    background-color: var(--panelBackgroundColor);
-    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
-    color: var(--textColor);
-    border-radius: 5px;
-    padding: 0;
-    border-style: solid;
-    border-color: var(--panelBorderColor);
-    border-width: 1px;
-    border-radius: 0;
-    min-width: 125px;
-}
-
-.hoverHand:hover {
-    cursor: hand;
-    background-color: transparent;
-}
-
-.panelHover:hover {
-    background-color: var(--hoverColor) !important;
-    color: var(--hoverTextColor) !important;
-}
-
-#conductsContainer .panelHover:hover *,
-.secretBox.panelHover:hover * {
-    color: var(--hoverTextColor) !important;
-    border-bottom-color: var(--hoverTextColor) !important;
-}
-
-#conductsContainer .panelHover:hover .bi-pencil-fill:hover,
-.secretBox.panelHover:hover .bi-pencil-fill:hover,
-.bi-pencil-fill:hover {
-    color: yellow !important;
-}
-
-#conductsContainer .panelHover:hover .bi-trash-fill:hover,
-.secretBox.panelHover:hover .bi-trash-fill:hover {
-    color: #dc3545 !important;
-}
-
-.mainAlert-success {
-    padding: 0;
-}
-
-.mainAlert-success .toast-header {
-    background-color: var(--alertBackgroundColor);
-    color: var(--alertColor);
-}
-
-.mainAlert-warning .toast-header {
-    background-color: var(--errorBackgroundColor);
-    color: var(--errorColor);
-}
-
-.mainAlert-info .toast-header {
-    background-color: var(--infoBackgroundColor);
-    color: var(--infoColor);
-}
-
-.mainAlert-warning {
-    padding: 0;
-}
-
-.mainAlert-info {
-    padding: 0;
-}
-
-.mainAlert-success .toast-body, .mainAlert-success .toast-body p, .mainAlert-warning .toast-body, .mainAlert-warning .toast-body p {
-    background-color: var(--panelBackgroundColor);
-    color: var(--textColor);
-}
-
-#whatsNewBody img {
-    width: 100%;
-}
-
-.theme-tableRowOdd td, .theme-tableRowEven td {
-    word-break: break-word;
-    vertical-align: middle;
-    white-space: normal !important;
-}
-
-.flowchart {        
-    background: var(--flowchartBackground);
-    background-image: linear-gradient(var(--flowchartBackgroundLines) 1px, transparent 0), linear-gradient(90deg, var(--flowchartBackgroundLines) 1px, transparent 0);
-    background-size: 10px 10px, 10px 10px, 10px 10px, 10px 10px;
-}
-
-input#conductsSearch, input#storageSearch {
-    height: 40px;
-    line-height: 40px;
-    padding-right: 40px;
-}
-
-input#search {
-    height: 40px;
-    line-height: 40px;
-    padding-right: 80px;
-}
-
-a.conductsAdd, a.secretsAdd, a.storageAdd {
-    background: transparent;
-    padding: 6.5px;
-    border-radius: 0 0.25rem 0.25rem 0;
-    font-size: 25px;
-    vertical-align: middle;
-    position: absolute;
-    right: 1px;
-    top: 1px;
-}
-
-a.conductsAdd.withFilter {
-    right: 55px;
-}
-
-.list-group-flush>.list-group-item {
-    border: 1px solid var(--panelBorderColor);
-    background: var(--panelBackgroundColor);
-    border-radius: 6px;
-    margin-bottom: 1rem;
-    padding: 1rem;
-    color: var(--textColor);
-    box-shadow: 0 0 4px var(--panelShadowColor1), 0 0 2px var(--panelShadowColor2);
-}
-
-.list-group-flush>.list-group-item .d-flex {
-    justify-content: space-between;
-    align-items: baseline;
-    border-bottom: 1px solid #555;
-    margin-bottom: 10px;
-    padding-bottom: 10px;
-}
-
-.list-group-flush>.list-group-item .d-flex:last-child {
-    border-bottom: 0;
-    margin-bottom: 0;
-    padding-bottom: 0;
-}
-
-.flowchart-sidebar .list-group-flush>.list-group-item {
-    box-shadow: none;
-}
-
-.cursor-pointer {
-    cursor: pointer !important;
-}
-
-.flowchart-sidebar ul.list-group.list-group-flush {
-    margin: 0 10px;
-}
-
-.flowchart-sidebar .list-group-flush>.list-group-item>.d-flex {
-    border: 0;
-    margin: 0;
-    padding: 0;
-    align-items: center;
-}
-
-.flowchart-sidebar .list-group-flush>.list-group-item>.d-flex span {
-    display: block;
-    font-size: 1.2rem !important;
-    font-weight: 600 !important;
-    max-width: calc(100% - 70px);
-    white-space: break-spaces;
-}
-
-.flowchart-sidebar .list-group-flush>.list-group-item>p {
-    margin: 0 !important;
-    white-space: normal;
-    font-size: 0.95rem !important;
-}
-
-.flowchart-sidebar .nav-tabs .nav-link {
-    color: var(--flowchartSidebarLinkText);
-}
-
-.flowchart-sidebar-container ul.nav.nav-tabs {
-    border-color: var(--flowchartSidebarBorderColor);
-}
-
-.flowchart-sidebar-container ul.nav.nav-tabs .nav-link.active {
-    border-color: var(--flowchartSidebarBorderColor);
-    border-bottom-color: var(--flowchartSidebarBackground);
-    background: var(--flowchartSidebarBackground);
-}
-
-.propertiesPanel-main .nav-tabs .nav-link, 
-.sourceDetails .nav-tabs .nav-link {
-    color: var(--textColor);
-}
-
-.propertiesPanel .nav-tabs .nav-link.active,
-.sourceDetails .nav-tabs .nav-link.active {
-    color: var(--textColorHover);
-    background-color: var(--panelBackgroundColor);
-    border-color: var(--objPanelBorderColor);
-    border-bottom-color: var(--panelBackgroundColor);
-}
-
-.propertiesPanel .nav-tabs,
-.sourceDetails .nav-tabs {
-    border-bottom: 1px solid var(--objPanelBorderColor);
-}
-
-.badge-secondary {
-    border-radius: 20px;
-    background: var(--secondaryButton);
-    font-weight: 100;
-    letter-spacing: .25px;
-}
-
-button.objectPanelButton {
-    border-top-left-radius: 0;
-    border-top-right-radius: 0;
-    z-index: 5;
-}
-
-table.propertiesPanel-help-table * {
-    color: var(--textColor);
-}
-
-.table>:not(caption)>*>* {
-    border-bottom-width: 0;
-}
-
-.table>:not(:first-child) {
-    border-top: 2px solid var(--objPanelBorderColor);
-}
-
-.myAccountTabs .nav-link.active,
-.accountManagement .nav-link.active {
-    color: var(--textColorHover);
-    background-color: var(--mainBackgroundColor);
-    border-color: var(--objPanelBorderColor);
-    border-bottom-color: var(--mainBackgroundColor);
-}
-
-.myAccountTabs .nav-link,
-.accountManagement .nav-link {
-    color: var(--textColor);
-}
-
-.myAccountTabs div.nav-tabContent,
-.accountManagement div.nav-tabContent {
-    border: 1px solid var(--objPanelBorderColor);
-    background-color: var(--mainBackgroundColor);
-    border-top: 0;
-    padding: 1rem;
-    border-radius: 0 0 4px 4px;
-}
-
-.myAccountTabs div#nav-tab,
-.accountManagement div#nav-tab-main {
-    border-color: var(--objPanelBorderColor);
-}
-
-.debugFlowEditor-in .nav-link.active,
-    .debugFlowEditor-in .nav-link:hover {
-    border-color: var(--debugFlowEditorBottomBorder);
-    border-bottom-color: var(--debugFlowEditorBottomTextarea);
-    background-color: var(--debugFlowEditorBottomTextarea);
-    color: var(--debugFlowEditorBottomLink);
-}
-
-.debugFlowEditor-in .nav-link {
-    color: var(--debugFlowEditorBottomLink);
-}
-
-.debugFlowEditor-in .theme-panelTextArea {
-    border: 1px solid var(--debugFlowEditorBottomBorder);
-    background-color: var(--debugFlowEditorBottomTextarea);
-    border-top: 0;
-    outline: none;
-    padding: 5px 10px;
-}
-
-.debugFlowEditor-in ul.nav.nav-tabs {
-    border-bottom-color: var(--debugFlowEditorBottomBorder);
-}
-
-.applicationBoxes {
-    min-height: 100px;
-}
-
-.cardSmallBoxes {
-    min-height: 100px;
-    justify-content: space-between;
-}
-
-.cardSmallBoxes h5.card-title.mb-0 {
-    min-height: 50px;
-    line-height: 50px;
-}
-
-/* .cardSmallBoxes button#installuninstall {
-    border-top-left-radius: 0;
-    border-top-right-radius: 0;
-} */
-
-.min-h-40px {
-    min-height: 40px;
-}
-
-.link:focus {
-    background-color: var(--hoverColor);
-    color: var(--hoverTextColor);
-    text-decoration: none;
-}
-
-.workersTable td,
-    .workersTable th {
-    vertical-align: middle;
-    color: var(--textColor) !important;
-}
-
-.statusTriggerBox {
-    height: 100%;
-    max-height: calc(100vh - 110px);
-}
-
-.debugFlowEditor-right .ui-main.debugFlowchart .propertiesPanel.theme-panelContainer {
-    max-height: 92%;
-    min-height: 250px;
-}
-
-.modal-body.fixedHeightModal {
-    max-height: calc(100vh - 180px);
-    height: auto;
-    overflow-y: auto;
-}
-
-.historyTable table td {
-    padding: 5px;
-    font-size: .95rem;
-}
-
-.historyTable table td:first-child {
-    padding-left: 0;
-}
-
-.historyTable table td:last-child {
-    padding-right: 0;
-}
-
-.historyTable {
-    overflow-y: auto;
-    min-height: 140px;
-    height: auto;
-    display: block;
-    margin-bottom: 60px;
-}
-
-.historyTable tr {
-    border-bottom: 1px solid var(--objPanelFooterBackground);
-}
-
-.historyTable thead th {
-    font-size: .9rem;
-    font-weight: 500;
-    padding-bottom: 6px;
-}
-
-.bigCheckbox {
-    height: 16px;
-    width: 16px;
-}
-
-.form-check-input {
-    cursor: pointer;
-}
-
-.font-weight-bold {
-    font-weight: bold;
-}
-
-select.form-control {
-    padding: 0.375rem 0.75rem 0.375rem 0.25rem;
-    -webkit-appearance: auto;
-    -moz-appearance: auto;
-    appearance: auto;
-    height: 38px;
-}
-
-.addNewAsset {
-    position: absolute;
-    right: 0;
-    width: auto;
-}
-
-.paginationText div.dataTables_wrapper div.dataTables_info {
-    padding-top: 5px;
-    font-size: .85rem;
-}
-
-.reduceTableTopMargin .dataTables_scroll {
-    margin-top: 5px !important;
-}
-
-.border-right-0 {
-    border-right: 0 !important;
-}
-
-.border-top-0 {
-    border-top: 0 !important;
-}
-
-.secretListing p.noHover,
-.conductListing td.noHover {
-    text-overflow: ellipsis;
-    overflow: hidden;
-    white-space: nowrap;
-}
-
-.filter-btn {
-    position: absolute;
-    right: 0;
-    top: 0;
-    height: 40px;
-    padding-right: 15px;
-    color: var(--filterButtonColor) !important;
-}
-
-.filter-btn:focus {
-    outline: 0;
-    box-shadow: none;
-}
-
-.panel.filterOptions {
-    position: absolute;
-    right: 25px;
-    z-index: 9;
-    padding: 0.5rem 1rem 0.5rem 0.75rem;
-}
-
-.panel.sortOptions {
-    position: absolute;
-    right: 0;
-    z-index: 9;
-    padding: 0.5rem 1rem 0.5rem 0.75rem;
-}
-
-table.conductListing {
-    border-color: var(--tableBorderColor);
-    background-color: var(--tableBackground);
-}
-
-table.conductListing tr {
-    font-size: 1rem;
-}
-
-table.conductListing th, table.conductListing td {
-    padding: 0.8rem;
-}
-
-table.conductListing tr:hover td {
-    color: var(--tableHoverColor);
-}
-
-table.conductListing tbody tr:nth-of-type(odd) {
-    background-color: var(--tableRowOdd);
-}
-
-table.conductListing span.lastUpdate {
-    line-height: 24px;
-}
-
-.floatingSearchBar .filter-btn {
-    position: absolute;
-    right: 30px;
-    top: 1px;
-    height: 38px;
-    background: transparent;
-    border: 0;
-    color: var(--filterButtonColor) !important;
-    padding-left: 5px;
-    padding-right: 5px;
-}
-
-.floatingSearchBar .sort-btn {
-    position: absolute;
-    right: 1px;
-    top: 1px;
-    height: 38px;
-    background: transparent;
-    border: 0;
-    color: var(--filterButtonColor) !important;
-    padding-left: 5px;
-    padding-right: 10px;
-}
-
-.floatingSearchBar input#conductsSearch {
-    padding-right: 100px;
-}
-
-/* CODE EDITOR - Number Panel */
-
-.monaco-editor .margin {
-    background-color: var(--codeEditorNumberPanel) !important;
-}
-
-.monaco-editor .line-numbers.active-line-number {
-    color: var(--codeEditorActiveLineNumber) !important;
-}
-
-/* CODE EDITOR - Code Area */
-
-.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input {
-    background-color: var(--codeEditorTextArea) !important;
-}
-
-.mtk1 {
-    color: var(--mtk1) !important;
-}
-
-.mtk6 {
-    color: var(--mtk6) !important;
-}
-
-.mtk7 {
-    color: var(--mtk7) !important;
-}
-
-.mtk8 {
-    color: var(--mtk8) !important;
-}
-
-.mtk9 {
-    color: var(--mtk9) !important;
-}
-
-canvas.minimap-decorations-layer {
-    background: var(--CodeEditorMiniMap) !important;
-}
-
-.monaco-editor .minimap.slider-mouseover .minimap-slider {
-    opacity: 1 !important;
-}
-
-.monaco-editor .minimap-slider .minimap-slider-horizontal {
-    background: rgb(0 0 0 / 20%) !important;
-}
-
-div#custom-cards {
-    min-height: 50vh;
-}
-
-.w-100-40px {
-    width: calc(100% - 40px);
-}
-
-button:focus:not(:focus-visible) {
-    outline: 0 !important;
-    box-shadow: none !important;
-}
-
-.statisticsTrigger .row {
-    height: calc(100% - 100px);
-}
-
-.bufferBox {
-    position: fixed;
-    z-index: 9999;
-    top: 0;
-    bottom: 0;
-    left: 0;
-    right: 0;
-    background: #00000085;
-}
-
-.bufferBox img {
-    margin-top: calc(50vh - 100px);
-    margin-left: calc(50vw - 100px);
-}
-
-.ps-2rem {
-    padding-left: 2rem;
-}
-
-.bufferSpinner {
-    display: none;
-}
-
-td.position-relative .ps-2rem {
-    padding-left: 1.618rem;
-}
-
-.singleIconBtn {
-    line-height: 38px;
-    height: 38px;
-}
-
-span#debugTitle {
-    text-overflow: ellipsis;
-    width: calc(100% - 30px);
-    overflow: hidden;
-    display: inline-block;
-    margin-right: 10px;
-}
-
-.copyIcon {
-    position:absolute;
-    right: 10px;
-    top: 10px;
-    font-size: 20px;
-}
-
-input#APITokenInput {
-    padding-right: 50px;
-    text-overflow: ellipsis;
-}
-
-.conductItem[data-enabled="False"] * {
-    color: var(--disabledConductText) !important;
-}
-
-.conductItem[data-enabled="False"] {
-    background: var(--disabledConduct);
-    box-shadow: none;
-}
-
-.addNewRawHere .row:last-child {
-    margin-bottom: 0 !important;
-}
-
-#left-button {
-    position: absolute;
-    left: 0;
-    height: 50px;
-    z-index: 9;
-    border-radius: 0;
-}
-
-#right-button {
-    position: absolute;
-    right: 245px;
-    height: 50px;
-    z-index: 9;
-    border-radius: 0;
-}
-
-.modal button.bi-x-lg {
-    color: var(--textColor);
-}
-
-.fixedTableBody tbody {
-    max-height: calc(100vh - 232px);
-    overflow-y: auto;
-    display: flex;
-    width: 100%;
-    flex-direction: column;
-    scroll-behavior: smooth;
-}
-
-.fixedTableBody.editTable tbody,
-.fixedTableBody.insiderTable tbody {
-    display: contents;
-}
-
-::-webkit-calendar-picker-indicator {
-    cursor: pointer;
-}
-
-#conductSearch {
-    position: absolute;
-    top: 0;
-    right: 20px;
-    left: auto;
-    width: 440px;
-    height: 100px;
-}
-
-#conductSearch .modal-dialog-search {
-    width: 400px;
-    min-height: auto;
-    position: absolute;
-    right: 20px;
-    top: -10px;
-    min-width: 400px;
-}
-
-#conductSearch input#searchInputConduct {
-    padding-right: 150px;
-}
-
-#searchInputConduct::-webkit-search-cancel-button{
-    display:none;
-}
-
-#conductSearch button.close {
-    border: 0;
-    background: transparent;
-    font-size: 24px;
-    padding: 8px;
-    line-height: 14px;
-    position: absolute;
-    right: 10px;
-    top: 14px;
-    color: var(--textColor);
-}
-
-#conductSearch button.sortDown {
-    border: 0;
-    background: transparent;
-    position: absolute;
-    top: 14px;
-    right: 40px;
-    font-size: 16px;
-    padding: 7px;
-    color: var(--textColor);
-}
-
-#conductSearch button.sortUp {
-    border: 0;
-    background: transparent;
-    position: absolute;
-    top: 14px;
-    right: 70px;
-    font-size: 16px;
-    padding: 7px;
-    color: var(--textColor);
-}
-
-#conductSearch .separator {
-    position: absolute;
-    top: 14px;
-    right: 110px;
-    border-right: 1px solid #bbb;
-    height: 30px;
-    color: var(--textColor);
-}
-
-#conductSearch span#searchTotal {
-    position: absolute;
-    top: 22.5px;
-    right: 124px;
-    font-size: .95rem;
-    line-height: 30px;
-    color: var(--textColor);
-    text-align: right;
-}
-
-.groupManagerTab select#multiSelectBox,
-.groupManagerTab select#selectedGroups {
-    min-height: 200px;
-    overflow: auto;
-}
-
-.groupManagerTab select#myNewRoles {
-    min-height: 100px;
-    overflow: auto;
-}
-
-.advancedSecurityTab select#myEndpoints {
-    min-height: 200px;
-    overflow: auto;
-}
-
-.advancedSecurityTab select#myNetworkAddress {
-    min-height: 100px;
-    overflow: auto;
-}
-
-ul#contextMenu {
-    padding: 0;
-    border-radius: 0;
-}
-
-ul#contextMenu li a {
-    font-size: 13px;
-    line-height: 12px;
-    padding: 10px;
-    border-bottom: 1px solid var(--contextMenuSeparator);
-	color: var(--textColor);
-}
-
-ul#contextMenu li a:hover {
-    background: var(--contextMenuHover);
-}
-
-.linkLogicPanel {
-    min-height: 280px;
-}
-
-.linkLogicPanel .propertiesPanel-main {
-    margin-bottom: 60px;
-    height: auto !important;
-    overflow-y: auto;
-}
-
-.linkLogicPanel .propertiesPanel-main table.table {
-    color: var(--textColor);
-}
-
-div#alertContainer {
-    z-index: 1060 !important;
-}
-
-.secretBox {
-    padding: 1rem;
-    border: 1px solid var(--panelBorderColor);
-    background: var(--panelBackgroundColor);
-    border-radius: 6px;
-    margin-bottom: 1rem;
-    color: var(--textColor);
-    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
-    height: 110px;
-}
-
-.secretBox > div > .d-flex:first-child {
-    border-bottom: 1px solid #555;
-    margin-bottom: 10px;
-    padding-bottom: 10px;
-}
-
-.noRecordsFound {
-    display: none;
-}
-
-.addNewRawHere .keyValueAction {
-    width: 100%;
-    flex-direction: row;
-    overflow: hidden;
-    touch-action: none;
-}
-
-.addNewRawHere .keyValueAction .d-flex {
-    width: calc(100% - 73px);
-}
-
-.addNewRawHere .keyValueAction .addKey {
-    width: 30%;
-    min-width: 96px;
-    flex: 0 0 auto;
-    max-width: calc(100% - 140px) !important;
-    position: relative;
-}
-
-.fullscreen .addNewRawHere .keyValueAction .addKey {
-    width: 120px;
-    max-width: 800px !important;
-    min-width: 100px !important;
-}
-
-.fullscreen .addNewRawHere .keyValueAction .d-flex {
-    width: 100% !important;
-}
-
-.addNewRawHere .keyValueAction .addValue {
-    min-width: 100px;
-    flex: 1 1 auto;
-    max-width: none;
-}
-
-.addNewRawHere .keyValueAction .actionButtons {
-    min-width: 73px;
-    max-width: 73px;
-    white-space: nowrap;
-}
-
-.form-control-sm {
-    font-size: 1rem;
-}
-
-.fullscreen .keyValueAction > div:first-child {
-    max-width: none;
-    min-width: 300px;
-    width: 40%;
-}
-
-div.advancedVariables .modal-body.fixedHeightModal {
-    max-height: calc(100vh - 270px);
-}
-
-div.advancedVariables .modal-dialog.modal-lg.fullscreen {
-    max-width: 80%;
-    min-height: 300px;
-    height: calc(100vh - 140px);
-    margin-bottom: 20px;
-}
-
-div.advancedVariables .modal-dialog.modal-lg.fullscreen .modal-content.panel {
-    height: 100%;
-}
-
-.resizeArrow {
-    position: absolute;
-    right: -1.25rem;
-    z-index: 9;
-    bottom: 11px;
-}
-
-.ui-resizable-e {
-    cursor: col-resize;
-    width: 1.5rem;
-    right: -1.5rem;
-}
-
-.keyParseResize {
-    min-width: 120px;
-    max-width: 80% !important;
-}
-
-.fullscreen .keyParseResize {
-    min-width: 120px;
-    max-width: 85% !important;
-}
-
-.objectACL input[type="checkbox"] {
-    height: 20px;
-    width: 20px;
-    padding: 10px;
-    display: block;
-    margin: 8px auto 0;
-}
-
-.objectACL .propertiesPanel-main {
-    margin-bottom: 60px;
-    height: auto !important;
-    overflow-y: auto;
-}
-
-.w-60 {
-    width: 60% !important;
-}
-
-.addRightsRow .d-flex:not(:nth-of-type(2)) .form-group label.d-block, 
-.addRolesRow .d-flex:not(:nth-of-type(2)) .form-group label.d-block {
-    opacity: 0 !important;
-    height: 0;
-    overflow: hidden;
-}
-
-.addRightsRow .d-flex:not(:nth-of-type(2)) .form-group .deleteRow,
-.addRolesRow  .d-flex:not(:nth-of-type(2)) .form-group .deleteRow {
-    margin-top: 0.1rem !important;
-
-}
-
-.twoLinesTruncate {
-    display: -webkit-box;
-    -webkit-line-clamp: 2;
-    -webkit-box-orient: vertical;
-    overflow: hidden;
-    text-overflow: ellipsis;
-}
-
-.integrationHeight .w-90px {
-    width: 90px !important;
-}
-
-.mh-143px {
-    min-height: 143px;
-}
-
-label.theme-panelLabel {
-    white-space: nowrap;
-}
-
-.dynamicWidth .form-switch label.form-check-label.theme-panelLabel {
-    padding-top: 0;
-}
-.searchUsers input,
-    .searchUsers button, 
-        .searchGroups input,
-            .searchGroups button {
-    height: 34px;
-}
-
-.searchUsers, .searchGroups {
-    position: absolute;
-    right: 0;
-    top: 0;
-}
-
-.searchGroups {
-    display: none;
-}
-
-#loadingScreen {
-    height: 100%;
-    width: 100%;
-    position: fixed;
-    z-index: 9999;
-    top: 0;
-    left: 0;
-    right: 0;
-    background: var(--componentBackground2);
-    color: var(--textColor)
-}
-
-.accordion {
-    box-shadow: 0 0 4px var(--panelShadowColor1), 0 0 2px var(--panelShadowColor2);
-    border-radius: 6px;
-}
-
-.accordion .list-group-flush>.list-group-item:last-child {
-    /* margin-bottom: 0; */
-    border-bottom-width: thin;
-}
-
-.accordion .accordion-body {
-    padding: 1rem 1rem 0 1rem;
-    background: var(--mainBackgroundColor);
-    border-bottom-right-radius: 6px;
-    border-bottom-left-radius: 6px;
-}
-
-.accordion .accordion-item {
-    border-radius: 6px;
-    border: 1px solid var(--panelBorderColor);
-    background: var(--panelBackgroundColor);
-}
-
-.accordion .accordion-item:first-of-type .accordion-button {
-    border-top-left-radius: 0;
-    border-top-right-radius: 0;
-}
-
-.accordion .accordion-button {
-    color: var(--textColor);
-    font-size: 1.25rem !important;
-    background-color: transparent;
-    outline: none !important;
-    box-shadow: none !important;
-    border-radius: 0 !important;
-    border-color: transparent;
-}
-
-.accordion .accordion-button:focus {
-    outline: none !important;
-    box-shadow: none !important;
-}
-
-.accordion-button:not(.collapsed) {
-    color: var(--textColorHover);
-    border-bottom: 1px solid;
-    border-color: var(--panelBorderColor) !important;
-}
-
-.accordion-button::after {
-    background-image: none;
-    content: '+';
-    text-align: center;
-    font-size: 1.5rem;
-    line-height: 1.4rem;
-}
-
-.accordion-button:not(.collapsed)::after {
-    background-image: none;
-    content: '_';
-    text-align: center;
-    font-size: 1.5rem;
-    line-height: 0;
-    margin-top: 2px;
-}
-
-.accordion .accordion-button .recordsCount {
-    font-size: 1rem;
-    position: absolute;
-    right: 55px;
-}
-
-.accordion .folderName {
-    font-size: 1.25rem !important;
-    position: absolute;
-    z-index: 100;
-    display: flex;
-    align-items: center;
-    padding: 1rem 1.25rem;
-    text-align: left;
-    border: 0;
-    border-radius: 0;
-    overflow-anchor: none;
-}
-
-.accordion .folderName:hover {
-    text-decoration: underline;
-}
-
-.accordion .accordion-header {
-    position: relative;
-}
-
-/* .conductsContainer {
-    margin-top: 1rem;
-} */
-
-#conductsContainer .favorite {
-    color: var(--textColorHover);
-    position: absolute;
-    margin-top: 9px;
-    font-size: 1.25rem !important;
-    cursor: pointer;
-}
-
-.list-group-flush>.list-group-item:last-child {
-    border-bottom-width: 1px;
-}
-
-input.bulkUninstall, input.bulkInstall {
-    height: 16px;
-    width: 16px;
-    vertical-align: text-top;
-}
-
-.bulkButtons {
-    text-align: end;
-    margin: 0;
-}
-
-.fs-7 {
-    font-size: 0.8rem;
-    font-weight: 600;
-    margin-top: 4px;
-}
-
-.page-link {
-    color: var(--textColor);
-    background-color: var(--componentBackground2);
-    border-color: var(--componentBorderColor);
-}
-
-.page-link:hover {
-    color: #fff;
-    background-color: #0b5ed7;
-    border-color: #0a58ca;
-}
-
-.page-item.active .page-link {
-    color: #fff;
-    background-color: #0b5ed7;
-    border-color: #0a58ca;
-}
-
-.page-item.disabled .page-link {
-    color: var(--textDisabledColor);
-    background-color: var(--componentBackground2);
-    border-color: var(--componentBorderColor);
-
-}
-
-.form-check-input:checked {
-    background-color: #0d6efd !important;
-}
-
-#recycleBinTable input.form-check-input {
-    height: 16px;
-    width: 16px;
-    padding: 0px;
-    display: block;
-    margin: 0 auto;
-}
-
-#recycleBinTable {
-    margin-top: 15px !important;
-    margin-bottom: 15px !important;
-}
-
-div.dataTables_wrapper div.dataTables_processing {
-    background-color: var(--panelBackgroundColor);
-    color: var(--textColor);
-}
-
-/* Main Page CSS */
-
-#topbar {
-    top: 0;
-    left: 0;
-    z-index: 1;
-    width: 100%;
-    max-width: 100%;
-    background-color: var(--menuBackgroundColor);
-    height: 50px;
-    box-shadow: none;
-    border: 0;
-    color: var(--navTextColor);
-    padding-left: 10px;
-    display: flex;
-}
-
-.home {
-    padding-left: 10px;
-    padding-right: 30px;
-    vertical-align: middle;
-    text-align: center;
-    display: flex;
-    height: 100%;
-    flex-direction: column;
-    justify-content: center;
-    line-height: unset;
-    font-weight: 600;
-    font-size: 20px;
-    color: var(--brandTextColor);
-}
-
-.home:hover {
-    color: var(--navTextColor);
-    text-decoration: none;
-}
-
-.home:active, .homeActive {
-    color: var(--navTextColor);
-    text-decoration: none;
-    background-color: unset;
-}
-
-.link {
-    padding-left: 20px;
-    padding-right: 20px;
-    text-align: center;
-    vertical-align: bottom;
-    display: flex;
-    height: 100%;
-    flex-direction: row;
-    justify-content: flex-start;
-    color: var(--navTextColor);
-    min-width: 90px;
-    column-gap: 10px;
-    align-items: center;
-}
-
-.link.active, .link.active:hover {
-    background-color: var(--hoverColor);
-    color: var(--hoverTextColor);
-}
-
-.link:hover {
-    background-color: var(--hoverColor);
-    color: var(--hoverTextColor);
-    text-decoration: none;
-}
-
-.link:focus {
-    background-color: var(--hoverColor);
-}
-
-.link:active {
-    background-color: var(--hoverColor);
-    color: var(--hoverTextColor);
-}
-
-.submitButton {
-    padding-left: 15px;
-}
-
-.linkDropdown {
-    display: block;
-    text-align: left;
-    padding: 5px 10px;
-    white-space: nowrap;
-    color: var(--navDropdownTextColor);
-}
-
-.linkIconOnly {
-    min-width: unset;
-}
-
-.modal-dialog-search {
-    max-width: 50%;
-    min-height: 25%;
-}
-
-#changeMenu {
-    font-size: 13px;
-    padding: 6px 15px;
-    line-height: 19px;
-    width: 225px;
-}
-
-#changeMenu a:hover {
-    color: var(--navTextColor);
-}
-
-ul.dropdown-menu {
-    z-index: 1; 
-    position: relative;
-}
-
-nav ul.dropdown-menu {
-    top: -2px !important;
-    background-color: var(--mainBackgroundColor);
-}
-
-#triggerChart label.unselectable.d-block {
-    white-space: nowrap;
-    text-overflow: ellipsis;
-    width: 100%;
-    overflow: hidden;
-}
-
-.conductEditor-topBar button {
-    white-space: nowrap;
-}
-
-
-
-/* Responsive Layout CSS */
-
-@media only screen and (max-width: 1160px) {
-    body {
-        min-width: auto;
-        padding-bottom: 0;
-    }
-    nav#topbar .d-flex:last-child a.link span {
-        display: none;
-    }   
-    nav#topbar .d-flex:last-child div > a.link {
-        width: 40px;
-        overflow: hidden;
-        min-width: 40px;
-        padding-left: 13px;
-    }   
-}
-
-@media only screen and (max-width: 991px) {
-    header.site-header.sticky-top {
-        box-shadow: 0 1px 10px 0px #00000052;
-    }
-    nav#topbar .d-flex:first-child a.link span {
-        display: none;
-    }    
-    nav#topbar .d-flex:first-child a.link {
-        width: 40px;
-        overflow: hidden;
-        min-width: 40px;
-        padding-left: 13px;
-    }  
-    div#container_main_overflow {
-        padding-left: 0 !important;
-        padding-right: 0 !important;
-        margin: 1rem !important;
-    }
-    input#pluginSearch {
-        width: 100% !important;
-    }
-    a#changeTenant, a#changeGroup {
-        white-space: nowrap;
-        text-overflow: ellipsis;
-        width: 100%;
-        overflow: hidden;
-    }
-    .flowchart-sidebar {
-        width: 50%;
-    }
-    .auditSearch .table-responsive.p-3 {
-        padding: 0 !important;
-        border: 0 !important;
-    }
-    .auditSearch .table-responsive.p-3 table td {
-        word-break: keep-all;
-        white-space: nowrap !important;
-    }
-}
-
-@media only screen and (max-width: 767px) {
-    .applicationBoxes {
-        min-height: 60px;
-    }
-    nav#topbar .d-flex:last-child #changeMenu span span {
-        display: none;
-    }  
-    .home {
-        padding-right: 10px;
-    }
-    .floatingSearchBar {
-        width: 100% !important;
-    }
-    #changeMenu {
-        padding: 6px 10px;
-    }
-    a#changeTenant, a#changeGroup {
-        max-width: 50px;
-    }
-    div#container_main_overflow > .container-fluid,
-    div#container_main_overflow > .container {
-        padding: 0.15rem 0.2rem !important;
-    }
-    div#container_main_overflow > .container-fluid > .container {
-        padding: 0 !important;
-    }
-    .list-group-flush>.list-group-item span.fs-4 {
-        font-size: 1.15rem !important;
-    }
-    #conductsContainer .favorite {
-        margin-top: 2px;
-    }
-    .supportAccess {
-        padding: 0.5rem 1rem !important;
-    }
-    div.dataTables_wrapper div.dataTables_filter {
-        text-align: end !important;
-    }
-    main.row.justify-content-md-center.form-signin {
-        margin: 0 !important;
-        padding-top: 0.2rem;
-    }
-    .myAccountTabs {
-        margin: 0 !important;
-        padding: 0 !important;
-    }
-    .myAccountTabs .nav-link {
-        border-radius: 0;
-        margin-bottom: 0;
-        border: 0;
-        font-size: .9rem;
-        padding: 5px 8px;
-        font-weight: bold;
-    }
-    .myAccountTabs .nav-link.active {
-        border: 0;
-        border-bottom: 1px solid;
-    }
-    .accountManagement .nav.nav-tabs {
-        padding-top: 50px;
-    }
-    .searchUsers, .searchGroups {
-        width: 99%;
-    }
-    .conductEditor-topBar {
-        padding-left: 10px;
-    }
-    .conductEditor-topBar h4 {
-        font-size: 1rem;
-    }
-    .conductEditor-topBar button {
-        padding: 0.375rem;
-    }
-    .conductEditor-topBar button span {
-        display: none;
-    }
-    .flowchart-sidebar {
-        width: 100%;
-    }
-    .propertiesPanel-main {
-        height: calc(100% - 130px);
-    }
-    .propertiesPanel {
-        min-width: calc(100% - 20px);
-        z-index: 6 !important;
-        top: 10px !important;
-        max-height: calc(100% - 35px);
-    }
-    label.theme-panelBreakTitle {
-        margin-bottom: 0;
-    }
-    .propertiesPanel-main .nav-tabs .nav-link {
-        padding: 0 7px 5px;
-        font-size: .95rem;
-        font-weight: bold;
-        border-width: 0 0 2px 0;
-        border-bottom-color: transparent;
-    }
-    .propertiesPanel .nav-tabs .nav-link.active {
-        border-bottom-color: var(--textColorHover);
-    }
-    .theme-panelBody .container-fluid {
-        padding: 0;
-    }
-    .row.dynamicWidth {
-        margin-bottom: 1rem !important;
-    }
-    .dynamicWidth > .col-3 {
-        width: 100% !important;
-        margin-bottom: 5px;
-    }
-    .propertiesPanel-help {
-        max-height: calc(100vh - 270px) !important;
-    }
-    div.advancedVariables .modal-dialog.modal-lg.fullscreen {
-        max-width: 100%;
-        min-height: 300px;
-        height: calc(100vh - 120px);
-        margin-bottom: 0px;
-        margin-top: 110px;
-    }
-    div.advancedVariables .modal-body.fixedHeightModal {
-        max-height: calc(100vh - 256px);
-    }
-    div.advancedVariables .modal-body.fixedHeightModal {
-        overflow-x: hidden;
-    }
-    .fullscreen .keyParseResize {
-        max-width: 100% !important;
-        padding-right: calc(var(--bs-gutter-x) * .5) !important;
-        margin-bottom: 10px;
-    }
-    div.advancedVariables .modal-body.fixedHeightModal .col.ps-0 {
-        padding-left: calc(var(--bs-gutter-x) * .5) !important;
-    }
-    .addScopeRowHere .col-sm-1 {
-        display: none;
-    }
-    .addScopeRowHere .col-sm-5.ps-0 {
-        padding-left: calc(var(--bs-gutter-x) * .5) !important;
-        margin-bottom: 10px;
-    }
-    .addScopeRowHere .col button.removeIfData {
-        margin-right: 0 !important;
-    }
-    table tbody tr td .fixedCell {
-        max-width: fit-content;
-    }
-    .fixedCell.secretsToken {
-        max-width: 20vw;
-    }
-}
-
-@media only screen and (max-width: 576px) {  
-    .auditSearch .form-group.pt-2 {
-        padding-top: 0 !important;
-    }
-    .auditSearch .form-group.pt-2 button.mt-3 {
-        margin-top: 0 !important;
-    }
-}
-
-@media only screen and (max-width: 421px) {  
-    .home {
-        padding-left: 0;
-        font-size: 100%;
-        white-space: nowrap;
-    }
-    #changeMenu {
-        padding-right: 7px;
-        padding-left: 7px;
-        max-width: 90px;
-        overflow: hidden;
-    }
-    nav#topbar {
-        padding-left: 10px;
-    }
-    nav#topbar .d-flex:first-child a.link {
-        width: 34px;
-        min-width: 34px;
-        padding-left: 9px;
-    }
-    a#changeTenant, a#changeGroup {
-        max-width: 30px;
-    }
-}
-
-a.readMore {
-    text-align: end;
-}
-
-.debugFlowchart div.advancedVariables .modal-dialog.modal-lg {
-    margin-top: 65px;
-}
-
-.triggeredBox {
-    height:51px;
-    min-width:51px;
-    max-width:51px;
-    border-radius: 20px;
-}
-
-.topBar {
-    top: 0;
-    left: 0;
-    right: 0;
-    z-index: 1000;
-    background-color: var(--menuBackgroundColor);
-    color: var(--textColor);
-    padding-left: 10px;
-    display: flex;
-    align-items: center;
-    height: 50px;
-    box-shadow: 0 1px 10px 0px #00000052;
-}
-
-.site-header.sticky-top {
-    position: sticky;
-    top: 0;
-    width: 100%;
-    z-index: 1100;
-    background-color: var(--menuBackgroundColor);
-    box-shadow: 0 1px 10px 0px #00000052;
-}
-
-.mainContent {
-    padding: 0 1rem;
-    margin-top: 1rem;
-    font-size: 20px;
-    background-color: var(--mainBackgroundColor);
-}
-
-.newButton {
-    display: inline-flex;
-    justify-content: center;
-    align-items: center;
-    border-radius: 2px;
-    min-width: 120px;
-    gap: 8px;
-    padding: 0 6px;
-    font-family: Roboto;
-    font-size: 12px;
-    font-style: normal;
-    font-weight: 600;
-    line-height: 24px;
-    letter-spacing: 2px;
-    text-transform: uppercase;
-    -webkit-user-select: none;
-    user-select: none;
-    cursor: pointer;
-    color: var(--Button-Primary-Label);
-    border: none;
-}
-
-.formItem {
-    margin-bottom: 1rem;
-    display: flex;
-    gap: 8px;
-    align-items: center;
-}
-
-.formItem label {
-    font-size: 1rem;
-    font-weight: 600;
-    color: var(--textColor);
-}
-
-.formContainer {
-    max-width: 500px;
-    display: flex;
-    flex-direction: column;
-}
-
-.resultsTable {
-    width: 100%;
-    border-collapse: collapse;
-    margin: 1rem 0;
-    background-color: var(--panelBackgroundColor);
-    color: var(--textColor);
-    font-size: 1rem;
-    }
-
-    .resultsTable th, .resultsTable td {
-        border: 1px solid var(--tableBorderColor);
-        padding: 8px 12px;
-        text-align: left;
-    }
-
-    .resultsTable th {
-        background-color: var(--panel2BackgroundColor);
-        font-weight: 600;
-    }
-
-    .resultsTable tr:nth-child(even) {
-        background-color: var(--tableRowEven);
-    }
-
-    .resultsTable tr:nth-child(odd) {
-        background-color: var(--tableRowOdd);
-    }
+:root {
+    /* Main */
+    --menuBackgroundColor: #181818;
+    --mainBackgroundColor: #3f3f3f;
+    --textColor: #cccccc;
+    --textColorHover: #f1f1f1;
+    --textDisabledColor: #615f5f;
+    --hoverColor: #4e4e4e;
+    --hoverTextColor: #fff;
+
+    /* Scrollbar */
+    --scrollbarColor: #8e8e8e;
+    --scrollbarBackgroundColor: #222222;
+    --scrollbarBorderColor: #f1f1f1;
+
+    /* Panel */
+    --panelBackgroundColor: #333333;
+    --panel2BackgroundColor: #444444;
+    --panelBorderColor: #000000;
+    --panelShadowColor1: rgba(0, 0, 0, 0.12);
+    --panelShadowColor2: rgba(0, 0, 0, 0.24);
+    --panelComponentBackground: #111111;
+    --panelComponentBackground-Focus: #020202;
+    --panelComponentBorder: #2e6da4;
+    --panelComponentBorder-Focus: #167bff;
+
+    /* Objects Panel */
+    --objPanelHeaderBackground: #181818;
+    --objPanelFooterBackground: #444444;
+    --objPanelBorderColor: #6c6c6c;
+    --objPanelTableRowOdd: #2a2a2a;
+    --objPanelTableRowEven: #3f3f3f;
+
+    /* Code Editor Box */
+    --codeEditorNumberPanel : #1e1e1e;
+    --codeEditorTextArea: #1e1e1e;
+    --codeEditorActiveLineNumber: #c6c6c6;
+    --codeEditorMiniMap: transparent;
+    --mtk1: #d4d4d4;
+    --mtk6: #b5cea8;
+    --mtk7: #608b4e;
+    --mtk8: #569cd6;
+    --mtk9: #dcdcdc;
+
+    /* Flowchart */
+    --flowchartBackground: #525252;
+    --flowchartBackgroundLines: #ffffff0c;
+    --flowchartSidebarBackground: #333333;
+    --flowchartSidebarLinkText: #eeeeee;
+    --flowchartSidebarText: #eeeeee;
+    --flowchartSidebarBorderColor: #eeeeee;
+    --flowchartTopBarBackground: #666;
+    --flowchartTopBarBorder: #666;
+    --contextMenuSeparator: #222;
+    --contextMenuHover: #666;
+
+    /* Component */
+    --componentBorderColor: #000000;
+    --componentBorderColorSelect: #167bff;
+    --componentBackground1: #111111;
+    --componentBackground2: #1f1f1f;
+    --componentBackgroundSelect: #030303;
+    --componentDisabledColor: #222222;
+
+    /* Alerts */
+    --errorBackgroundColor: #800303;
+    --errorColor: #adadad;
+    --warningBackgroundColor: #c57600;
+    --warningColor: #4e4e4e;
+    --alertBackgroundColor: #009b22;
+    --alertColor: #000000;
+    --infoBackgroundColor: #fff;
+    --infoColor: #000000;
+
+    /* Conducts */
+    --nodeEnableColor: #181818;
+    --nodeDisabledColor: gray;
+    --nodeErrorColor: red;
+    --nodeWarningColor: #e09b11;
+    --nodeRunningColor: green;
+    --nodeBorderColor: #595959;
+    --nodeUnknownColor: black;
+    --linkColor: green;
+    --linkTrueColor: rgb(34, 207, 34);
+    --linkFalseColor: rgb(251, 50, 50);
+    --linkRCColor: #FBB121;
+    --linkLogicColor: #D04D8A;
+    --linkAllColor: #3DBEFF;
+    --nodeTextColor: #fff;
+
+    /* Tables */
+    --tableRowOdd: #3f3f3f;
+    --tableRowEven: #484848;
+    --tableBorderColor: #000;
+
+    /* Buttons */
+    --buttonTextColor: #ccc;
+    --successButton: #181818;
+    --dangerButton: #181818;
+    --primaryButton: #181818;
+    --warningButton: #181818;
+    --secondaryButton: #181818;
+
+    --primaryBackground: #222426;
+    --primaryBorder: #3B3C3D;
+    --secondaryBackground: #3B3C3D;
+    --secondaryBorder: #5B5C5E;
+    --tertiaryBackground: #5B5C5E;
+    --tertiaryBorder: #A5A9AC;
+}
+
+html {
+    overflow: hidden;
+}
+
+*::-webkit-scrollbar {
+    width: 10px;
+}
+
+*::-webkit-scrollbar-track {
+    background-color: var(--scrollbarBackgroundColor);
+}
+
+*::-webkit-scrollbar-thumb {
+    background: var(--scrollbarColor);
+}
+
+textarea {
+    resize: vertical;
+    overflow: auto;
+    position: relative;
+}
+
+textarea::-webkit-resizer {
+    border-width: 8px;
+    border-style: solid;
+    border-color: transparent var(--scrollbarColor) var(--scrollbarColor) transparent;
+    background-color: var(--componentBackground1);
+}
+
+a {
+    color: var(--textColorHover);
+    text-decoration: none;
+    cursor: pointer;
+}
+
+a:hover {
+    color: var(--textColor);
+    text-decoration: none;
+}
+
+body {
+    background-color: var(--mainBackgroundColor);
+    color: var(--textColor);
+    font-family: sans-serif;
+}
+
+p {
+    color: var(--textColor);
+}
+
+.panel {
+    overflow-y: auto;
+    background-color: var(--panelBackgroundColor);
+    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
+    color: var(--textColor);
+    padding: 5px;
+    border-style: solid;
+    border-color: var(--panelBorderColor);
+    border-width: 1px;
+    border-radius: 5px;
+}
+
+.modal-content.panel {
+    padding: 0;
+}
+
+.modal-header {
+    border-bottom: 1px solid #555;
+}
+
+.modal-header .modal-title {
+    text-transform: capitalize;
+}
+
+.modal-header button.close.button {
+    background: transparent;
+    border: 0;
+    font-size: 30px;
+    line-height: 20px;
+}
+
+.modal-footer {
+    border-top: 1px solid #555;
+}
+
+.content {
+    overflow-y: auto;
+}
+
+.panelHeader {
+    font-size: 15px;
+    text-align: center;
+    width: 100%;
+}
+
+.chartContainer {
+    height: calc(100% - 23px);
+}
+
+/* .chart {
+    width: unset!important;
+    height: unset!important;
+} */
+
+.panelTextbox {
+    background-color: var(--panelComponentBackground);
+    color: var(--textColor);
+    border: none;
+}
+
+.panelTextbox:focus {
+    background-color: var(--panelComponentBackground);
+    color: var(--textColor);
+    border: none;
+}
+
+.form-control:focus {
+    box-shadow: none;
+}
+
+.dictTable {
+    width: 100%;
+    border-style: solid;
+    border-color: var(--panelComponentBackground);
+}
+
+.pluginPanel {
+    min-height: 250px;
+    min-width: 250px;
+}
+
+/* dataTable */
+div.dts {
+    height: calc(100% - 100px);
+}
+
+div.dts div.dataTables_scrollBody {
+    background: unset;
+    background-color: var(--panelBackgroundColor);
+    border-radius: 0 0 5px 5px;
+    border: 1px solid var(--panelBorderColor);
+    border-top: 0;
+}
+
+.dataTables_scrollHead div table {
+    border: 1px solid var(--panelBorderColor);
+}
+
+.theme-table .sorting {
+    font-size: 16px;
+}
+
+.theme-table td, .theme-table th {
+    padding: 10px;
+}
+
+table.dataTable.theme-table {
+    background-color: var(--panelBackgroundColor);
+    color: var(--textColor);
+    font-size: 16px;    
+    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
+    margin-top: 1rem !important;
+}
+
+table.display.theme-table.mt-3.dataTable.no-footer.fixedHeader-floating {
+    position: inherit !important;
+    table-layout: unset !important;
+    top: 51px !important;
+    left: auto !important;
+    margin: 0 !important;
+}
+
+.dataTables_scroll {
+    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
+    margin-top: 1rem !important;
+    border-radius: 5px;
+}
+
+#sourceTable {
+    margin-top: 0 !important;
+}
+
+.dataTables_scroll table.dataTable.theme-table {
+    box-shadow: none;
+    margin-top: 0 !important;
+    border-radius: 5px 5px 0 0;
+    min-width: 100%;
+}
+
+.dataTables_scrollHeadInner {
+    padding-right: 0 !important;
+    width: 100% !important;
+}
+
+.modalEditor div.dataTables_wrapper div.dataTables_info {
+    padding-top: 0;
+    font-size: .9rem;
+}
+
+.modalEditor div.dts {
+    height: calc(100% - 75px);
+    padding-bottom: 10px;
+}
+
+.modalEditor .dataTables_scrollBody table.dataTable.theme-table {
+    border: 0;
+    border-radius: 0;
+}
+
+div#saveObjectContainer button.btn.btn-primary.button {
+    margin-top: 1rem !important;
+}
+
+.dataTables_scrollBody table.dataTable.theme-table {
+    margin-top: 0 !important;
+}
+
+table.dataTable>thead .sorting:before, table.dataTable>thead .sorting:after, table.dataTable>thead .sorting_asc:before, table.dataTable>thead .sorting_asc:after, table.dataTable>thead .sorting_desc:before, table.dataTable>thead .sorting_desc:after, table.dataTable>thead .sorting_asc_disabled:before, table.dataTable>thead .sorting_asc_disabled:after, table.dataTable>thead .sorting_desc_disabled:before, table.dataTable>thead .sorting_desc_disabled:after {
+    bottom: 0.75em !important;
+}
+
+.theme-tableRowOdd {
+    background-color: var(--tableRowOdd);
+}
+
+.theme-tableRowEven {
+    background-color: var(--tableRowEven);
+}
+
+.fullscreen .theme-panelBody td:first-child {
+    width: 150px;
+}
+
+.theme-panelBody td:first-child {
+    max-width: 40%;
+    width: 180px;
+    word-break: break-word;
+}
+
+.theme-panelBody td:first-child label.theme-panelLabel {
+    white-space: break-spaces;
+    margin-right: 10px;
+}
+
+.theme-panelBody td {
+    padding-bottom: 5px;
+}
+
+.form-switch label.form-check-label.theme-panelLabel {
+    padding-top: 4px;
+    margin-left: 2px;
+    text-transform: capitalize;
+    word-break: break-word;
+}
+
+tbody#objectRevisionsTableBody td.fixedCell {
+    max-width: 100px;
+    overflow: hidden;
+    text-overflow: ellipsis;
+    white-space: nowrap;
+}
+
+table thead td {
+    font-size: .95rem;
+}
+
+table.table {
+    color: var(--textColor);
+    border-color: var(--objPanelBorderColor);
+}
+
+table tbody tr td .fixedCell {
+    max-width: 14vw;
+    overflow: hidden;
+    text-overflow: ellipsis;
+}
+
+@media only screen and (max-width: 1920px) {
+    table tbody tr td .fixedCell {
+        max-width: 12vw;
+    }
+    .fixedCell.secretsToken {
+        max-width: 20vw;
+    }
+}
+
+@media only screen and (max-width: 1537px) {
+    table tbody tr td .fixedCell {
+        max-width: 8vw;
+    }
+    .fixedCell.secretsToken {
+        max-width: 15vw;
+    }
+}
+
+table tbody tr td small {
+    width: 150px;
+    font-size: 12px;
+    display: block;
+    line-height: 16px;
+    margin-top: 5px;
+}
+
+/* visjs */
+.vis-network:focus {
+    outline: none;
+}
+
+.visjstimeline {
+    height: calc(100% - 22px);  
+}
+
+.vis-time-axis .vis-text {
+    color: var(--textColor);
+}
+
+/* bootstrap extras */
+
+.h-search {
+    height: 46px;
+}
+
+.h-10 {
+    height: 10%!important;
+}
+
+.h-20 {
+    height: 20%!important;
+}
+
+
+.h-30 {
+    height: 30%!important;
+}
+
+.h-40 {
+    height: 40%!important;
+}
+
+.h-60 {
+    height: 60%!important;
+}
+
+.h-60-search {
+    height: calc(60% - 70px);
+}
+
+.h-100-menu {
+    height: calc(100% - 40px);
+}
+
+.noHover:hover {
+    text-decoration: none;
+}
+
+.hide {
+    display: none!important;
+}
+
+.unselectable {
+    -webkit-touch-callout: none;
+    -webkit-user-select: none;
+    -khtml-user-select: none;
+    -moz-user-select: none;
+    -ms-user-select: none;
+    user-select: none;
+}
+
+.listcontainer {
+    background-color: var(--componentBackground1); 
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--componentBorderColor);
+}
+
+.listitem {
+    background-color: var(--componentBackground1); 
+    color: var(--textColor);
+    border-style: none;
+}
+
+.form-control:disabled, .form-control[readonly] {
+    background-color: var(--componentBackground2) !important;
+    opacity: 1;
+    color: var(--textDisabledColor);
+}
+
+.divInputBox {
+    width: 100%;
+    display: block !important;
+    background-color: var(--componentBackground2) !important;
+    color: var(--textDisabledColor) !important;
+}
+
+.textbox {
+    background-color: var(--componentBackground1);
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--componentBorderColor);
+    display: inline;
+    padding: 0.475rem 0.75rem 0.275rem;
+}
+
+.textboxError {
+    border-width: 1px;
+    border-color: var(--errorBackgroundColor);
+}
+
+.textbox:disabled {
+    background-color: var(--panelComponentBackground); 
+    color: var(--textDisabledColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--panelComponentBorder);
+}
+
+.textbox:focus {
+    background-color: var(--componentBackgroundSelect);
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--componentBorderColorSelect);
+}
+
+.textbox:hover {
+    background-color: var(--componentBackgroundSelect);
+}
+
+.textarea {
+    background-color: var(--panelComponentBackground); 
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--panelComponentBorder);
+    display:inline;
+    height: 150px !important;
+}
+
+.textarea:disabled {
+    background-color: var(--panelComponentBackground); 
+    color: var(--textDisabledColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--panelComponentBorder);
+}
+
+.textarea:focus {
+    background-color: var(--panelComponentBackground-Focus); 
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--panelComponentBorder);
+}
+
+.textarea:hover {
+    background-color: var(--panelComponentBackground-Focus); 
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    border-color: var(--panelComponentBorder);
+}
+
+.button {
+    background-color: var(--componentBackground2);
+    border-color: var(--componentBorderColor);
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+    display: inline;
+}
+
+.btn-primary, .btn-primary:focus, .btn-primary:active {
+    color: var(--buttonTextColor);
+    background-color: var(--primaryButton);
+    border-color: var(--primaryButton);
+}
+
+.btn-secondary, .btn-secondary:focus, .btn-secondary:active {
+    color: var(--buttonTextColor);
+    background-color: var(--secondaryButton);
+    border-color: var(--secondaryButton);
+}
+
+.btn-success, .btn-success:focus, .btn-success:active {
+    color: var(--buttonTextColor);
+    background-color: var(--successButton);
+    border-color: var(--successButton);
+}
+
+.btn-danger, .btn-danger:focus, .btn-danger:active {
+    color: var(--buttonTextColor);
+    background-color: var(--dangerButton);
+    border-color: var(--dangerButton);
+}
+
+.btn-warning, .btn-warning:focus, .btn-warning:active {
+    color: var(--buttonTextColor);
+    background-color: var(--warningButton);
+    border-color: var(--warningButton);
+}
+
+.btn-primary:hover, .btn-primary:focus:hover, .btn-primary:active:hover {
+    color: #fff;
+    background-color: #0b5ed7;
+    border-color: #0a58ca;
+}
+
+.btn-secondary:hover, .btn-secondary:focus:hover, .btn-secondary:active:hover {
+    color: #fff;
+    background-color: #5c636a;
+    border-color: #565e64;
+}
+
+.btn-success:hover, .btn-success:focus:hover, .btn-success:active:hover {
+    color: #fff;
+    background-color: #157347;
+    border-color: #146c43;
+}
+
+.btn-danger:hover, .btn-danger:focus:hover, .btn-danger:active:hover {
+    color: #fff;
+    background-color: #bb2d3b;
+    border-color: #b02a37;
+}
+
+.btn-warning:hover, .btn-warning:focus:hover, .btn-warning:active:hover {
+    color: #fff;
+    background-color: #ffca2c;
+    border-color: #ffc720;
+}
+
+.input-group-text {
+    background-color: var(--componentBackground2);
+    border-color: var(--componentBorderColor);
+    color: var(--textColor);
+    border-style: solid;
+    border-width: 1px;
+}
+
+.button:hover, .button:focus, .button:active {
+    /* background-color: var(--componentBackgroundSelect);
+    border-color: var(--componentBorderColor);
+    color: var(--textColor); */
+    border-style: solid;
+    border-width: 1px;
+    display:inline;
+    outline: none;
+    box-shadow: none;
+}
+
+.button:disabled {
+    background-color: var(--componentDisabledColor);
+    border-color: var(--componentBorderColor);
+    color: var(--textDisabledColor);
+}
+
+.small {
+    width: 100px;
+}
+
+.medium {
+    width: 350px;
+}
+
+.marSmall {
+    margin: 2px;
+}
+
+.dropdown-menu {
+    background-color: var(--panelBackgroundColor);
+    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
+    color: var(--textColor);
+    border-radius: 5px;
+    padding: 0;
+    border-style: solid;
+    border-color: var(--panelBorderColor);
+    border-width: 1px;
+    border-radius: 0;
+    min-width: 125px;
+}
+
+.hoverHand:hover {
+    cursor: hand;
+    background-color: transparent;
+}
+
+.panelHover:hover {
+    background-color: var(--hoverColor) !important;
+    color: var(--hoverTextColor) !important;
+}
+
+#conductsContainer .panelHover:hover *,
+.secretBox.panelHover:hover * {
+    color: var(--hoverTextColor) !important;
+    border-bottom-color: var(--hoverTextColor) !important;
+}
+
+#conductsContainer .panelHover:hover .bi-pencil-fill:hover,
+.secretBox.panelHover:hover .bi-pencil-fill:hover,
+.bi-pencil-fill:hover {
+    color: yellow !important;
+}
+
+#conductsContainer .panelHover:hover .bi-trash-fill:hover,
+.secretBox.panelHover:hover .bi-trash-fill:hover {
+    color: #dc3545 !important;
+}
+
+.mainAlert-success {
+    padding: 0;
+}
+
+.mainAlert-success .toast-header {
+    background-color: var(--alertBackgroundColor);
+    color: var(--alertColor);
+}
+
+.mainAlert-warning .toast-header {
+    background-color: var(--errorBackgroundColor);
+    color: var(--errorColor);
+}
+
+.mainAlert-info .toast-header {
+    background-color: var(--infoBackgroundColor);
+    color: var(--infoColor);
+}
+
+.mainAlert-warning {
+    padding: 0;
+}
+
+.mainAlert-info {
+    padding: 0;
+}
+
+.mainAlert-success .toast-body, .mainAlert-success .toast-body p, .mainAlert-warning .toast-body, .mainAlert-warning .toast-body p {
+    background-color: var(--panelBackgroundColor);
+    color: var(--textColor);
+}
+
+#whatsNewBody img {
+    width: 100%;
+}
+
+.theme-tableRowOdd td, .theme-tableRowEven td {
+    word-break: break-word;
+    vertical-align: middle;
+    white-space: normal !important;
+}
+
+.flowchart {        
+    background: var(--flowchartBackground);
+    background-image: linear-gradient(var(--flowchartBackgroundLines) 1px, transparent 0), linear-gradient(90deg, var(--flowchartBackgroundLines) 1px, transparent 0);
+    background-size: 10px 10px, 10px 10px, 10px 10px, 10px 10px;
+}
+
+input#conductsSearch, input#storageSearch {
+    height: 40px;
+    line-height: 40px;
+    padding-right: 40px;
+}
+
+input#search {
+    height: 40px;
+    line-height: 40px;
+    padding-right: 80px;
+}
+
+a.conductsAdd, a.secretsAdd, a.storageAdd {
+    background: transparent;
+    padding: 6.5px;
+    border-radius: 0 0.25rem 0.25rem 0;
+    font-size: 25px;
+    vertical-align: middle;
+    position: absolute;
+    right: 1px;
+    top: 1px;
+}
+
+a.conductsAdd.withFilter {
+    right: 55px;
+}
+
+.list-group-flush>.list-group-item {
+    border: 1px solid var(--panelBorderColor);
+    background: var(--panelBackgroundColor);
+    border-radius: 6px;
+    margin-bottom: 1rem;
+    padding: 1rem;
+    color: var(--textColor);
+    box-shadow: 0 0 4px var(--panelShadowColor1), 0 0 2px var(--panelShadowColor2);
+}
+
+.list-group-flush>.list-group-item .d-flex {
+    justify-content: space-between;
+    align-items: baseline;
+    border-bottom: 1px solid #555;
+    margin-bottom: 10px;
+    padding-bottom: 10px;
+}
+
+.list-group-flush>.list-group-item .d-flex:last-child {
+    border-bottom: 0;
+    margin-bottom: 0;
+    padding-bottom: 0;
+}
+
+.flowchart-sidebar .list-group-flush>.list-group-item {
+    box-shadow: none;
+}
+
+.cursor-pointer {
+    cursor: pointer !important;
+}
+
+.flowchart-sidebar ul.list-group.list-group-flush {
+    margin: 0 10px;
+}
+
+.flowchart-sidebar .list-group-flush>.list-group-item>.d-flex {
+    border: 0;
+    margin: 0;
+    padding: 0;
+    align-items: center;
+}
+
+.flowchart-sidebar .list-group-flush>.list-group-item>.d-flex span {
+    display: block;
+    font-size: 1.2rem !important;
+    font-weight: 600 !important;
+    max-width: calc(100% - 70px);
+    white-space: break-spaces;
+}
+
+.flowchart-sidebar .list-group-flush>.list-group-item>p {
+    margin: 0 !important;
+    white-space: normal;
+    font-size: 0.95rem !important;
+}
+
+.flowchart-sidebar .nav-tabs .nav-link {
+    color: var(--flowchartSidebarLinkText);
+}
+
+.flowchart-sidebar-container ul.nav.nav-tabs {
+    border-color: var(--flowchartSidebarBorderColor);
+}
+
+.flowchart-sidebar-container ul.nav.nav-tabs .nav-link.active {
+    border-color: var(--flowchartSidebarBorderColor);
+    border-bottom-color: var(--flowchartSidebarBackground);
+    background: var(--flowchartSidebarBackground);
+}
+
+.propertiesPanel-main .nav-tabs .nav-link, 
+.sourceDetails .nav-tabs .nav-link {
+    color: var(--textColor);
+}
+
+.propertiesPanel .nav-tabs .nav-link.active,
+.sourceDetails .nav-tabs .nav-link.active {
+    color: var(--textColorHover);
+    background-color: var(--panelBackgroundColor);
+    border-color: var(--objPanelBorderColor);
+    border-bottom-color: var(--panelBackgroundColor);
+}
+
+.propertiesPanel .nav-tabs,
+.sourceDetails .nav-tabs {
+    border-bottom: 1px solid var(--objPanelBorderColor);
+}
+
+.badge-secondary {
+    border-radius: 20px;
+    background: var(--secondaryButton);
+    font-weight: 100;
+    letter-spacing: .25px;
+}
+
+button.objectPanelButton {
+    border-top-left-radius: 0;
+    border-top-right-radius: 0;
+    z-index: 5;
+}
+
+table.propertiesPanel-help-table * {
+    color: var(--textColor);
+}
+
+.table>:not(caption)>*>* {
+    border-bottom-width: 0;
+}
+
+.table>:not(:first-child) {
+    border-top: 2px solid var(--objPanelBorderColor);
+}
+
+.myAccountTabs .nav-link.active,
+.accountManagement .nav-link.active {
+    color: var(--textColorHover);
+    background-color: var(--mainBackgroundColor);
+    border-color: var(--objPanelBorderColor);
+    border-bottom-color: var(--mainBackgroundColor);
+}
+
+.myAccountTabs .nav-link,
+.accountManagement .nav-link {
+    color: var(--textColor);
+}
+
+.myAccountTabs div.nav-tabContent,
+.accountManagement div.nav-tabContent {
+    border: 1px solid var(--objPanelBorderColor);
+    background-color: var(--mainBackgroundColor);
+    border-top: 0;
+    padding: 1rem;
+    border-radius: 0 0 4px 4px;
+}
+
+.myAccountTabs div#nav-tab,
+.accountManagement div#nav-tab-main {
+    border-color: var(--objPanelBorderColor);
+}
+
+.debugFlowEditor-in .nav-link.active,
+    .debugFlowEditor-in .nav-link:hover {
+    border-color: var(--debugFlowEditorBottomBorder);
+    border-bottom-color: var(--debugFlowEditorBottomTextarea);
+    background-color: var(--debugFlowEditorBottomTextarea);
+    color: var(--debugFlowEditorBottomLink);
+}
+
+.debugFlowEditor-in .nav-link {
+    color: var(--debugFlowEditorBottomLink);
+}
+
+.debugFlowEditor-in .theme-panelTextArea {
+    border: 1px solid var(--debugFlowEditorBottomBorder);
+    background-color: var(--debugFlowEditorBottomTextarea);
+    border-top: 0;
+    outline: none;
+    padding: 5px 10px;
+}
+
+.debugFlowEditor-in ul.nav.nav-tabs {
+    border-bottom-color: var(--debugFlowEditorBottomBorder);
+}
+
+.applicationBoxes {
+    min-height: 100px;
+}
+
+.cardSmallBoxes {
+    min-height: 100px;
+    justify-content: space-between;
+}
+
+.cardSmallBoxes h5.card-title.mb-0 {
+    min-height: 50px;
+    line-height: 50px;
+}
+
+/* .cardSmallBoxes button#installuninstall {
+    border-top-left-radius: 0;
+    border-top-right-radius: 0;
+} */
+
+.min-h-40px {
+    min-height: 40px;
+}
+
+.link:focus {
+    background-color: var(--hoverColor);
+    color: var(--hoverTextColor);
+    text-decoration: none;
+}
+
+.workersTable td,
+    .workersTable th {
+    vertical-align: middle;
+    color: var(--textColor) !important;
+}
+
+.statusTriggerBox {
+    height: 100%;
+    max-height: calc(100vh - 110px);
+}
+
+.debugFlowEditor-right .ui-main.debugFlowchart .propertiesPanel.theme-panelContainer {
+    max-height: 92%;
+    min-height: 250px;
+}
+
+.modal-body.fixedHeightModal {
+    max-height: calc(100vh - 180px);
+    height: auto;
+    overflow-y: auto;
+}
+
+.historyTable table td {
+    padding: 5px;
+    font-size: .95rem;
+}
+
+.historyTable table td:first-child {
+    padding-left: 0;
+}
+
+.historyTable table td:last-child {
+    padding-right: 0;
+}
+
+.historyTable {
+    overflow-y: auto;
+    min-height: 140px;
+    height: auto;
+    display: block;
+    margin-bottom: 60px;
+}
+
+.historyTable tr {
+    border-bottom: 1px solid var(--objPanelFooterBackground);
+}
+
+.historyTable thead th {
+    font-size: .9rem;
+    font-weight: 500;
+    padding-bottom: 6px;
+}
+
+.bigCheckbox {
+    height: 16px;
+    width: 16px;
+}
+
+.form-check-input {
+    cursor: pointer;
+}
+
+.font-weight-bold {
+    font-weight: bold;
+}
+
+select.form-control {
+    padding: 0.375rem 0.75rem 0.375rem 0.25rem;
+    -webkit-appearance: auto;
+    -moz-appearance: auto;
+    appearance: auto;
+    height: 38px;
+}
+
+.addNewAsset {
+    position: absolute;
+    right: 0;
+    width: auto;
+}
+
+.paginationText div.dataTables_wrapper div.dataTables_info {
+    padding-top: 5px;
+    font-size: .85rem;
+}
+
+.reduceTableTopMargin .dataTables_scroll {
+    margin-top: 5px !important;
+}
+
+.border-right-0 {
+    border-right: 0 !important;
+}
+
+.border-top-0 {
+    border-top: 0 !important;
+}
+
+.secretListing p.noHover,
+.conductListing td.noHover {
+    text-overflow: ellipsis;
+    overflow: hidden;
+    white-space: nowrap;
+}
+
+.filter-btn {
+    position: absolute;
+    right: 0;
+    top: 0;
+    height: 40px;
+    padding-right: 15px;
+    color: var(--filterButtonColor) !important;
+}
+
+.filter-btn:focus {
+    outline: 0;
+    box-shadow: none;
+}
+
+.panel.filterOptions {
+    position: absolute;
+    right: 25px;
+    z-index: 9;
+    padding: 0.5rem 1rem 0.5rem 0.75rem;
+}
+
+.panel.sortOptions {
+    position: absolute;
+    right: 0;
+    z-index: 9;
+    padding: 0.5rem 1rem 0.5rem 0.75rem;
+}
+
+table.conductListing {
+    border-color: var(--tableBorderColor);
+    background-color: var(--tableBackground);
+}
+
+table.conductListing tr {
+    font-size: 1rem;
+}
+
+table.conductListing th, table.conductListing td {
+    padding: 0.8rem;
+}
+
+table.conductListing tr:hover td {
+    color: var(--tableHoverColor);
+}
+
+table.conductListing tbody tr:nth-of-type(odd) {
+    background-color: var(--tableRowOdd);
+}
+
+table.conductListing span.lastUpdate {
+    line-height: 24px;
+}
+
+.floatingSearchBar .filter-btn {
+    position: absolute;
+    right: 30px;
+    top: 1px;
+    height: 38px;
+    background: transparent;
+    border: 0;
+    color: var(--filterButtonColor) !important;
+    padding-left: 5px;
+    padding-right: 5px;
+}
+
+.floatingSearchBar .sort-btn {
+    position: absolute;
+    right: 1px;
+    top: 1px;
+    height: 38px;
+    background: transparent;
+    border: 0;
+    color: var(--filterButtonColor) !important;
+    padding-left: 5px;
+    padding-right: 10px;
+}
+
+.floatingSearchBar input#conductsSearch {
+    padding-right: 100px;
+}
+
+/* CODE EDITOR - Number Panel */
+
+.monaco-editor .margin {
+    background-color: var(--codeEditorNumberPanel) !important;
+}
+
+.monaco-editor .line-numbers.active-line-number {
+    color: var(--codeEditorActiveLineNumber) !important;
+}
+
+/* CODE EDITOR - Code Area */
+
+.monaco-editor, .monaco-editor-background, .monaco-editor .inputarea.ime-input {
+    background-color: var(--codeEditorTextArea) !important;
+}
+
+.mtk1 {
+    color: var(--mtk1) !important;
+}
+
+.mtk6 {
+    color: var(--mtk6) !important;
+}
+
+.mtk7 {
+    color: var(--mtk7) !important;
+}
+
+.mtk8 {
+    color: var(--mtk8) !important;
+}
+
+.mtk9 {
+    color: var(--mtk9) !important;
+}
+
+canvas.minimap-decorations-layer {
+    background: var(--CodeEditorMiniMap) !important;
+}
+
+.monaco-editor .minimap.slider-mouseover .minimap-slider {
+    opacity: 1 !important;
+}
+
+.monaco-editor .minimap-slider .minimap-slider-horizontal {
+    background: rgb(0 0 0 / 20%) !important;
+}
+
+div#custom-cards {
+    min-height: 50vh;
+}
+
+.w-100-40px {
+    width: calc(100% - 40px);
+}
+
+button:focus:not(:focus-visible) {
+    outline: 0 !important;
+    box-shadow: none !important;
+}
+
+.statisticsTrigger .row {
+    height: calc(100% - 100px);
+}
+
+.bufferBox {
+    position: fixed;
+    z-index: 9999;
+    top: 0;
+    bottom: 0;
+    left: 0;
+    right: 0;
+    background: #00000085;
+}
+
+.bufferBox img {
+    margin-top: calc(50vh - 100px);
+    margin-left: calc(50vw - 100px);
+}
+
+.ps-2rem {
+    padding-left: 2rem;
+}
+
+.bufferSpinner {
+    display: none;
+}
+
+td.position-relative .ps-2rem {
+    padding-left: 1.618rem;
+}
+
+.singleIconBtn {
+    line-height: 38px;
+    height: 38px;
+}
+
+span#debugTitle {
+    text-overflow: ellipsis;
+    width: calc(100% - 30px);
+    overflow: hidden;
+    display: inline-block;
+    margin-right: 10px;
+}
+
+.copyIcon {
+    position:absolute;
+    right: 10px;
+    top: 10px;
+    font-size: 20px;
+}
+
+input#APITokenInput {
+    padding-right: 50px;
+    text-overflow: ellipsis;
+}
+
+.conductItem[data-enabled="False"] * {
+    color: var(--disabledConductText) !important;
+}
+
+.conductItem[data-enabled="False"] {
+    background: var(--disabledConduct);
+    box-shadow: none;
+}
+
+.addNewRawHere .row:last-child {
+    margin-bottom: 0 !important;
+}
+
+#left-button {
+    position: absolute;
+    left: 0;
+    height: 50px;
+    z-index: 9;
+    border-radius: 0;
+}
+
+#right-button {
+    position: absolute;
+    right: 245px;
+    height: 50px;
+    z-index: 9;
+    border-radius: 0;
+}
+
+.modal button.bi-x-lg {
+    color: var(--textColor);
+}
+
+.fixedTableBody tbody {
+    max-height: calc(100vh - 232px);
+    overflow-y: auto;
+    display: flex;
+    width: 100%;
+    flex-direction: column;
+    scroll-behavior: smooth;
+}
+
+.fixedTableBody.editTable tbody,
+.fixedTableBody.insiderTable tbody {
+    display: contents;
+}
+
+::-webkit-calendar-picker-indicator {
+    cursor: pointer;
+}
+
+#conductSearch {
+    position: absolute;
+    top: 0;
+    right: 20px;
+    left: auto;
+    width: 440px;
+    height: 100px;
+}
+
+#conductSearch .modal-dialog-search {
+    width: 400px;
+    min-height: auto;
+    position: absolute;
+    right: 20px;
+    top: -10px;
+    min-width: 400px;
+}
+
+#conductSearch input#searchInputConduct {
+    padding-right: 150px;
+}
+
+#searchInputConduct::-webkit-search-cancel-button{
+    display:none;
+}
+
+#conductSearch button.close {
+    border: 0;
+    background: transparent;
+    font-size: 24px;
+    padding: 8px;
+    line-height: 14px;
+    position: absolute;
+    right: 10px;
+    top: 14px;
+    color: var(--textColor);
+}
+
+#conductSearch button.sortDown {
+    border: 0;
+    background: transparent;
+    position: absolute;
+    top: 14px;
+    right: 40px;
+    font-size: 16px;
+    padding: 7px;
+    color: var(--textColor);
+}
+
+#conductSearch button.sortUp {
+    border: 0;
+    background: transparent;
+    position: absolute;
+    top: 14px;
+    right: 70px;
+    font-size: 16px;
+    padding: 7px;
+    color: var(--textColor);
+}
+
+#conductSearch .separator {
+    position: absolute;
+    top: 14px;
+    right: 110px;
+    border-right: 1px solid #bbb;
+    height: 30px;
+    color: var(--textColor);
+}
+
+#conductSearch span#searchTotal {
+    position: absolute;
+    top: 22.5px;
+    right: 124px;
+    font-size: .95rem;
+    line-height: 30px;
+    color: var(--textColor);
+    text-align: right;
+}
+
+.groupManagerTab select#multiSelectBox,
+.groupManagerTab select#selectedGroups {
+    min-height: 200px;
+    overflow: auto;
+}
+
+.groupManagerTab select#myNewRoles {
+    min-height: 100px;
+    overflow: auto;
+}
+
+.advancedSecurityTab select#myEndpoints {
+    min-height: 200px;
+    overflow: auto;
+}
+
+.advancedSecurityTab select#myNetworkAddress {
+    min-height: 100px;
+    overflow: auto;
+}
+
+ul#contextMenu {
+    padding: 0;
+    border-radius: 0;
+}
+
+ul#contextMenu li a {
+    font-size: 13px;
+    line-height: 12px;
+    padding: 10px;
+    border-bottom: 1px solid var(--contextMenuSeparator);
+	color: var(--textColor);
+}
+
+ul#contextMenu li a:hover {
+    background: var(--contextMenuHover);
+}
+
+.linkLogicPanel {
+    min-height: 280px;
+}
+
+.linkLogicPanel .propertiesPanel-main {
+    margin-bottom: 60px;
+    height: auto !important;
+    overflow-y: auto;
+}
+
+.linkLogicPanel .propertiesPanel-main table.table {
+    color: var(--textColor);
+}
+
+div#alertContainer {
+    z-index: 1060 !important;
+}
+
+.secretBox {
+    padding: 1rem;
+    border: 1px solid var(--panelBorderColor);
+    background: var(--panelBackgroundColor);
+    border-radius: 6px;
+    margin-bottom: 1rem;
+    color: var(--textColor);
+    box-shadow: 0 1px 6px var(--panelShadowColor1), 0 1px 4px var(--panelShadowColor2);
+    height: 110px;
+}
+
+.secretBox > div > .d-flex:first-child {
+    border-bottom: 1px solid #555;
+    margin-bottom: 10px;
+    padding-bottom: 10px;
+}
+
+.noRecordsFound {
+    display: none;
+}
+
+.addNewRawHere .keyValueAction {
+    width: 100%;
+    flex-direction: row;
+    overflow: hidden;
+    touch-action: none;
+}
+
+.addNewRawHere .keyValueAction .d-flex {
+    width: calc(100% - 73px);
+}
+
+.addNewRawHere .keyValueAction .addKey {
+    width: 30%;
+    min-width: 96px;
+    flex: 0 0 auto;
+    max-width: calc(100% - 140px) !important;
+    position: relative;
+}
+
+.fullscreen .addNewRawHere .keyValueAction .addKey {
+    width: 120px;
+    max-width: 800px !important;
+    min-width: 100px !important;
+}
+
+.fullscreen .addNewRawHere .keyValueAction .d-flex {
+    width: 100% !important;
+}
+
+.addNewRawHere .keyValueAction .addValue {
+    min-width: 100px;
+    flex: 1 1 auto;
+    max-width: none;
+}
+
+.addNewRawHere .keyValueAction .actionButtons {
+    min-width: 73px;
+    max-width: 73px;
+    white-space: nowrap;
+}
+
+.form-control-sm {
+    font-size: 1rem;
+}
+
+.fullscreen .keyValueAction > div:first-child {
+    max-width: none;
+    min-width: 300px;
+    width: 40%;
+}
+
+div.advancedVariables .modal-body.fixedHeightModal {
+    max-height: calc(100vh - 270px);
+}
+
+div.advancedVariables .modal-dialog.modal-lg.fullscreen {
+    max-width: 80%;
+    min-height: 300px;
+    height: calc(100vh - 140px);
+    margin-bottom: 20px;
+}
+
+div.advancedVariables .modal-dialog.modal-lg.fullscreen .modal-content.panel {
+    height: 100%;
+}
+
+.resizeArrow {
+    position: absolute;
+    right: -1.25rem;
+    z-index: 9;
+    bottom: 11px;
+}
+
+.ui-resizable-e {
+    cursor: col-resize;
+    width: 1.5rem;
+    right: -1.5rem;
+}
+
+.keyParseResize {
+    min-width: 120px;
+    max-width: 80% !important;
+}
+
+.fullscreen .keyParseResize {
+    min-width: 120px;
+    max-width: 85% !important;
+}
+
+.objectACL input[type="checkbox"] {
+    height: 20px;
+    width: 20px;
+    padding: 10px;
+    display: block;
+    margin: 8px auto 0;
+}
+
+.objectACL .propertiesPanel-main {
+    margin-bottom: 60px;
+    height: auto !important;
+    overflow-y: auto;
+}
+
+.w-60 {
+    width: 60% !important;
+}
+
+.addRightsRow .d-flex:not(:nth-of-type(2)) .form-group label.d-block, 
+.addRolesRow .d-flex:not(:nth-of-type(2)) .form-group label.d-block {
+    opacity: 0 !important;
+    height: 0;
+    overflow: hidden;
+}
+
+.addRightsRow .d-flex:not(:nth-of-type(2)) .form-group .deleteRow,
+.addRolesRow  .d-flex:not(:nth-of-type(2)) .form-group .deleteRow {
+    margin-top: 0.1rem !important;
+
+}
+
+.twoLinesTruncate {
+    display: -webkit-box;
+    -webkit-line-clamp: 2;
+    -webkit-box-orient: vertical;
+    overflow: hidden;
+    text-overflow: ellipsis;
+}
+
+.integrationHeight .w-90px {
+    width: 90px !important;
+}
+
+.mh-143px {
+    min-height: 143px;
+}
+
+label.theme-panelLabel {
+    white-space: nowrap;
+}
+
+.dynamicWidth .form-switch label.form-check-label.theme-panelLabel {
+    padding-top: 0;
+}
+.searchUsers input,
+    .searchUsers button, 
+        .searchGroups input,
+            .searchGroups button {
+    height: 34px;
+}
+
+.searchUsers, .searchGroups {
+    position: absolute;
+    right: 0;
+    top: 0;
+}
+
+.searchGroups {
+    display: none;
+}
+
+#loadingScreen {
+    height: 100%;
+    width: 100%;
+    position: fixed;
+    z-index: 9999;
+    top: 0;
+    left: 0;
+    right: 0;
+    background: var(--componentBackground2);
+    color: var(--textColor)
+}
+
+.accordion {
+    box-shadow: 0 0 4px var(--panelShadowColor1), 0 0 2px var(--panelShadowColor2);
+    border-radius: 6px;
+}
+
+.accordion .list-group-flush>.list-group-item:last-child {
+    /* margin-bottom: 0; */
+    border-bottom-width: thin;
+}
+
+.accordion .accordion-body {
+    padding: 1rem 1rem 0 1rem;
+    background: var(--mainBackgroundColor);
+    border-bottom-right-radius: 6px;
+    border-bottom-left-radius: 6px;
+}
+
+.accordion .accordion-item {
+    border-radius: 6px;
+    border: 1px solid var(--panelBorderColor);
+    background: var(--panelBackgroundColor);
+}
+
+.accordion .accordion-item:first-of-type .accordion-button {
+    border-top-left-radius: 0;
+    border-top-right-radius: 0;
+}
+
+.accordion .accordion-button {
+    color: var(--textColor);
+    font-size: 1.25rem !important;
+    background-color: transparent;
+    outline: none !important;
+    box-shadow: none !important;
+    border-radius: 0 !important;
+    border-color: transparent;
+}
+
+.accordion .accordion-button:focus {
+    outline: none !important;
+    box-shadow: none !important;
+}
+
+.accordion-button:not(.collapsed) {
+    color: var(--textColorHover);
+    border-bottom: 1px solid;
+    border-color: var(--panelBorderColor) !important;
+}
+
+.accordion-button::after {
+    background-image: none;
+    content: '+';
+    text-align: center;
+    font-size: 1.5rem;
+    line-height: 1.4rem;
+}
+
+.accordion-button:not(.collapsed)::after {
+    background-image: none;
+    content: '_';
+    text-align: center;
+    font-size: 1.5rem;
+    line-height: 0;
+    margin-top: 2px;
+}
+
+.accordion .accordion-button .recordsCount {
+    font-size: 1rem;
+    position: absolute;
+    right: 55px;
+}
+
+.accordion .folderName {
+    font-size: 1.25rem !important;
+    position: absolute;
+    z-index: 100;
+    display: flex;
+    align-items: center;
+    padding: 1rem 1.25rem;
+    text-align: left;
+    border: 0;
+    border-radius: 0;
+    overflow-anchor: none;
+}
+
+.accordion .folderName:hover {
+    text-decoration: underline;
+}
+
+.accordion .accordion-header {
+    position: relative;
+}
+
+/* .conductsContainer {
+    margin-top: 1rem;
+} */
+
+#conductsContainer .favorite {
+    color: var(--textColorHover);
+    position: absolute;
+    margin-top: 9px;
+    font-size: 1.25rem !important;
+    cursor: pointer;
+}
+
+.list-group-flush>.list-group-item:last-child {
+    border-bottom-width: 1px;
+}
+
+input.bulkUninstall, input.bulkInstall {
+    height: 16px;
+    width: 16px;
+    vertical-align: text-top;
+}
+
+.bulkButtons {
+    text-align: end;
+    margin: 0;
+}
+
+.fs-7 {
+    font-size: 0.8rem;
+    font-weight: 600;
+    margin-top: 4px;
+}
+
+.page-link {
+    color: var(--textColor);
+    background-color: var(--componentBackground2);
+    border-color: var(--componentBorderColor);
+}
+
+.page-link:hover {
+    color: #fff;
+    background-color: #0b5ed7;
+    border-color: #0a58ca;
+}
+
+.page-item.active .page-link {
+    color: #fff;
+    background-color: #0b5ed7;
+    border-color: #0a58ca;
+}
+
+.page-item.disabled .page-link {
+    color: var(--textDisabledColor);
+    background-color: var(--componentBackground2);
+    border-color: var(--componentBorderColor);
+
+}
+
+.form-check-input:checked {
+    background-color: #0d6efd !important;
+}
+
+#recycleBinTable input.form-check-input {
+    height: 16px;
+    width: 16px;
+    padding: 0px;
+    display: block;
+    margin: 0 auto;
+}
+
+#recycleBinTable {
+    margin-top: 15px !important;
+    margin-bottom: 15px !important;
+}
+
+div.dataTables_wrapper div.dataTables_processing {
+    background-color: var(--panelBackgroundColor);
+    color: var(--textColor);
+}
+
+/* Main Page CSS */
+
+#topbar {
+    top: 0;
+    left: 0;
+    z-index: 1;
+    width: 100%;
+    max-width: 100%;
+    background-color: var(--menuBackgroundColor);
+    height: 50px;
+    box-shadow: none;
+    border: 0;
+    color: var(--navTextColor);
+    padding-left: 10px;
+    display: flex;
+}
+
+.home {
+    padding-left: 10px;
+    padding-right: 30px;
+    vertical-align: middle;
+    text-align: center;
+    display: flex;
+    height: 100%;
+    flex-direction: column;
+    justify-content: center;
+    line-height: unset;
+    font-weight: 600;
+    font-size: 20px;
+    color: var(--brandTextColor);
+}
+
+.home:hover {
+    color: var(--navTextColor);
+    text-decoration: none;
+}
+
+.home:active, .homeActive {
+    color: var(--navTextColor);
+    text-decoration: none;
+    background-color: unset;
+}
+
+.link {
+    padding-left: 20px;
+    padding-right: 20px;
+    text-align: center;
+    vertical-align: bottom;
+    display: flex;
+    height: 100%;
+    flex-direction: row;
+    justify-content: flex-start;
+    color: var(--navTextColor);
+    min-width: 90px;
+    column-gap: 10px;
+    align-items: center;
+}
+
+.link.active, .link.active:hover {
+    background-color: var(--hoverColor);
+    color: var(--hoverTextColor);
+}
+
+.link:hover {
+    background-color: var(--hoverColor);
+    color: var(--hoverTextColor);
+    text-decoration: none;
+}
+
+.link:focus {
+    background-color: var(--hoverColor);
+}
+
+.link:active {
+    background-color: var(--hoverColor);
+    color: var(--hoverTextColor);
+}
+
+.submitButton {
+    padding-left: 15px;
+}
+
+.linkDropdown {
+    display: block;
+    text-align: left;
+    padding: 5px 10px;
+    white-space: nowrap;
+    color: var(--navDropdownTextColor);
+}
+
+.linkIconOnly {
+    min-width: unset;
+}
+
+.modal-dialog-search {
+    max-width: 50%;
+    min-height: 25%;
+}
+
+#changeMenu {
+    font-size: 13px;
+    padding: 6px 15px;
+    line-height: 19px;
+    width: 225px;
+}
+
+#changeMenu a:hover {
+    color: var(--navTextColor);
+}
+
+ul.dropdown-menu {
+    z-index: 1; 
+    position: relative;
+}
+
+nav ul.dropdown-menu {
+    top: -2px !important;
+    background-color: var(--mainBackgroundColor);
+}
+
+#triggerChart label.unselectable.d-block {
+    white-space: nowrap;
+    text-overflow: ellipsis;
+    width: 100%;
+    overflow: hidden;
+}
+
+.conductEditor-topBar button {
+    white-space: nowrap;
+}
+
+
+
+/* Responsive Layout CSS */
+
+@media only screen and (max-width: 1160px) {
+    body {
+        min-width: auto;
+        padding-bottom: 0;
+    }
+    nav#topbar .d-flex:last-child a.link span {
+        display: none;
+    }   
+    nav#topbar .d-flex:last-child div > a.link {
+        width: 40px;
+        overflow: hidden;
+        min-width: 40px;
+        padding-left: 13px;
+    }   
+}
+
+@media only screen and (max-width: 991px) {
+    header.site-header.sticky-top {
+        box-shadow: 0 1px 10px 0px #00000052;
+    }
+    nav#topbar .d-flex:first-child a.link span {
+        display: none;
+    }    
+    nav#topbar .d-flex:first-child a.link {
+        width: 40px;
+        overflow: hidden;
+        min-width: 40px;
+        padding-left: 13px;
+    }  
+    div#container_main_overflow {
+        padding-left: 0 !important;
+        padding-right: 0 !important;
+        margin: 1rem !important;
+    }
+    input#pluginSearch {
+        width: 100% !important;
+    }
+    a#changeTenant, a#changeGroup {
+        white-space: nowrap;
+        text-overflow: ellipsis;
+        width: 100%;
+        overflow: hidden;
+    }
+    .flowchart-sidebar {
+        width: 50%;
+    }
+    .auditSearch .table-responsive.p-3 {
+        padding: 0 !important;
+        border: 0 !important;
+    }
+    .auditSearch .table-responsive.p-3 table td {
+        word-break: keep-all;
+        white-space: nowrap !important;
+    }
+}
+
+@media only screen and (max-width: 767px) {
+    .applicationBoxes {
+        min-height: 60px;
+    }
+    nav#topbar .d-flex:last-child #changeMenu span span {
+        display: none;
+    }  
+    .home {
+        padding-right: 10px;
+    }
+    .floatingSearchBar {
+        width: 100% !important;
+    }
+    #changeMenu {
+        padding: 6px 10px;
+    }
+    a#changeTenant, a#changeGroup {
+        max-width: 50px;
+    }
+    div#container_main_overflow > .container-fluid,
+    div#container_main_overflow > .container {
+        padding: 0.15rem 0.2rem !important;
+    }
+    div#container_main_overflow > .container-fluid > .container {
+        padding: 0 !important;
+    }
+    .list-group-flush>.list-group-item span.fs-4 {
+        font-size: 1.15rem !important;
+    }
+    #conductsContainer .favorite {
+        margin-top: 2px;
+    }
+    .supportAccess {
+        padding: 0.5rem 1rem !important;
+    }
+    div.dataTables_wrapper div.dataTables_filter {
+        text-align: end !important;
+    }
+    main.row.justify-content-md-center.form-signin {
+        margin: 0 !important;
+        padding-top: 0.2rem;
+    }
+    .myAccountTabs {
+        margin: 0 !important;
+        padding: 0 !important;
+    }
+    .myAccountTabs .nav-link {
+        border-radius: 0;
+        margin-bottom: 0;
+        border: 0;
+        font-size: .9rem;
+        padding: 5px 8px;
+        font-weight: bold;
+    }
+    .myAccountTabs .nav-link.active {
+        border: 0;
+        border-bottom: 1px solid;
+    }
+    .accountManagement .nav.nav-tabs {
+        padding-top: 50px;
+    }
+    .searchUsers, .searchGroups {
+        width: 99%;
+    }
+    .conductEditor-topBar {
+        padding-left: 10px;
+    }
+    .conductEditor-topBar h4 {
+        font-size: 1rem;
+    }
+    .conductEditor-topBar button {
+        padding: 0.375rem;
+    }
+    .conductEditor-topBar button span {
+        display: none;
+    }
+    .flowchart-sidebar {
+        width: 100%;
+    }
+    .propertiesPanel-main {
+        height: calc(100% - 130px);
+    }
+    .propertiesPanel {
+        min-width: calc(100% - 20px);
+        z-index: 6 !important;
+        top: 10px !important;
+        max-height: calc(100% - 35px);
+    }
+    label.theme-panelBreakTitle {
+        margin-bottom: 0;
+    }
+    .propertiesPanel-main .nav-tabs .nav-link {
+        padding: 0 7px 5px;
+        font-size: .95rem;
+        font-weight: bold;
+        border-width: 0 0 2px 0;
+        border-bottom-color: transparent;
+    }
+    .propertiesPanel .nav-tabs .nav-link.active {
+        border-bottom-color: var(--textColorHover);
+    }
+    .theme-panelBody .container-fluid {
+        padding: 0;
+    }
+    .row.dynamicWidth {
+        margin-bottom: 1rem !important;
+    }
+    .dynamicWidth > .col-3 {
+        width: 100% !important;
+        margin-bottom: 5px;
+    }
+    .propertiesPanel-help {
+        max-height: calc(100vh - 270px) !important;
+    }
+    div.advancedVariables .modal-dialog.modal-lg.fullscreen {
+        max-width: 100%;
+        min-height: 300px;
+        height: calc(100vh - 120px);
+        margin-bottom: 0px;
+        margin-top: 110px;
+    }
+    div.advancedVariables .modal-body.fixedHeightModal {
+        max-height: calc(100vh - 256px);
+    }
+    div.advancedVariables .modal-body.fixedHeightModal {
+        overflow-x: hidden;
+    }
+    .fullscreen .keyParseResize {
+        max-width: 100% !important;
+        padding-right: calc(var(--bs-gutter-x) * .5) !important;
+        margin-bottom: 10px;
+    }
+    div.advancedVariables .modal-body.fixedHeightModal .col.ps-0 {
+        padding-left: calc(var(--bs-gutter-x) * .5) !important;
+    }
+    .addScopeRowHere .col-sm-1 {
+        display: none;
+    }
+    .addScopeRowHere .col-sm-5.ps-0 {
+        padding-left: calc(var(--bs-gutter-x) * .5) !important;
+        margin-bottom: 10px;
+    }
+    .addScopeRowHere .col button.removeIfData {
+        margin-right: 0 !important;
+    }
+    table tbody tr td .fixedCell {
+        max-width: fit-content;
+    }
+    .fixedCell.secretsToken {
+        max-width: 20vw;
+    }
+}
+
+@media only screen and (max-width: 576px) {  
+    .auditSearch .form-group.pt-2 {
+        padding-top: 0 !important;
+    }
+    .auditSearch .form-group.pt-2 button.mt-3 {
+        margin-top: 0 !important;
+    }
+}
+
+@media only screen and (max-width: 421px) {  
+    .home {
+        padding-left: 0;
+        font-size: 100%;
+        white-space: nowrap;
+    }
+    #changeMenu {
+        padding-right: 7px;
+        padding-left: 7px;
+        max-width: 90px;
+        overflow: hidden;
+    }
+    nav#topbar {
+        padding-left: 10px;
+    }
+    nav#topbar .d-flex:first-child a.link {
+        width: 34px;
+        min-width: 34px;
+        padding-left: 9px;
+    }
+    a#changeTenant, a#changeGroup {
+        max-width: 30px;
+    }
+}
+
+a.readMore {
+    text-align: end;
+}
+
+.debugFlowchart div.advancedVariables .modal-dialog.modal-lg {
+    margin-top: 65px;
+}
+
+.triggeredBox {
+    height:51px;
+    min-width:51px;
+    max-width:51px;
+    border-radius: 20px;
+}
+
+.topBar {
+    top: 0;
+    left: 0;
+    right: 0;
+    z-index: 1000;
+    background-color: var(--menuBackgroundColor);
+    color: var(--textColor);
+    padding-left: 10px;
+    display: flex;
+    align-items: center;
+    height: 50px;
+    box-shadow: 0 1px 10px 0px #00000052;
+}
+
+.site-header.sticky-top {
+    position: sticky;
+    top: 0;
+    width: 100%;
+    z-index: 1100;
+    background-color: var(--menuBackgroundColor);
+    box-shadow: 0 1px 10px 0px #00000052;
+}
+
+.mainContent {
+    padding: 0 1rem;
+    margin-top: 1rem;
+    font-size: 20px;
+    background-color: var(--mainBackgroundColor);
+}
+
+.newButton {
+    display: inline-flex;
+    justify-content: center;
+    align-items: center;
+    border-radius: 2px;
+    min-width: 120px;
+    gap: 8px;
+    padding: 0 6px;
+    font-family: Roboto;
+    font-size: 12px;
+    font-style: normal;
+    font-weight: 600;
+    line-height: 24px;
+    letter-spacing: 2px;
+    text-transform: uppercase;
+    -webkit-user-select: none;
+    user-select: none;
+    cursor: pointer;
+    color: var(--Button-Primary-Label);
+    border: none;
+}
+
+.formItem {
+    margin-bottom: 1rem;
+    display: flex;
+    gap: 8px;
+    align-items: center;
+}
+
+.formItem label {
+    font-size: 1rem;
+    font-weight: 600;
+    color: var(--textColor);
+}
+
+.formContainer {
+    max-width: 500px;
+    display: flex;
+    flex-direction: column;
+}
+
+.resultsTable {
+    width: 100%;
+    border-collapse: collapse;
+    margin: 1rem 0;
+    background-color: var(--panelBackgroundColor);
+    color: var(--textColor);
+    font-size: 1rem;
+    }
+
+    .resultsTable th, .resultsTable td {
+        border: 1px solid var(--tableBorderColor);
+        padding: 8px 12px;
+        text-align: left;
+    }
+
+    .resultsTable th {
+        background-color: var(--panel2BackgroundColor);
+        font-weight: 600;
+    }
+
+    .resultsTable tr:nth-child(even) {
+        background-color: var(--tableRowEven);
+    }
+
+    .resultsTable tr:nth-child(odd) {
+        background-color: var(--tableRowOdd);
+    }
 }
\ No newline at end of file
diff --git a/web/vite.config.js b/web/vite.config.js
index 69f9bed..955ad28 100644
--- a/web/vite.config.js
+++ b/web/vite.config.js
@@ -1,19 +1,19 @@
-import { defineConfig } from 'vite'
-import react from '@vitejs/plugin-react'
-
-// https://vitejs.dev/config/
-export default defineConfig({
-  plugins: [react()],
-  server: {
-    host: '127.0.0.1',
-    port: 5015,
-    hmr : {
-      clientPort: 5015
-    }
-  },
-  preview: {
-    host: '127.0.0.1',
-    port: 5015
-  },
-  base: '/'
-})
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+
+// https://vitejs.dev/config/
+export default defineConfig({
+  plugins: [react()],
+  server: {
+    host: '127.0.0.1',
+    port: 5015,
+    hmr : {
+      clientPort: 5015
+    }
+  },
+  preview: {
+    host: '127.0.0.1',
+    port: 5015
+  },
+  base: '/'
+})
